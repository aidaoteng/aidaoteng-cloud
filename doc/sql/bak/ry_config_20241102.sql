/*
SQLyog Ultimate v13.1.1 (64 bit)
MySQL - 8.0.35 : Database - ry_config
*********************************************************************
*/

/*!40101 SET NAMES utf8 */;

/*!40101 SET SQL_MODE=''*/;

/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
CREATE DATABASE /*!32312 IF NOT EXISTS*/`ry_config` /*!40100 DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci */ /*!80016 DEFAULT ENCRYPTION='N' */;

USE `ry_config`;

/*Table structure for table `config_info` */

DROP TABLE IF EXISTS `config_info`;

CREATE TABLE `config_info` (
  `id` bigint NOT NULL AUTO_INCREMENT COMMENT 'id',
  `data_id` varchar(255) COLLATE utf8mb3_bin NOT NULL COMMENT 'data_id',
  `group_id` varchar(128) COLLATE utf8mb3_bin DEFAULT NULL COMMENT 'group_id',
  `content` longtext COLLATE utf8mb3_bin NOT NULL COMMENT 'content',
  `md5` varchar(32) COLLATE utf8mb3_bin DEFAULT NULL COMMENT 'md5',
  `gmt_create` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `gmt_modified` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '修改时间',
  `src_user` text COLLATE utf8mb3_bin COMMENT 'source user',
  `src_ip` varchar(50) COLLATE utf8mb3_bin DEFAULT NULL COMMENT 'source ip',
  `app_name` varchar(128) COLLATE utf8mb3_bin DEFAULT NULL COMMENT 'app_name',
  `tenant_id` varchar(128) COLLATE utf8mb3_bin DEFAULT '' COMMENT '租户字段',
  `c_desc` varchar(256) COLLATE utf8mb3_bin DEFAULT NULL COMMENT 'configuration description',
  `c_use` varchar(64) COLLATE utf8mb3_bin DEFAULT NULL COMMENT 'configuration usage',
  `effect` varchar(64) COLLATE utf8mb3_bin DEFAULT NULL COMMENT '配置生效的描述',
  `type` varchar(64) COLLATE utf8mb3_bin DEFAULT NULL COMMENT '配置的类型',
  `c_schema` text COLLATE utf8mb3_bin COMMENT '配置的模式',
  `encrypted_data_key` text COLLATE utf8mb3_bin NOT NULL COMMENT '密钥',
  PRIMARY KEY (`id`),
  UNIQUE KEY `uk_configinfo_datagrouptenant` (`data_id`,`group_id`,`tenant_id`)
) ENGINE=InnoDB AUTO_INCREMENT=130 DEFAULT CHARSET=utf8mb3 COLLATE=utf8mb3_bin COMMENT='config_info';

/*Data for the table `config_info` */

insert  into `config_info`(`id`,`data_id`,`group_id`,`content`,`md5`,`gmt_create`,`gmt_modified`,`src_user`,`src_ip`,`app_name`,`tenant_id`,`c_desc`,`c_use`,`effect`,`type`,`c_schema`,`encrypted_data_key`) values 
(1,'application-common.yml','DEFAULT_GROUP','server:\n  # undertow 配置\n  undertow:\n    # HTTP post内容的最大大小。当值为-1时，默认值为大小是无限的\n    max-http-post-size: -1\n    # 以下的配置会影响buffer,这些buffer会用于服务器连接的IO操作,有点类似netty的池化内存管理\n    # 每块buffer的空间大小,越小的空间被利用越充分\n    buffer-size: 512\n    # 是否分配的直接内存\n    direct-buffers: true\n    threads:\n      # 设置IO线程数, 它主要执行非阻塞的任务,它们会负责多个连接, 默认设置每个CPU核心一个线程\n      io: 8\n      # 阻塞任务线程池, 当执行类似servlet请求阻塞操作, undertow会从这个线程池中取得线程,它的值设置取决于系统的负载\n      worker: 256\n\ndubbo:\n  application:\n    # 关闭qos端口避免单机多生产者端口冲突 如需使用自行开启\n    qos-enable: false\n  protocol:\n    # 如需使用 Triple 3.0 新协议 可查看官方文档\n    # 使用 dubbo 协议通信\n    name: dubbo\n    # dubbo 协议端口(-1表示自增端口,从20880开始)\n    port: -1\n    # 指定dubbo协议注册ip\n    # host: 192.168.0.100\n  # 消费者相关配置\n  consumer:\n    # 超时时间\n    timeout: 3000\n  # 自定义配置\n  custom:\n    # 全局请求log\n    request-log: true\n    # info 基础信息 param 参数信息 full 全部\n    log-level: info\n\nspring:\n  threads:\n    # 开启虚拟线程 仅jdk21可用\n    virtual:\n      enabled: false\n  # 资源信息\n  messages:\n    # 国际化资源文件路径\n    basename: i18n/messages\n  servlet:\n    multipart:\n      # 整个请求大小限制\n      max-request-size: 20MB\n      # 上传单个文件大小限制\n      max-file-size: 10MB\n  mvc:\n    # 设置静态资源路径 防止所有请求都去查静态资源\n    static-path-pattern: /static/**\n    format:\n      date-time: yyyy-MM-dd HH:mm:ss\n  #jackson配置\n  jackson:\n    # 日期格式化\n    date-format: yyyy-MM-dd HH:mm:ss\n    serialization:\n      # 格式化输出\n      INDENT_OUTPUT: false\n      # 忽略无法转换的对象\n      fail_on_empty_beans: false\n    deserialization:\n      # 允许对象忽略json中不存在的属性\n      fail_on_unknown_properties: false\n  cloud:\n    nacos:\n      discovery:\n        metadata:\n          # admin 监控账号密码\n          username: ruoyi\n          userpassword: 123456\n    # sentinel 配置\n    sentinel:\n      # sentinel 开关\n      enabled: true\n      transport:\n        # dashboard控制台服务名 用于服务发现\n        # 如无此配置将默认使用下方 dashboard 配置直接注册\n        server-name: ruoyi-sentinel-dashboard\n        # 客户端指定注册的ip 用于多网卡ip不稳点使用\n        # client-ip:\n        # 控制台地址 从1.3.0开始使用 server-name 注册\n        # dashboard: localhost:8718\n\n    bus:\n      id: ${spring.application.name}\n      base-packages: org.dromara.**.event\n  # 消息总线 也可以使用 kafka 参考 spring-cloud-bus 用法\n  rabbitmq:\n    host: localhost\n    port: 5672\n    username: ruoyi\n    password: ruoyi123\n\n  # redis通用配置 子服务可以自行配置进行覆盖\n  data:\n    redis:\n      host: 127.0.0.1\n      port: 6379\n      # redis 密码必须配置\n      password: admin\n      database: 0\n      # 需要使用数字\n      timeout: 10000\n      ssl.enabled: false\n\n# redisson 配置\nredisson:\n  # redis key前缀\n  keyPrefix:\n  # 线程池数量\n  threads: 4\n  # Netty线程池数量\n  nettyThreads: 8\n  # 单节点配置\n  singleServerConfig:\n    # 客户端名称\n    clientName: ${spring.application.name}\n    # 最小空闲连接数\n    connectionMinimumIdleSize: 8\n    # 连接池大小\n    connectionPoolSize: 32\n    # 连接空闲超时，单位：毫秒\n    idleConnectionTimeout: 10000\n    # 命令等待超时，单位：毫秒\n    timeout: 3000\n    # 发布和订阅连接池大小\n    subscriptionConnectionPoolSize: 50\n\n# 分布式锁 lock4j 全局配置\nlock4j:\n  # 获取分布式锁超时时间，默认为 3000 毫秒\n  acquire-timeout: 3000\n  # 分布式锁的超时时间，默认为 30 秒\n  expire: 30000\n\n# 暴露监控端点\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: \'*\'\n  endpoint:\n    health:\n      show-details: ALWAYS\n    logfile:\n      external-file: ./logs/${spring.application.name}/console.log\n\n# 日志配置\n# logging:\n#   level:\n#     org.springframework: warn\n#     org.apache.dubbo: warn\n#     com.alibaba.nacos: warn\n#     com.alibaba.cloud.sentinel: warn\n#     org.mybatis.spring.mapper: error\n#     org.apache.dubbo.config: error\n#     # 临时处理 spring 调整日志级别导致启动警告问题 不影响使用等待 alibaba 适配\n#     org.springframework.context.support.PostProcessorRegistrationDelegate: error\n#   config: classpath:logback-plus.xml\n\nlogging:\n  level:\n    root: info\n    org.dromara: trace\n\n\n# Sa-Token配置\nsa-token:\n  # token名称 (同时也是cookie名称)\n  token-name: Authorization\n  # 开启内网服务调用鉴权(不允许越过gateway访问内网服务 保障服务安全)\n  check-same-token: true\n  # 是否允许同一账号并发登录 (为true时允许一起登录, 为false时新登录挤掉旧登录)\n  is-concurrent: true\n  # 在多人登录同一账号时，是否共用一个token (为true时所有登录共用一个token, 为false时每次登录新建一个token)\n  is-share: false\n  # jwt秘钥\n  jwt-secret-key: abcdefghijklmnopqrstuvwxyz\n\n# MyBatisPlus配置\n# https://baomidou.com/config/\nmybatis-plus:\n  # 多包名使用 例如 org.dromara.**.mapper,org.xxx.**.mapper\n  mapperPackage: org.dromara.**.mapper\n  # 对应的 XML 文件位置\n  mapperLocations: classpath*:mapper/**/*Mapper.xml\n  # 实体扫描，多个package用逗号或者分号分隔\n  typeAliasesPackage: org.dromara.**.domain\n  global-config:\n    dbConfig:\n      # 主键类型\n      # AUTO 自增 NONE 空 INPUT 用户输入 ASSIGN_ID 雪花 ASSIGN_UUID 唯一 UUID\n      # 如需改为自增 需要将数据库表全部设置为自增\n      idType: ASSIGN_ID\n\n# 数据加密\nmybatis-encryptor:\n  # 是否开启加密\n  enable: false\n  # 默认加密算法\n  algorithm: BASE64\n  # 编码方式 BASE64/HEX。默认BASE64\n  encode: BASE64\n  # 安全秘钥 对称算法的秘钥 如：AES，SM4\n  password:\n  # 公私钥 非对称算法的公私钥 如：SM2，RSA\n  publicKey:\n  privateKey:\n\n# api接口加密\napi-decrypt:\n  # 是否开启全局接口加密\n  enabled: true\n  # AES 加密头标识\n  headerFlag: encrypt-key\n  # 响应加密公钥 非对称算法的公私钥 如：SM2，RSA 使用者请自行更换\n  # 对应前端解密私钥 MIIBVAIBADANBgkqhkiG9w0BAQEFAASCAT4wggE6AgEAAkEAmc3CuPiGL/LcIIm7zryCEIbl1SPzBkr75E2VMtxegyZ1lYRD+7TZGAPkvIsBcaMs6Nsy0L78n2qh+lIZMpLH8wIDAQABAkEAk82Mhz0tlv6IVCyIcw/s3f0E+WLmtPFyR9/WtV3Y5aaejUkU60JpX4m5xNR2VaqOLTZAYjW8Wy0aXr3zYIhhQQIhAMfqR9oFdYw1J9SsNc+CrhugAvKTi0+BF6VoL6psWhvbAiEAxPPNTmrkmrXwdm/pQQu3UOQmc2vCZ5tiKpW10CgJi8kCIFGkL6utxw93Ncj4exE/gPLvKcT+1Emnoox+O9kRXss5AiAMtYLJDaLEzPrAWcZeeSgSIzbL+ecokmFKSDDcRske6QIgSMkHedwND1olF8vlKsJUGK3BcdtM8w4Xq7BpSBwsloE=\n  publicKey: MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAJnNwrj4hi/y3CCJu868ghCG5dUj8wZK++RNlTLcXoMmdZWEQ/u02RgD5LyLAXGjLOjbMtC+/J9qofpSGTKSx/MCAwEAAQ==\n  # 请求解密私钥 非对称算法的公私钥 如：SM2，RSA 使用者请自行更换\n  # 对应前端加密公钥 MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAKoR8mX0rGKLqzcWmOzbfj64K8ZIgOdHnzkXSOVOZbFu/TJhZ7rFAN+eaGkl3C4buccQd/EjEsj9ir7ijT7h96MCAwEAAQ==\n  privateKey: MIIBVAIBADANBgkqhkiG9w0BAQEFAASCAT4wggE6AgEAAkEAqhHyZfSsYourNxaY7Nt+PrgrxkiA50efORdI5U5lsW79MmFnusUA355oaSXcLhu5xxB38SMSyP2KvuKNPuH3owIDAQABAkAfoiLyL+Z4lf4Myxk6xUDgLaWGximj20CUf+5BKKnlrK+Ed8gAkM0HqoTt2UZwA5E2MzS4EI2gjfQhz5X28uqxAiEA3wNFxfrCZlSZHb0gn2zDpWowcSxQAgiCstxGUoOqlW8CIQDDOerGKH5OmCJ4Z21v+F25WaHYPxCFMvwxpcw99EcvDQIgIdhDTIqD2jfYjPTY8Jj3EDGPbH2HHuffvflECt3Ek60CIQCFRlCkHpi7hthhYhovyloRYsM+IS9h/0BzlEAuO0ktMQIgSPT3aFAgJYwKpqRYKlLDVcflZFCKY7u3UP8iWi1Qw0Y=\n\n# 防止XSS攻击\nxss:\n  enabled: true\n  excludeUrls:\n    - /system/notice\n    - /workflow/model/save\n    - /workflow/model/editModelXml\n\n# 接口文档配置\nspringdoc:\n  api-docs:\n    # 是否开启接口文档\n    enabled: true\n#  swagger-ui:\n#    # 持久化认证数据\n#    persistAuthorization: true\n  info:\n    # 标题\n    title: \'标题：RuoYi-Cloud-Plus微服务权限管理系统_接口文档\'\n    # 描述\n    description: \'描述：微服务权限管理系统, 具体包括XXX,XXX模块...\'\n    # 版本\n    version: \'版本号：系统版本...\'\n    # 作者信息\n    contact:\n      name: Lion Li\n      email: crazylionli@163.com\n      url: https://gitee.com/dromara/RuoYi-Cloud-Plus\n  components:\n    # 鉴权方式配置\n    security-schemes:\n      apiKey:\n        type: APIKEY\n        in: HEADER\n        name: ${sa-token.token-name}\n\n# seata配置\nseata:\n  # 是否启用\n  enabled: false\n  # Seata 应用编号，默认为应用名\n  application-id: ${spring.application.name}\n  # Seata 事务组编号，用于 TC 集群名\n  tx-service-group: ${spring.application.name}-group\n\n# 多租户配置\ntenant:\n  # 是否开启\n  enable: false\n  # 排除表\n  excludes:\n    - sys_menu\n    - sys_tenant\n    - sys_tenant_package\n    - sys_role_dept\n    - sys_role_menu\n    - sys_user_post\n    - sys_user_role\n    - sys_client\n    - sys_oss_config\n','886c20fafba53daf81336c1afecb8c0d','2022-01-09 15:18:55','2024-11-02 08:21:01','nacos','192.168.2.101','','dev','通用配置基础配置','','','yaml','',''),
(2,'datasource.yml','DEFAULT_GROUP','datasource:\n  system-master:\n    # jdbc 所有参数配置参考 https://lionli.blog.csdn.net/article/details/122018562\n    # rewriteBatchedStatements=true 批处理优化 大幅提升批量插入更新删除性能\n    url: jdbc:mysql://localhost:3306/ry_cloud?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8&rewriteBatchedStatements=true&allowPublicKeyRetrieval=true\n    username: root\n    password: admin\n  gen:\n    url: jdbc:mysql://localhost:3306/ry_cloud?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8&rewriteBatchedStatements=true&allowPublicKeyRetrieval=true\n    username: root\n    password: admin\n  job:\n    url: jdbc:mysql://localhost:3306/ry_job?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8&rewriteBatchedStatements=true&allowPublicKeyRetrieval=true\n    username: root\n    password: admin\n  workflow:\n    url: jdbc:mysql://localhost:3306/ry_workflow?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8&rewriteBatchedStatements=true&allowPublicKeyRetrieval=true&nullCatalogMeansCurrent=true\n    username: root\n    password: admin\n#  system-oracle:\n#    url: jdbc:oracle:thin:@//localhost:1521/XE\n#    username: ROOT\n#    password: password\n#  system-postgres:\n#    url: jdbc:postgresql://localhost:5432/postgres?useUnicode=true&characterEncoding=utf8&useSSL=true&autoReconnect=true&reWriteBatchedInserts=true\n#    username: root\n#    password: password\n\nspring:\n  datasource:\n    type: com.zaxxer.hikari.HikariDataSource\n    # 动态数据源文档 https://www.kancloud.cn/tracy5546/dynamic-datasource/content\n    dynamic:\n      # 性能分析插件(有性能损耗 不建议生产环境使用)\n      p6spy: false\n      # 开启seata代理，开启后默认每个数据源都代理，如果某个不需要代理可单独关闭\n      seata: ${seata.enabled}\n      # 严格模式 匹配不到数据源则报错\n      strict: true\n      hikari:\n        # 最大连接池数量\n        maxPoolSize: 20\n        # 最小空闲线程数量\n        minIdle: 10\n        # 配置获取连接等待超时的时间\n        connectionTimeout: 30000\n        # 校验超时时间\n        validationTimeout: 5000\n        # 空闲连接存活最大时间，默认10分钟\n        idleTimeout: 600000\n        # 此属性控制池中连接的最长生命周期，值0表示无限生命周期，默认30分钟\n        maxLifetime: 1800000\n        # 多久检查一次连接的活性\n        keepaliveTime: 30000\n','a9c5f0b0dcebb5c1d3bcadaffbd9fb69','2022-01-09 15:19:07','2024-11-02 11:31:26','nacos','0:0:0:0:0:0:0:1','','dev','数据源配置','','','yaml','',''),
(3,'ruoyi-gateway.yml','DEFAULT_GROUP','# 安全配置\nsecurity:\n  # 不校验白名单\n  ignore:\n    whites:\n      - /auth/code\n      - /auth/logout\n      - /auth/login\n      - /auth/binding/*\n      - /auth/social/callback\n      - /auth/register\n      - /auth/tenant/list\n      - /resource/sms/code\n      - /resource/sse/close\n      - /*/v3/api-docs\n      - /*/error\n      - /csrf\n\nspring:\n  cloud:\n    # 网关配置\n    gateway:\n      # 打印请求日志(自定义)\n      requestLog: true\n      discovery:\n        locator:\n          lowerCaseServiceId: true\n          enabled: true\n      routes:\n        # 认证中心\n        - id: ruoyi-auth\n          uri: lb://ruoyi-auth\n          predicates:\n            - Path=/auth/**\n          filters:\n            - StripPrefix=1\n        # 代码生成\n        - id: ruoyi-gen\n          uri: lb://ruoyi-gen\n          predicates:\n            - Path=/tool/**\n          filters:\n            - StripPrefix=1\n        # 系统模块\n        - id: ruoyi-system\n          uri: lb://ruoyi-system\n          predicates:\n            - Path=/system/**,/monitor/**\n          filters:\n            - StripPrefix=1\n        # 资源服务\n        - id: ruoyi-resource\n          uri: lb://ruoyi-resource\n          predicates:\n            - Path=/resource/**\n          filters:\n            - StripPrefix=1\n        # workflow服务\n        - id: ruoyi-workflow\n          uri: lb://ruoyi-workflow\n          predicates:\n            - Path=/workflow/**\n        # 演示服务\n        - id: ruoyi-demo\n          uri: lb://ruoyi-demo\n          predicates:\n            - Path=/demo/**\n          filters:\n            - StripPrefix=1\n        # MQ演示服务\n        - id: ruoyi-test-mq\n          uri: lb://ruoyi-test-mq\n          predicates:\n            - Path=/test-mq/**\n          filters:\n            - StripPrefix=1\n\n    # sentinel 配置\n    sentinel:\n      filter:\n        enabled: false\n      # nacos配置持久化\n      datasource:\n        ds1:\n          nacos:\n            server-addr: ${spring.cloud.nacos.server-addr}\n            dataId: sentinel-${spring.application.name}.json\n            groupId: ${spring.cloud.nacos.config.group}\n            username: ${spring.cloud.nacos.username}\n            password: ${spring.cloud.nacos.password}\n            namespace: ${spring.profiles.active}\n            data-type: json\n            rule-type: gw-flow\n','484e5b86b3086abeb5c992530bbd4beb','2022-01-09 15:19:43','2024-11-02 06:52:30','nacos','192.168.2.101','','dev','网关模块','','','yaml','',''),
(4,'ruoyi-auth.yml','DEFAULT_GROUP','# 安全配置\nsecurity:\n  # 验证码\n  captcha:\n    # 是否开启验证码\n    enabled: true\n    # 验证码类型 math 数组计算 char 字符验证\n    type: MATH\n    # line 线段干扰 circle 圆圈干扰 shear 扭曲干扰\n    category: CIRCLE\n    # 数字验证码位数\n    numberLength: 1\n    # 字符验证码长度\n    charLength: 4\n\n# 用户配置\nuser:\n  password:\n    # 密码最大错误次数\n    maxRetryCount: 5\n    # 密码锁定时间（默认10分钟）\n    lockTime: 10\n\n# 三方授权\njustauth:\n  # 前端外网访问地址\n  address: http://localhost:80\n  type:\n    maxkey:\n      # maxkey 服务器地址\n      # 注意 如下均配置均不需要修改 maxkey 已经内置好了数据\n      server-url: http://sso.maxkey.top\n      client-id: 876892492581044224\n      client-secret: x1Y5MTMwNzIwMjMxNTM4NDc3Mzche8\n      redirect-uri: ${justauth.address}/social-callback?source=maxkey\n    topiam:\n      # topiam 服务器地址\n      server-url: http://127.0.0.1:1989/api/v1/authorize/y0q************spq***********8ol\n      client-id: 449c4*********937************759\n      client-secret: ac7***********1e0************28d\n      redirect-uri: ${justauth.address}/social-callback?source=topiam\n      scopes: [ openid, email, phone, profile ]\n    qq:\n      client-id: 10**********6\n      client-secret: 1f7d08**********5b7**********29e\n      redirect-uri: ${justauth.address}/social-callback?source=qq\n      union-id: false\n    weibo:\n      client-id: 10**********6\n      client-secret: 1f7d08**********5b7**********29e\n      redirect-uri: ${justauth.address}/social-callback?source=weibo\n    gitee:\n      client-id: 91436b7940090d09c72c7daf85b959cfd5f215d67eea73acbf61b6b590751a98\n      client-secret: 02c6fcfd70342980cd8dd2f2c06c1a350645d76c754d7a264c4e125f9ba915ac\n      redirect-uri: ${justauth.address}/social-callback?source=gitee\n    dingtalk:\n      client-id: 10**********6\n      client-secret: 1f7d08**********5b7**********29e\n      redirect-uri: ${justauth.address}/social-callback?source=dingtalk\n    baidu:\n      client-id: 10**********6\n      client-secret: 1f7d08**********5b7**********29e\n      redirect-uri: ${justauth.address}/social-callback?source=baidu\n    csdn:\n      client-id: 10**********6\n      client-secret: 1f7d08**********5b7**********29e\n      redirect-uri: ${justauth.address}/social-callback?source=csdn\n    coding:\n      client-id: 10**********6\n      client-secret: 1f7d08**********5b7**********29e\n      redirect-uri: ${justauth.address}/social-callback?source=coding\n      coding-group-name: xx\n    oschina:\n      client-id: 10**********6\n      client-secret: 1f7d08**********5b7**********29e\n      redirect-uri: ${justauth.address}/social-callback?source=oschina\n    alipay_wallet:\n      client-id: 10**********6\n      client-secret: 1f7d08**********5b7**********29e\n      redirect-uri: ${justauth.address}/social-callback?source=alipay_wallet\n      alipay-public-key: MIIB**************DAQAB\n    wechat_open:\n      client-id: 10**********6\n      client-secret: 1f7d08**********5b7**********29e\n      redirect-uri: ${justauth.address}/social-callback?source=wechat_open\n    wechat_mp:\n      client-id: 10**********6\n      client-secret: 1f7d08**********5b7**********29e\n      redirect-uri: ${justauth.address}/social-callback?source=wechat_mp\n    wechat_enterprise:\n      client-id: 10**********6\n      client-secret: 1f7d08**********5b7**********29e\n      redirect-uri: ${justauth.address}/social-callback?source=wechat_enterprise\n      agent-id: 1000002\n    gitlab:\n      client-id: 10**********6\n      client-secret: 1f7d08**********5b7**********29e\n      redirect-uri: ${justauth.address}/social-callback?source=gitlab\n','362c28d8864626b864d682b5f1c4a73a','2022-01-09 15:19:43','2024-11-02 06:52:48','nacos','192.168.2.101','','dev','认证中心','','','yaml','',''),
(5,'ruoyi-monitor.yml','DEFAULT_GROUP','# 监控中心配置\nspring:\n  security:\n    user:\n      name: ruoyi\n      password: 123456\n  boot:\n    admin:\n      ui:\n        title: RuoYi-Cloud-Plus服务监控中心\n      discovery:\n        # seata 不具有健康检查的能力 防止报错排除掉\n        ignored-services: ruoyi-seata-server\n','ba7fa6a6bfde3dcb3b566fd8864834af','2022-01-09 15:20:18','2024-11-02 06:53:01','nacos','192.168.2.101','','dev','监控中心','','','yaml','',''),
(6,'ruoyi-system.yml','DEFAULT_GROUP','spring:\n  datasource:\n    dynamic:\n      # 设置默认的数据源或者数据源组,默认值即为 master\n      primary: master\n      datasource:\n        # 主库数据源\n        master:\n          type: ${spring.datasource.type}\n          driver-class-name: com.mysql.cj.jdbc.Driver\n          url: ${datasource.system-master.url}\n          username: ${datasource.system-master.username}\n          password: ${datasource.system-master.password}\n#        oracle:\n#          type: ${spring.datasource.type}\n#          driverClassName: oracle.jdbc.OracleDriver\n#          url: ${datasource.system-oracle.url}\n#          username: ${datasource.system-oracle.username}\n#          password: ${datasource.system-oracle.password}\n#        postgres:\n#          type: ${spring.datasource.type}\n#          driverClassName: org.postgresql.Driver\n#          url: ${datasource.system-postgres.url}\n#          username: ${datasource.system-postgres.username}\n#          password: ${datasource.system-postgres.password}\n','f59259409ff41d30e5276bf4afbcaa3d','2022-01-09 15:20:18','2024-11-02 06:53:18','nacos','192.168.2.101','','dev','系统模块','','','yaml','',''),
(7,'ruoyi-gen.yml','DEFAULT_GROUP','spring:\n  datasource:\n    dynamic:\n      # 设置默认的数据源或者数据源组,默认值即为 master\n      primary: master\n      seata: false\n      datasource:\n        # 主库数据源\n        master:\n          type: ${spring.datasource.type}\n          driver-class-name: com.mysql.cj.jdbc.Driver\n          url: ${datasource.system-master.url}\n          username: ${datasource.system-master.username}\n          password: ${datasource.system-master.password}\n#        oracle:\n#          type: ${spring.datasource.type}\n#          driverClassName: oracle.jdbc.OracleDriver\n#          url: ${datasource.system-oracle.url}\n#          username: ${datasource.system-oracle.username}\n#          password: ${datasource.system-oracle.password}\n#        postgres:\n#          type: ${spring.datasource.type}\n#          driverClassName: org.postgresql.Driver\n#          url: ${datasource.system-postgres.url}\n#          username: ${datasource.system-postgres.username}\n#          password: ${datasource.system-postgres.password}\n\n# 代码生成\ngen:\n  # 作者\n  author: LionLi\n  # 默认生成包路径 system 需改成自己的模块名称 如 system monitor tool\n  packageName: org.dromara.system\n  # 自动去除表前缀，默认是false\n  autoRemovePre: false\n  # 表前缀（生成类名不会包含表前缀，多个用逗号分隔）\n  tablePrefix: sys_\n','2d00f0362d71287c0033b665a48337af','2022-01-09 15:20:18','2024-11-02 06:53:33','nacos','192.168.2.101','','dev','代码生成','','','yaml','',''),
(8,'ruoyi-job.yml','DEFAULT_GROUP','spring:\n  datasource:\n    dynamic:\n      # 设置默认的数据源或者数据源组,默认值即为 master\n      primary: master\n      seata: false\n      datasource:\n        # 主库数据源\n        master:\n          type: ${spring.datasource.type}\n          driver-class-name: com.mysql.cj.jdbc.Driver\n          url: ${datasource.job.url}\n          username: ${datasource.job.username}\n          password: ${datasource.job.password}\n\nsnail-job:\n  enabled: true\n  # 需要在 SnailJob 后台组管理创建对应名称的组,然后创建任务的时候选择对应的组,才能正确分派任务\n  group: \"ruoyi_group\"\n  #  SnailJob 接入验证令牌\n  token: \"SJ_cKqBTPzCsWA3VyuCfFoccmuIEGXjr5KT\"\n  server:\n    # 从 nacos 获取服务\n    server-name: ruoyi-snailjob-server\n    # 服务名优先 ip垫底\n    host: 127.0.0.1\n    port: 17888\n  # 详见 script/sql/ry_job.sql `sj_namespace` 表\n  namespace: ${spring.profiles.active}\n  # 随主应用端口飘逸\n  port: 2${server.port}\n  # 客户端ip指定\n  host:\n','08f5e690ce18e8497d69f7a1018efea3','2022-01-09 15:20:18','2024-11-02 06:53:42','nacos','192.168.2.101','','dev','定时任务','','','yaml','',''),
(9,'ruoyi-resource.yml','DEFAULT_GROUP','spring:\n  datasource:\n    dynamic:\n      # 设置默认的数据源或者数据源组,默认值即为 master\n      primary: master\n      datasource:\n        # 主库数据源\n        master:\n          type: ${spring.datasource.type}\n          driver-class-name: com.mysql.cj.jdbc.Driver\n          url: ${datasource.system-master.url}\n          username: ${datasource.system-master.username}\n          password: ${datasource.system-master.password}\n#        oracle:\n#          type: ${spring.datasource.type}\n#          driverClassName: oracle.jdbc.OracleDriver\n#          url: ${datasource.system-oracle.url}\n#          username: ${datasource.system-oracle.username}\n#          password: ${datasource.system-oracle.password}\n#        postgres:\n#          type: ${spring.datasource.type}\n#          driverClassName: org.postgresql.Driver\n#          url: ${datasource.system-postgres.url}\n#          username: ${datasource.system-postgres.username}\n#          password: ${datasource.system-postgres.password}\n\n# 默认/推荐使用sse推送\nsse:\n  enabled: true\n  path: /sse\n\nwebsocket:\n  # 如果关闭 需要和前端开关一起关闭\n  enabled: false\n  # 路径\n  path: /websocket\n  # 设置访问源地址\n  allowedOrigins: \'*\'\n\nmail:\n  enabled: false\n  host: smtp.163.com\n  port: 465\n  # 是否需要用户名密码验证\n  auth: true\n  # 发送方，遵循RFC-822标准\n  from: xxx@163.com\n  # 用户名（注意：如果使用foxmail邮箱，此处user为qq号）\n  user: xxx@163.com\n  # 密码（注意，某些邮箱需要为SMTP服务单独设置密码，详情查看相关帮助）\n  pass: xxxxxxxxxx\n  # 使用 STARTTLS安全连接，STARTTLS是对纯文本通信协议的扩展。\n  starttlsEnable: true\n  # 使用SSL安全连接\n  sslEnable: true\n  # SMTP超时时长，单位毫秒，缺省值不超时\n  timeout: 0\n  # Socket连接超时值，单位毫秒，缺省值不超时\n  connectionTimeout: 0\n\n# sms 短信 支持 阿里云 腾讯云 云片 等等各式各样的短信服务商\n# https://sms4j.com/doc3/ 差异配置文档地址 支持单厂商多配置，可以配置多个同时使用\nsms:\n  # 配置源类型用于标定配置来源(interface,yaml)\n  config-type: yaml\n  # 用于标定yml中的配置是否开启短信拦截，接口配置不受此限制\n  restricted: true\n  # 短信拦截限制单手机号每分钟最大发送，只对开启了拦截的配置有效\n  minute-max: 1\n  # 短信拦截限制单手机号每日最大发送量，只对开启了拦截的配置有效\n  account-max: 30\n  # 以下配置来自于 org.dromara.sms4j.provider.config.BaseConfig类中\n  blends:\n    # 唯一ID 用于发送短信寻找具体配置 随便定义别用中文即可\n    # 可以同时存在两个相同厂商 例如: ali1 ali2 两个不同的阿里短信账号 也可用于区分租户\n    config1:\n      # 框架定义的厂商名称标识，标定此配置是哪个厂商，详细请看厂商标识介绍部分\n      supplier: alibaba\n      # 有些称为accessKey有些称之为apiKey，也有称为sdkKey或者appId。\n      access-key-id: 您的accessKey\n      # 称为accessSecret有些称之为apiSecret\n      access-key-secret: 您的accessKeySecret\n      signature: 您的短信签名\n      sdk-app-id: 您的sdkAppId\n    config2:\n      # 厂商标识，标定此配置是哪个厂商，详细请看厂商标识介绍部分\n      supplier: tencent\n      access-key-id: 您的accessKey\n      access-key-secret: 您的accessKeySecret\n      signature: 您的短信签名\n      sdk-app-id: 您的sdkAppId\n','efb16000eb230328fa2128ea56558fd2','2022-01-09 15:20:35','2024-11-02 06:53:55','nacos','192.168.2.101','','dev','文件服务','','','yaml','',''),
(10,'ruoyi-workflow.yml','DEFAULT_GROUP','spring:\n  datasource:\n    dynamic:\n      # 设置默认的数据源或者数据源组,默认值即为 master\n      primary: master\n      datasource:\n        # 主库数据源\n        master:\n          type: ${spring.datasource.type}\n          driver-class-name: com.mysql.cj.jdbc.Driver\n          url: ${datasource.workflow.url}\n          username: ${datasource.workflow.username}\n          password: ${datasource.workflow.password}\n#        oracle:\n#          type: ${spring.datasource.type}\n#          driverClassName: oracle.jdbc.OracleDriver\n#          url: ${datasource.system-oracle.url}\n#          username: ${datasource.system-oracle.username}\n#          password: ${datasource.system-oracle.password}\n#        postgres:\n#          type: ${spring.datasource.type}\n#          driverClassName: org.postgresql.Driver\n#          url: ${datasource.system-postgres.url}\n#          username: ${datasource.system-postgres.username}\n#          password: ${datasource.system-postgres.password}\n\n# flowable配置\nflowable:\n  # 开关 用于启动/停用工作流\n  enabled: true\n  process.enabled: ${flowable.enabled}\n  eventregistry.enabled: ${flowable.enabled}\n  # 关闭定时任务JOB\n  async-executor-activate: false\n  # 将databaseSchemaUpdate设置为true。当Flowable发现库与数据库表结构不一致时，会自动将数据库表结构升级至新版本。\n  database-schema-update: true\n  activity-font-name: 宋体\n  label-font-name: 宋体\n  annotation-font-name: 宋体\n  # 关闭各个模块生成表，目前只使用工作流基础表\n  idm:\n    enabled: false\n  cmmn:\n    enabled: false\n  dmn:\n    enabled: false\n  app:\n    enabled: false\n','95b566892b838da618fbfdaf1ecffd0a','2022-01-09 15:20:35','2024-11-02 06:54:07','nacos','192.168.2.101','','dev','工作流服务','','','yaml','',''),
(11,'sentinel-ruoyi-gateway.json','DEFAULT_GROUP','[\n  {\n    \"resource\": \"ruoyi-auth\",\n    \"count\": 500,\n    \"grade\": 1,\n    \"limitApp\": \"default\",\n    \"strategy\": 0,\n    \"controlBehavior\": 0\n  },\n  {\n    \"resource\": \"ruoyi-system\",\n    \"count\": 1000,\n    \"grade\": 1,\n    \"limitApp\": \"default\",\n    \"strategy\": 0,\n    \"controlBehavior\": 0\n  },\n  {\n    \"resource\": \"ruoyi-resource\",\n    \"count\": 500,\n    \"grade\": 1,\n    \"limitApp\": \"default\",\n    \"strategy\": 0,\n    \"controlBehavior\": 0\n  }\n]\n','2efad3702e99adef46c2ee818b3925e5','2022-01-09 15:21:02','2024-11-02 06:54:25','nacos','192.168.2.101','','dev','限流策略','','','json','',''),
(12,'seata-server.properties','DEFAULT_GROUP','service.vgroupMapping.ruoyi-auth-group=default\nservice.vgroupMapping.ruoyi-system-group=default\nservice.vgroupMapping.ruoyi-resource-group=default\nservice.vgroupMapping.ruoyi-workflow-group=default\n\nservice.enableDegrade=false\nservice.disableGlobalTransaction=false\n\n#Transaction storage configuration, only for the server. The file, DB, and redis configuration values are optional.\nstore.mode=db\nstore.lock.mode=db\nstore.session.mode=db\n#Used for password encryption\n#store.publicKey=\n\n#These configurations are required if the `store mode` is `db`. If `store.mode,store.lock.mode,store.session.mode` are not equal to `db`, you can remove the configuration block.\nstore.db.datasource=hikari\nstore.db.dbType=mysql\nstore.db.driverClassName=com.mysql.cj.jdbc.Driver\nstore.db.url=jdbc:mysql://127.0.0.1:3306/ry-seata?useUnicode=true&rewriteBatchedStatements=true&allowPublicKeyRetrieval=true\nstore.db.user=root\nstore.db.password=root\nstore.db.minConn=5\nstore.db.maxConn=30\nstore.db.globalTable=global_table\nstore.db.branchTable=branch_table\nstore.db.distributedLockTable=distributed_lock\nstore.db.queryLimit=100\nstore.db.lockTable=lock_table\nstore.db.maxWait=5000\n\n# redis æ¨¡å¼ store.mode=redis å¼å¯ (æ§å¶å°æ¥è¯¢åè½æé,ä¸å½±åå®éæ§è¡åè½)\n# store.redis.host=127.0.0.1\n# store.redis.port=6379\n# æå¤§è¿æ¥æ°\n# store.redis.maxConn=10\n# æå°è¿æ¥æ°\n# store.redis.minConn=1\n# store.redis.database=0\n# store.redis.password=\n# store.redis.queryLimit=100\n\n#Transaction rule configuration, only for the server\nserver.recovery.committingRetryPeriod=1000\nserver.recovery.asynCommittingRetryPeriod=1000\nserver.recovery.rollbackingRetryPeriod=1000\nserver.recovery.timeoutRetryPeriod=1000\nserver.maxCommitRetryTimeout=-1\nserver.maxRollbackRetryTimeout=-1\nserver.rollbackRetryTimeoutUnlockEnable=false\nserver.distributedLockExpireTime=10000\nserver.xaerNotaRetryTimeout=60000\nserver.session.branchAsyncQueueSize=5000\nserver.session.enableBranchAsyncRemove=false\n\n#Transaction rule configuration, only for the client\nclient.rm.asyncCommitBufferLimit=10000\nclient.rm.lock.retryInterval=10\nclient.rm.lock.retryTimes=30\nclient.rm.lock.retryPolicyBranchRollbackOnConflict=true\nclient.rm.reportRetryCount=5\nclient.rm.tableMetaCheckEnable=true\nclient.rm.tableMetaCheckerInterval=60000\nclient.rm.sqlParserType=druid\nclient.rm.reportSuccessEnable=false\nclient.rm.sagaBranchRegisterEnable=false\nclient.rm.sagaJsonParser=fastjson\nclient.rm.tccActionInterceptorOrder=-2147482648\nclient.tm.commitRetryCount=5\nclient.tm.rollbackRetryCount=5\nclient.tm.defaultGlobalTransactionTimeout=60000\nclient.tm.degradeCheck=false\nclient.tm.degradeCheckAllowTimes=10\nclient.tm.degradeCheckPeriod=2000\nclient.tm.interceptorOrder=-2147482648\nclient.undo.dataValidation=true\nclient.undo.logSerialization=jackson\nclient.undo.onlyCareUpdateColumns=true\nserver.undo.logSaveDays=7\nserver.undo.logDeletePeriod=86400000\nclient.undo.logTable=undo_log\nclient.undo.compress.enable=true\nclient.undo.compress.type=zip\nclient.undo.compress.threshold=64k\n\n#For TCC transaction mode\ntcc.fence.logTableName=tcc_fence_log\ntcc.fence.cleanPeriod=1h\n\n#Log rule configuration, for client and server\nlog.exceptionRate=100\n\n#Metrics configuration, only for the server\nmetrics.enabled=false\nmetrics.registryType=compact\nmetrics.exporterList=prometheus\nmetrics.exporterPrometheusPort=9898\n\n#For details about configuration items, see https://seata.io/zh-cn/docs/user/configurations.html\n#Transport configuration, for client and server\ntransport.type=TCP\ntransport.server=NIO\ntransport.heartbeat=true\ntransport.enableTmClientBatchSendRequest=false\ntransport.enableRmClientBatchSendRequest=true\ntransport.enableTcServerBatchSendResponse=false\ntransport.rpcRmRequestTimeout=30000\ntransport.rpcTmRequestTimeout=30000\ntransport.rpcTcRequestTimeout=30000\ntransport.threadFactory.bossThreadPrefix=NettyBoss\ntransport.threadFactory.workerThreadPrefix=NettyServerNIOWorker\ntransport.threadFactory.serverExecutorThreadPrefix=NettyServerBizHandler\ntransport.threadFactory.shareBossWorker=false\ntransport.threadFactory.clientSelectorThreadPrefix=NettyClientSelector\ntransport.threadFactory.clientSelectorThreadSize=1\ntransport.threadFactory.clientWorkerThreadPrefix=NettyClientWorkerThread\ntransport.threadFactory.bossThreadSize=1\ntransport.threadFactory.workerThreadSize=default\ntransport.shutdown.wait=3\ntransport.serialization=seata\ntransport.compressor=none\n','045a3fbb5c8da8d3cb555000a7095aa7','2022-01-09 15:21:02','2024-11-02 06:54:39','nacos','192.168.2.101','','dev','seata配置文件','','','properties','',''),
(13,'ruoyi-sentinel-dashboard.yml','DEFAULT_GROUP','spring:\n  mvc:\n    pathmatch:\n      # 修复 sentinel 控制台未适配 springboot 2.6 新路由方式\n      matching-strategy: ANT_PATH_MATCHER\n\nserver:\n  servlet:\n    encoding:\n      force: true\n      charset: UTF-8\n      enabled: true\n    session:\n      cookie:\n        name: sentinel_dashboard_cookie\n\nlogging:\n  level:\n    org.springframework.web: INFO\n\nauth:\n  enabled: true\n  filter:\n    exclude-urls: /,/auth/login,/auth/logout,/registry/machine,/version,/actuator,/actuator/**\n    exclude-url-suffixes: htm,html,js,css,map,ico,ttf,woff,png\n  username: sentinel\n  password: sentinel\n','59055747c62f08cd2c38a6016d4b9227','2022-01-09 15:21:02','2024-11-02 06:54:52','nacos','192.168.2.101','','dev','sentinel控制台配置文件','','','yaml','',''),
(14,'ruoyi-snailjob-server.yml','DEFAULT_GROUP','spring:\n  datasource:\n    type: com.zaxxer.hikari.HikariDataSource\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: ${datasource.job.url}\n    username: ${datasource.job.username}\n    password: ${datasource.job.password}\n    hikari:\n      connection-timeout: 30000\n      validation-timeout: 5000\n      minimum-idle: 10\n      maximum-pool-size: 20\n      idle-timeout: 600000\n      max-lifetime: 900000\n      keepaliveTime: 30000\n  cloud:\n    nacos:\n      discovery:\n        metadata:\n          # 解决 er 服务有 context-path 无法监控问题\n          management.context-path: ${server.servlet.context-path}/actuator\n          # 监控账号密码\n          username: ruoyi\n          userpassword: 123456\n\n# snail-job 服务端配置\nsnail-job:\n  # 拉取重试数据的每批次的大小\n  retry-pull-page-size: 1000\n  # 拉取重试数据的每批次的大小\n  job-pull-page-size: 1000\n  # 服务端 netty 端口\n  netty-port: 17888\n  # 重试和死信表的分区总数\n  total-partition: 2\n  # 一个客户端每秒最多接收的重试数量指令\n  limiter: 1000\n  # 号段模式下步长配置\n  step: 100\n  # 日志保存时间(单位: day)\n  log-storage: 90\n  # 回调配置\n  callback:\n    #回调最大执行次数\n    max-count: 288\n    #间隔时间\n    trigger-interval: 900\n  retry-max-pull-count: 10\n','ab06186a47974fd09806e48484f37a1a','2022-01-09 15:21:02','2024-11-02 06:55:07','nacos','192.168.2.101','','dev','SJ定时任务控制台','','','yaml','',''),
(116,'application-common.yml','DEFAULT_GROUP','server:\n  # undertow 配置\n  undertow:\n    # HTTP post内容的最大大小。当值为-1时，默认值为大小是无限的\n    max-http-post-size: -1\n    # 以下的配置会影响buffer,这些buffer会用于服务器连接的IO操作,有点类似netty的池化内存管理\n    # 每块buffer的空间大小,越小的空间被利用越充分\n    buffer-size: 512\n    # 是否分配的直接内存\n    direct-buffers: true\n    threads:\n      # 设置IO线程数, 它主要执行非阻塞的任务,它们会负责多个连接, 默认设置每个CPU核心一个线程\n      io: 8\n      # 阻塞任务线程池, 当执行类似servlet请求阻塞操作, undertow会从这个线程池中取得线程,它的值设置取决于系统的负载\n      worker: 256\n\ndubbo:\n  application:\n    # 关闭qos端口避免单机多生产者端口冲突 如需使用自行开启\n    qos-enable: false\n  protocol:\n    # 如需使用 Triple 3.0 新协议 可查看官方文档\n    # 使用 dubbo 协议通信\n    name: dubbo\n    # dubbo 协议端口(-1表示自增端口,从20880开始)\n    port: -1\n    # 指定dubbo协议注册ip\n    # host: 192.168.0.100\n  # 消费者相关配置\n  consumer:\n    # 超时时间\n    timeout: 3000\n  # 自定义配置\n  custom:\n    # 全局请求log\n    request-log: true\n    # info 基础信息 param 参数信息 full 全部\n    log-level: info\n\nspring:\n  threads:\n    # 开启虚拟线程 仅jdk21可用\n    virtual:\n      enabled: false\n  # 资源信息\n  messages:\n    # 国际化资源文件路径\n    basename: i18n/messages\n  servlet:\n    multipart:\n      # 整个请求大小限制\n      max-request-size: 20MB\n      # 上传单个文件大小限制\n      max-file-size: 10MB\n  mvc:\n    # 设置静态资源路径 防止所有请求都去查静态资源\n    static-path-pattern: /static/**\n    format:\n      date-time: yyyy-MM-dd HH:mm:ss\n  #jackson配置\n  jackson:\n    # 日期格式化\n    date-format: yyyy-MM-dd HH:mm:ss\n    serialization:\n      # 格式化输出\n      INDENT_OUTPUT: false\n      # 忽略无法转换的对象\n      fail_on_empty_beans: false\n    deserialization:\n      # 允许对象忽略json中不存在的属性\n      fail_on_unknown_properties: false\n  cloud:\n    nacos:\n      discovery:\n        metadata:\n          # admin 监控账号密码\n          username: ruoyi\n          userpassword: 123456\n    # sentinel 配置\n    sentinel:\n      # sentinel 开关\n      enabled: false\n      transport:\n        # dashboard控制台服务名 用于服务发现\n        # 如无此配置将默认使用下方 dashboard 配置直接注册\n        server-name: ruoyi-sentinel-dashboard\n        # 客户端指定注册的ip 用于多网卡ip不稳点使用\n        # client-ip:\n        # 控制台地址 从1.3.0开始使用 server-name 注册\n        # dashboard: localhost:8718\n\n    bus:\n      id: ${spring.application.name}\n      base-packages: org.dromara.**.event\n  # 消息总线 也可以使用 kafka 参考 spring-cloud-bus 用法\n  rabbitmq:\n    host: localhost\n    port: 5672\n    username: ruoyi\n    password: ruoyi123\n\n  # redis通用配置 子服务可以自行配置进行覆盖\n  data:\n    redis:\n      host: 127.0.0.1\n      port: 6379\n      # redis 密码必须配置\n      password: admin\n      database: 0\n      # 需要使用数字\n      timeout: 10000\n      ssl.enabled: false\n\n# redisson 配置\nredisson:\n  # redis key前缀\n  keyPrefix:\n  # 线程池数量\n  threads: 4\n  # Netty线程池数量\n  nettyThreads: 8\n  # 单节点配置\n  singleServerConfig:\n    # 客户端名称\n    clientName: ${spring.application.name}\n    # 最小空闲连接数\n    connectionMinimumIdleSize: 8\n    # 连接池大小\n    connectionPoolSize: 32\n    # 连接空闲超时，单位：毫秒\n    idleConnectionTimeout: 10000\n    # 命令等待超时，单位：毫秒\n    timeout: 3000\n    # 发布和订阅连接池大小\n    subscriptionConnectionPoolSize: 50\n\n# 分布式锁 lock4j 全局配置\nlock4j:\n  # 获取分布式锁超时时间，默认为 3000 毫秒\n  acquire-timeout: 3000\n  # 分布式锁的超时时间，默认为 30 秒\n  expire: 30000\n\n# 暴露监控端点\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: \'*\'\n  endpoint:\n    health:\n      show-details: ALWAYS\n    logfile:\n      external-file: ./logs/${spring.application.name}/console.log\n\n# 日志配置\n# logging:\n#   level:\n#     org.springframework: warn\n#     org.apache.dubbo: warn\n#     com.alibaba.nacos: warn\n#     com.alibaba.cloud.sentinel: warn\n#     org.mybatis.spring.mapper: error\n#     org.apache.dubbo.config: error\n#     # 临时处理 spring 调整日志级别导致启动警告问题 不影响使用等待 alibaba 适配\n#     org.springframework.context.support.PostProcessorRegistrationDelegate: error\n#   config: classpath:logback-plus.xml\n\nlogging:\n  level:\n    root: info\n    com.aidaoteng: trace\n\n\n# Sa-Token配置\nsa-token:\n  # token名称 (同时也是cookie名称)\n  token-name: Authorization\n  # 开启内网服务调用鉴权(不允许越过gateway访问内网服务 保障服务安全)\n  check-same-token: true\n  # 是否允许同一账号并发登录 (为true时允许一起登录, 为false时新登录挤掉旧登录)\n  is-concurrent: true\n  # 在多人登录同一账号时，是否共用一个token (为true时所有登录共用一个token, 为false时每次登录新建一个token)\n  is-share: false\n  # jwt秘钥\n  jwt-secret-key: abcdefghijklmnopqrstuvwxyz\n\n# MyBatisPlus配置\n# https://baomidou.com/config/\nmybatis-plus:\n  # 多包名使用 例如 org.dromara.**.mapper,org.xxx.**.mapper\n  mapperPackage: com.aidaoteng.**.mapper\n  # 对应的 XML 文件位置\n  mapperLocations: classpath*:mapper/**/*Mapper.xml\n  # 实体扫描，多个package用逗号或者分号分隔\n  typeAliasesPackage: com.aidaoteng.**.domain\n  global-config:\n    dbConfig:\n      # 主键类型\n      # AUTO 自增 NONE 空 INPUT 用户输入 ASSIGN_ID 雪花 ASSIGN_UUID 唯一 UUID\n      # 如需改为自增 需要将数据库表全部设置为自增\n      idType: ASSIGN_ID\n\n# 数据加密\nmybatis-encryptor:\n  # 是否开启加密\n  enable: false\n  # 默认加密算法\n  algorithm: BASE64\n  # 编码方式 BASE64/HEX。默认BASE64\n  encode: BASE64\n  # 安全秘钥 对称算法的秘钥 如：AES，SM4\n  password:\n  # 公私钥 非对称算法的公私钥 如：SM2，RSA\n  publicKey:\n  privateKey:\n\n# api接口加密\napi-decrypt:\n  # 是否开启全局接口加密\n  enabled: true\n  # AES 加密头标识\n  headerFlag: encrypt-key\n  # 响应加密公钥 非对称算法的公私钥 如：SM2，RSA 使用者请自行更换\n  # 对应前端解密私钥 MIIBVAIBADANBgkqhkiG9w0BAQEFAASCAT4wggE6AgEAAkEAmc3CuPiGL/LcIIm7zryCEIbl1SPzBkr75E2VMtxegyZ1lYRD+7TZGAPkvIsBcaMs6Nsy0L78n2qh+lIZMpLH8wIDAQABAkEAk82Mhz0tlv6IVCyIcw/s3f0E+WLmtPFyR9/WtV3Y5aaejUkU60JpX4m5xNR2VaqOLTZAYjW8Wy0aXr3zYIhhQQIhAMfqR9oFdYw1J9SsNc+CrhugAvKTi0+BF6VoL6psWhvbAiEAxPPNTmrkmrXwdm/pQQu3UOQmc2vCZ5tiKpW10CgJi8kCIFGkL6utxw93Ncj4exE/gPLvKcT+1Emnoox+O9kRXss5AiAMtYLJDaLEzPrAWcZeeSgSIzbL+ecokmFKSDDcRske6QIgSMkHedwND1olF8vlKsJUGK3BcdtM8w4Xq7BpSBwsloE=\n  publicKey: MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAJnNwrj4hi/y3CCJu868ghCG5dUj8wZK++RNlTLcXoMmdZWEQ/u02RgD5LyLAXGjLOjbMtC+/J9qofpSGTKSx/MCAwEAAQ==\n  # 请求解密私钥 非对称算法的公私钥 如：SM2，RSA 使用者请自行更换\n  # 对应前端加密公钥 MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAKoR8mX0rGKLqzcWmOzbfj64K8ZIgOdHnzkXSOVOZbFu/TJhZ7rFAN+eaGkl3C4buccQd/EjEsj9ir7ijT7h96MCAwEAAQ==\n  privateKey: MIIBVAIBADANBgkqhkiG9w0BAQEFAASCAT4wggE6AgEAAkEAqhHyZfSsYourNxaY7Nt+PrgrxkiA50efORdI5U5lsW79MmFnusUA355oaSXcLhu5xxB38SMSyP2KvuKNPuH3owIDAQABAkAfoiLyL+Z4lf4Myxk6xUDgLaWGximj20CUf+5BKKnlrK+Ed8gAkM0HqoTt2UZwA5E2MzS4EI2gjfQhz5X28uqxAiEA3wNFxfrCZlSZHb0gn2zDpWowcSxQAgiCstxGUoOqlW8CIQDDOerGKH5OmCJ4Z21v+F25WaHYPxCFMvwxpcw99EcvDQIgIdhDTIqD2jfYjPTY8Jj3EDGPbH2HHuffvflECt3Ek60CIQCFRlCkHpi7hthhYhovyloRYsM+IS9h/0BzlEAuO0ktMQIgSPT3aFAgJYwKpqRYKlLDVcflZFCKY7u3UP8iWi1Qw0Y=\n\n# 防止XSS攻击\nxss:\n  enabled: true\n  excludeUrls:\n    - /system/notice\n    - /workflow/model/save\n    - /workflow/model/editModelXml\n\n# 接口文档配置\nspringdoc:\n  api-docs:\n    # 是否开启接口文档\n    enabled: true\n#  swagger-ui:\n#    # 持久化认证数据\n#    persistAuthorization: true\n  info:\n    # 标题\n    title: \'标题：RuoYi-Cloud-Plus微服务权限管理系统_接口文档\'\n    # 描述\n    description: \'描述：微服务权限管理系统, 具体包括XXX,XXX模块...\'\n    # 版本\n    version: \'版本号：系统版本...\'\n    # 作者信息\n    contact:\n      name: Lion Li\n      email: crazylionli@163.com\n      url: https://gitee.com/dromara/RuoYi-Cloud-Plus\n  components:\n    # 鉴权方式配置\n    security-schemes:\n      apiKey:\n        type: APIKEY\n        in: HEADER\n        name: ${sa-token.token-name}\n\n# seata配置\nseata:\n  # 是否启用\n  enabled: false\n  # Seata 应用编号，默认为应用名\n  application-id: ${spring.application.name}\n  # Seata 事务组编号，用于 TC 集群名\n  tx-service-group: ${spring.application.name}-group\n\n# 多租户配置\ntenant:\n  # 是否开启\n  enable: false\n  # 排除表\n  excludes:\n    - sys_menu\n    - sys_tenant\n    - sys_tenant_package\n    - sys_role_dept\n    - sys_role_menu\n    - sys_user_post\n    - sys_user_role\n    - sys_client\n    - sys_oss_config\n','6aa48be7f0ff2d46227f10fccc8c9070','2024-11-02 13:01:28','2024-11-02 13:13:54','nacos','0:0:0:0:0:0:0:1','','prod','通用配置基础配置','','','yaml','',''),
(117,'datasource.yml','DEFAULT_GROUP','datasource:\n  system-master:\n    # jdbc 所有参数配置参考 https://lionli.blog.csdn.net/article/details/122018562\n    # rewriteBatchedStatements=true 批处理优化 大幅提升批量插入更新删除性能\n    url: jdbc:mysql://localhost:3306/ry_cloud?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8&rewriteBatchedStatements=true&allowPublicKeyRetrieval=true\n    username: root\n    password: admin\n  gen:\n    url: jdbc:mysql://localhost:3306/ry_cloud?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8&rewriteBatchedStatements=true&allowPublicKeyRetrieval=true\n    username: root\n    password: admin\n  job:\n    url: jdbc:mysql://localhost:3306/ry_job?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8&rewriteBatchedStatements=true&allowPublicKeyRetrieval=true\n    username: root\n    password: admin\n  workflow:\n    url: jdbc:mysql://localhost:3306/ry_workflow?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8&rewriteBatchedStatements=true&allowPublicKeyRetrieval=true&nullCatalogMeansCurrent=true\n    username: root\n    password: admin\n#  system-oracle:\n#    url: jdbc:oracle:thin:@//localhost:1521/XE\n#    username: ROOT\n#    password: password\n#  system-postgres:\n#    url: jdbc:postgresql://localhost:5432/postgres?useUnicode=true&characterEncoding=utf8&useSSL=true&autoReconnect=true&reWriteBatchedInserts=true\n#    username: root\n#    password: password\n\nspring:\n  datasource:\n    type: com.zaxxer.hikari.HikariDataSource\n    # 动态数据源文档 https://www.kancloud.cn/tracy5546/dynamic-datasource/content\n    dynamic:\n      # 性能分析插件(有性能损耗 不建议生产环境使用)\n      p6spy: false\n      # 开启seata代理，开启后默认每个数据源都代理，如果某个不需要代理可单独关闭\n      seata: ${seata.enabled}\n      # 严格模式 匹配不到数据源则报错\n      strict: true\n      hikari:\n        # 最大连接池数量\n        maxPoolSize: 20\n        # 最小空闲线程数量\n        minIdle: 10\n        # 配置获取连接等待超时的时间\n        connectionTimeout: 30000\n        # 校验超时时间\n        validationTimeout: 5000\n        # 空闲连接存活最大时间，默认10分钟\n        idleTimeout: 600000\n        # 此属性控制池中连接的最长生命周期，值0表示无限生命周期，默认30分钟\n        maxLifetime: 1800000\n        # 多久检查一次连接的活性\n        keepaliveTime: 30000\n','a9c5f0b0dcebb5c1d3bcadaffbd9fb69','2024-11-02 13:01:28','2024-11-02 13:01:28',NULL,'192.168.2.101','','prod','数据源配置',NULL,NULL,'yaml',NULL,''),
(118,'aidaoteng-gateway.yml','DEFAULT_GROUP','# 安全配置\nsecurity:\n  # 不校验白名单\n  ignore:\n    whites:\n      - /auth/code\n      - /auth/logout\n      - /auth/login\n      - /auth/binding/*\n      - /auth/social/callback\n      - /auth/register\n      - /auth/tenant/list\n      - /resource/sms/code\n      - /resource/sse/close\n      - /*/v3/api-docs\n      - /*/error\n      - /csrf\n\nspring:\n  cloud:\n    # 网关配置\n    gateway:\n      # 打印请求日志(自定义)\n      requestLog: true\n      discovery:\n        locator:\n          lowerCaseServiceId: true\n          enabled: true\n      routes:\n        # 认证中心\n        - id: aidaoteng-auth\n          uri: lb://aidaoteng-auth\n          predicates:\n            - Path=/auth/**\n          filters:\n            - StripPrefix=1\n        # 代码生成\n        - id: aidaoteng-gen\n          uri: lb://aidaotengruoyi-gen\n          predicates:\n            - Path=/tool/**\n          filters:\n            - StripPrefix=1\n        # 系统模块\n        - id: aidaoteng-system\n          uri: lb://aidaoteng-system\n          predicates:\n            - Path=/system/**,/monitor/**\n          filters:\n            - StripPrefix=1\n        # 资源服务\n        - id: aidaoteng-resource\n          uri: lb://aidaoteng-resource\n          predicates:\n            - Path=/resource/**\n          filters:\n            - StripPrefix=1\n\n    # sentinel 配置\n    sentinel:\n      filter:\n        enabled: false\n      # nacos配置持久化\n      datasource:\n        ds1:\n          nacos:\n            server-addr: ${spring.cloud.nacos.server-addr}\n            dataId: sentinel-${spring.application.name}.json\n            groupId: ${spring.cloud.nacos.config.group}\n            username: ${spring.cloud.nacos.username}\n            password: ${spring.cloud.nacos.password}\n            namespace: ${spring.profiles.active}\n            data-type: json\n            rule-type: gw-flow\n','5434db0d1ff364c5d422214e7b35e7b0','2024-11-02 13:01:28','2024-11-02 13:08:26','nacos','192.168.2.101','','prod','网关模块','','','yaml','',''),
(119,'aidaoteng-auth.yml','DEFAULT_GROUP','# 安全配置\nsecurity:\n  # 验证码\n  captcha:\n    # 是否开启验证码\n    enabled: true\n    # 验证码类型 math 数组计算 char 字符验证\n    type: MATH\n    # line 线段干扰 circle 圆圈干扰 shear 扭曲干扰\n    category: CIRCLE\n    # 数字验证码位数\n    numberLength: 1\n    # 字符验证码长度\n    charLength: 4\n\n# 用户配置\nuser:\n  password:\n    # 密码最大错误次数\n    maxRetryCount: 5\n    # 密码锁定时间（默认10分钟）\n    lockTime: 10\n\n# 三方授权\njustauth:\n  # 前端外网访问地址\n  address: http://localhost:80\n  type:\n    maxkey:\n      # maxkey 服务器地址\n      # 注意 如下均配置均不需要修改 maxkey 已经内置好了数据\n      server-url: http://sso.maxkey.top\n      client-id: 876892492581044224\n      client-secret: x1Y5MTMwNzIwMjMxNTM4NDc3Mzche8\n      redirect-uri: ${justauth.address}/social-callback?source=maxkey\n    topiam:\n      # topiam 服务器地址\n      server-url: http://127.0.0.1:1989/api/v1/authorize/y0q************spq***********8ol\n      client-id: 449c4*********937************759\n      client-secret: ac7***********1e0************28d\n      redirect-uri: ${justauth.address}/social-callback?source=topiam\n      scopes: [ openid, email, phone, profile ]\n    qq:\n      client-id: 10**********6\n      client-secret: 1f7d08**********5b7**********29e\n      redirect-uri: ${justauth.address}/social-callback?source=qq\n      union-id: false\n    weibo:\n      client-id: 10**********6\n      client-secret: 1f7d08**********5b7**********29e\n      redirect-uri: ${justauth.address}/social-callback?source=weibo\n    gitee:\n      client-id: 91436b7940090d09c72c7daf85b959cfd5f215d67eea73acbf61b6b590751a98\n      client-secret: 02c6fcfd70342980cd8dd2f2c06c1a350645d76c754d7a264c4e125f9ba915ac\n      redirect-uri: ${justauth.address}/social-callback?source=gitee\n    dingtalk:\n      client-id: 10**********6\n      client-secret: 1f7d08**********5b7**********29e\n      redirect-uri: ${justauth.address}/social-callback?source=dingtalk\n    baidu:\n      client-id: 10**********6\n      client-secret: 1f7d08**********5b7**********29e\n      redirect-uri: ${justauth.address}/social-callback?source=baidu\n    csdn:\n      client-id: 10**********6\n      client-secret: 1f7d08**********5b7**********29e\n      redirect-uri: ${justauth.address}/social-callback?source=csdn\n    coding:\n      client-id: 10**********6\n      client-secret: 1f7d08**********5b7**********29e\n      redirect-uri: ${justauth.address}/social-callback?source=coding\n      coding-group-name: xx\n    oschina:\n      client-id: 10**********6\n      client-secret: 1f7d08**********5b7**********29e\n      redirect-uri: ${justauth.address}/social-callback?source=oschina\n    alipay_wallet:\n      client-id: 10**********6\n      client-secret: 1f7d08**********5b7**********29e\n      redirect-uri: ${justauth.address}/social-callback?source=alipay_wallet\n      alipay-public-key: MIIB**************DAQAB\n    wechat_open:\n      client-id: 10**********6\n      client-secret: 1f7d08**********5b7**********29e\n      redirect-uri: ${justauth.address}/social-callback?source=wechat_open\n    wechat_mp:\n      client-id: 10**********6\n      client-secret: 1f7d08**********5b7**********29e\n      redirect-uri: ${justauth.address}/social-callback?source=wechat_mp\n    wechat_enterprise:\n      client-id: 10**********6\n      client-secret: 1f7d08**********5b7**********29e\n      redirect-uri: ${justauth.address}/social-callback?source=wechat_enterprise\n      agent-id: 1000002\n    gitlab:\n      client-id: 10**********6\n      client-secret: 1f7d08**********5b7**********29e\n      redirect-uri: ${justauth.address}/social-callback?source=gitlab\n','362c28d8864626b864d682b5f1c4a73a','2024-11-02 13:01:28','2024-11-02 13:01:28',NULL,'192.168.2.101','','prod','认证中心',NULL,NULL,'yaml',NULL,''),
(120,'aidaoteng-monitor.yml','DEFAULT_GROUP','# 监控中心配置\nspring:\n  security:\n    user:\n      name: ruoyi\n      password: 123456\n  boot:\n    admin:\n      ui:\n        title: RuoYi-Cloud-Plus服务监控中心\n      discovery:\n        # seata 不具有健康检查的能力 防止报错排除掉\n        ignored-services: ruoyi-seata-server\n','ba7fa6a6bfde3dcb3b566fd8864834af','2024-11-02 13:01:28','2024-11-02 13:01:28',NULL,'192.168.2.101','','prod','监控中心',NULL,NULL,'yaml',NULL,''),
(121,'aidaoteng-system.yml','DEFAULT_GROUP','spring:\n  datasource:\n    dynamic:\n      # 设置默认的数据源或者数据源组,默认值即为 master\n      primary: master\n      datasource:\n        # 主库数据源\n        master:\n          type: ${spring.datasource.type}\n          driver-class-name: com.mysql.cj.jdbc.Driver\n          url: ${datasource.system-master.url}\n          username: ${datasource.system-master.username}\n          password: ${datasource.system-master.password}\n#        oracle:\n#          type: ${spring.datasource.type}\n#          driverClassName: oracle.jdbc.OracleDriver\n#          url: ${datasource.system-oracle.url}\n#          username: ${datasource.system-oracle.username}\n#          password: ${datasource.system-oracle.password}\n#        postgres:\n#          type: ${spring.datasource.type}\n#          driverClassName: org.postgresql.Driver\n#          url: ${datasource.system-postgres.url}\n#          username: ${datasource.system-postgres.username}\n#          password: ${datasource.system-postgres.password}\n','f59259409ff41d30e5276bf4afbcaa3d','2024-11-02 13:01:28','2024-11-02 13:01:28',NULL,'192.168.2.101','','prod','系统模块',NULL,NULL,'yaml',NULL,''),
(122,'aidaoteng-gen.yml','DEFAULT_GROUP','spring:\n  datasource:\n    dynamic:\n      # 设置默认的数据源或者数据源组,默认值即为 master\n      primary: master\n      seata: false\n      datasource:\n        # 主库数据源\n        master:\n          type: ${spring.datasource.type}\n          driver-class-name: com.mysql.cj.jdbc.Driver\n          url: ${datasource.system-master.url}\n          username: ${datasource.system-master.username}\n          password: ${datasource.system-master.password}\n#        oracle:\n#          type: ${spring.datasource.type}\n#          driverClassName: oracle.jdbc.OracleDriver\n#          url: ${datasource.system-oracle.url}\n#          username: ${datasource.system-oracle.username}\n#          password: ${datasource.system-oracle.password}\n#        postgres:\n#          type: ${spring.datasource.type}\n#          driverClassName: org.postgresql.Driver\n#          url: ${datasource.system-postgres.url}\n#          username: ${datasource.system-postgres.username}\n#          password: ${datasource.system-postgres.password}\n\n# 代码生成\ngen:\n  # 作者\n  author: LionLi\n  # 默认生成包路径 system 需改成自己的模块名称 如 system monitor tool\n  packageName: org.dromara.system\n  # 自动去除表前缀，默认是false\n  autoRemovePre: false\n  # 表前缀（生成类名不会包含表前缀，多个用逗号分隔）\n  tablePrefix: sys_\n','2d00f0362d71287c0033b665a48337af','2024-11-02 13:01:28','2024-11-02 13:01:28',NULL,'192.168.2.101','','prod','代码生成',NULL,NULL,'yaml',NULL,''),
(123,'aidaoteng-job.yml','DEFAULT_GROUP','spring:\n  datasource:\n    dynamic:\n      # 设置默认的数据源或者数据源组,默认值即为 master\n      primary: master\n      seata: false\n      datasource:\n        # 主库数据源\n        master:\n          type: ${spring.datasource.type}\n          driver-class-name: com.mysql.cj.jdbc.Driver\n          url: ${datasource.job.url}\n          username: ${datasource.job.username}\n          password: ${datasource.job.password}\n\nsnail-job:\n  enabled: true\n  # 需要在 SnailJob 后台组管理创建对应名称的组,然后创建任务的时候选择对应的组,才能正确分派任务\n  group: \"ruoyi_group\"\n  #  SnailJob 接入验证令牌\n  token: \"SJ_cKqBTPzCsWA3VyuCfFoccmuIEGXjr5KT\"\n  server:\n    # 从 nacos 获取服务\n    server-name: ruoyi-snailjob-server\n    # 服务名优先 ip垫底\n    host: 127.0.0.1\n    port: 17888\n  # 详见 script/sql/ry_job.sql `sj_namespace` 表\n  namespace: ${spring.profiles.active}\n  # 随主应用端口飘逸\n  port: 2${server.port}\n  # 客户端ip指定\n  host:\n','08f5e690ce18e8497d69f7a1018efea3','2024-11-02 13:01:28','2024-11-02 13:01:28',NULL,'192.168.2.101','','prod','定时任务',NULL,NULL,'yaml',NULL,''),
(124,'aidaoteng-resource.yml','DEFAULT_GROUP','spring:\n  datasource:\n    dynamic:\n      # 设置默认的数据源或者数据源组,默认值即为 master\n      primary: master\n      datasource:\n        # 主库数据源\n        master:\n          type: ${spring.datasource.type}\n          driver-class-name: com.mysql.cj.jdbc.Driver\n          url: ${datasource.system-master.url}\n          username: ${datasource.system-master.username}\n          password: ${datasource.system-master.password}\n#        oracle:\n#          type: ${spring.datasource.type}\n#          driverClassName: oracle.jdbc.OracleDriver\n#          url: ${datasource.system-oracle.url}\n#          username: ${datasource.system-oracle.username}\n#          password: ${datasource.system-oracle.password}\n#        postgres:\n#          type: ${spring.datasource.type}\n#          driverClassName: org.postgresql.Driver\n#          url: ${datasource.system-postgres.url}\n#          username: ${datasource.system-postgres.username}\n#          password: ${datasource.system-postgres.password}\n\n# 默认/推荐使用sse推送\nsse:\n  enabled: true\n  path: /sse\n\nwebsocket:\n  # 如果关闭 需要和前端开关一起关闭\n  enabled: false\n  # 路径\n  path: /websocket\n  # 设置访问源地址\n  allowedOrigins: \'*\'\n\nmail:\n  enabled: false\n  host: smtp.163.com\n  port: 465\n  # 是否需要用户名密码验证\n  auth: true\n  # 发送方，遵循RFC-822标准\n  from: xxx@163.com\n  # 用户名（注意：如果使用foxmail邮箱，此处user为qq号）\n  user: xxx@163.com\n  # 密码（注意，某些邮箱需要为SMTP服务单独设置密码，详情查看相关帮助）\n  pass: xxxxxxxxxx\n  # 使用 STARTTLS安全连接，STARTTLS是对纯文本通信协议的扩展。\n  starttlsEnable: true\n  # 使用SSL安全连接\n  sslEnable: true\n  # SMTP超时时长，单位毫秒，缺省值不超时\n  timeout: 0\n  # Socket连接超时值，单位毫秒，缺省值不超时\n  connectionTimeout: 0\n\n# sms 短信 支持 阿里云 腾讯云 云片 等等各式各样的短信服务商\n# https://sms4j.com/doc3/ 差异配置文档地址 支持单厂商多配置，可以配置多个同时使用\nsms:\n  # 配置源类型用于标定配置来源(interface,yaml)\n  config-type: yaml\n  # 用于标定yml中的配置是否开启短信拦截，接口配置不受此限制\n  restricted: true\n  # 短信拦截限制单手机号每分钟最大发送，只对开启了拦截的配置有效\n  minute-max: 1\n  # 短信拦截限制单手机号每日最大发送量，只对开启了拦截的配置有效\n  account-max: 30\n  # 以下配置来自于 org.dromara.sms4j.provider.config.BaseConfig类中\n  blends:\n    # 唯一ID 用于发送短信寻找具体配置 随便定义别用中文即可\n    # 可以同时存在两个相同厂商 例如: ali1 ali2 两个不同的阿里短信账号 也可用于区分租户\n    config1:\n      # 框架定义的厂商名称标识，标定此配置是哪个厂商，详细请看厂商标识介绍部分\n      supplier: alibaba\n      # 有些称为accessKey有些称之为apiKey，也有称为sdkKey或者appId。\n      access-key-id: 您的accessKey\n      # 称为accessSecret有些称之为apiSecret\n      access-key-secret: 您的accessKeySecret\n      signature: 您的短信签名\n      sdk-app-id: 您的sdkAppId\n    config2:\n      # 厂商标识，标定此配置是哪个厂商，详细请看厂商标识介绍部分\n      supplier: tencent\n      access-key-id: 您的accessKey\n      access-key-secret: 您的accessKeySecret\n      signature: 您的短信签名\n      sdk-app-id: 您的sdkAppId\n','efb16000eb230328fa2128ea56558fd2','2024-11-02 13:01:28','2024-11-02 13:01:28',NULL,'192.168.2.101','','prod','文件服务',NULL,NULL,'yaml',NULL,''),
(125,'aidaoteng-workflow.yml','DEFAULT_GROUP','spring:\n  datasource:\n    dynamic:\n      # 设置默认的数据源或者数据源组,默认值即为 master\n      primary: master\n      datasource:\n        # 主库数据源\n        master:\n          type: ${spring.datasource.type}\n          driver-class-name: com.mysql.cj.jdbc.Driver\n          url: ${datasource.workflow.url}\n          username: ${datasource.workflow.username}\n          password: ${datasource.workflow.password}\n#        oracle:\n#          type: ${spring.datasource.type}\n#          driverClassName: oracle.jdbc.OracleDriver\n#          url: ${datasource.system-oracle.url}\n#          username: ${datasource.system-oracle.username}\n#          password: ${datasource.system-oracle.password}\n#        postgres:\n#          type: ${spring.datasource.type}\n#          driverClassName: org.postgresql.Driver\n#          url: ${datasource.system-postgres.url}\n#          username: ${datasource.system-postgres.username}\n#          password: ${datasource.system-postgres.password}\n\n# flowable配置\nflowable:\n  # 开关 用于启动/停用工作流\n  enabled: true\n  process.enabled: ${flowable.enabled}\n  eventregistry.enabled: ${flowable.enabled}\n  # 关闭定时任务JOB\n  async-executor-activate: false\n  # 将databaseSchemaUpdate设置为true。当Flowable发现库与数据库表结构不一致时，会自动将数据库表结构升级至新版本。\n  database-schema-update: true\n  activity-font-name: 宋体\n  label-font-name: 宋体\n  annotation-font-name: 宋体\n  # 关闭各个模块生成表，目前只使用工作流基础表\n  idm:\n    enabled: false\n  cmmn:\n    enabled: false\n  dmn:\n    enabled: false\n  app:\n    enabled: false\n','95b566892b838da618fbfdaf1ecffd0a','2024-11-02 13:01:28','2024-11-02 13:01:28',NULL,'192.168.2.101','','prod','工作流服务',NULL,NULL,'yaml',NULL,''),
(126,'sentinel-aidaoteng-gateway.json','DEFAULT_GROUP','[\n  {\n    \"resource\": \"ruoyi-auth\",\n    \"count\": 500,\n    \"grade\": 1,\n    \"limitApp\": \"default\",\n    \"strategy\": 0,\n    \"controlBehavior\": 0\n  },\n  {\n    \"resource\": \"ruoyi-system\",\n    \"count\": 1000,\n    \"grade\": 1,\n    \"limitApp\": \"default\",\n    \"strategy\": 0,\n    \"controlBehavior\": 0\n  },\n  {\n    \"resource\": \"ruoyi-resource\",\n    \"count\": 500,\n    \"grade\": 1,\n    \"limitApp\": \"default\",\n    \"strategy\": 0,\n    \"controlBehavior\": 0\n  }\n]\n','2efad3702e99adef46c2ee818b3925e5','2024-11-02 13:01:28','2024-11-02 13:01:28',NULL,'192.168.2.101','','prod','限流策略',NULL,NULL,'json',NULL,''),
(127,'seata-server.properties','DEFAULT_GROUP','service.vgroupMapping.ruoyi-auth-group=default\nservice.vgroupMapping.ruoyi-system-group=default\nservice.vgroupMapping.ruoyi-resource-group=default\nservice.vgroupMapping.ruoyi-workflow-group=default\n\nservice.enableDegrade=false\nservice.disableGlobalTransaction=false\n\n#Transaction storage configuration, only for the server. The file, DB, and redis configuration values are optional.\nstore.mode=db\nstore.lock.mode=db\nstore.session.mode=db\n#Used for password encryption\n#store.publicKey=\n\n#These configurations are required if the `store mode` is `db`. If `store.mode,store.lock.mode,store.session.mode` are not equal to `db`, you can remove the configuration block.\nstore.db.datasource=hikari\nstore.db.dbType=mysql\nstore.db.driverClassName=com.mysql.cj.jdbc.Driver\nstore.db.url=jdbc:mysql://127.0.0.1:3306/ry-seata?useUnicode=true&rewriteBatchedStatements=true&allowPublicKeyRetrieval=true\nstore.db.user=root\nstore.db.password=root\nstore.db.minConn=5\nstore.db.maxConn=30\nstore.db.globalTable=global_table\nstore.db.branchTable=branch_table\nstore.db.distributedLockTable=distributed_lock\nstore.db.queryLimit=100\nstore.db.lockTable=lock_table\nstore.db.maxWait=5000\n\n# redis æ¨¡å¼ store.mode=redis å¼å¯ (æ§å¶å°æ¥è¯¢åè½æé,ä¸å½±åå®éæ§è¡åè½)\n# store.redis.host=127.0.0.1\n# store.redis.port=6379\n# æå¤§è¿æ¥æ°\n# store.redis.maxConn=10\n# æå°è¿æ¥æ°\n# store.redis.minConn=1\n# store.redis.database=0\n# store.redis.password=\n# store.redis.queryLimit=100\n\n#Transaction rule configuration, only for the server\nserver.recovery.committingRetryPeriod=1000\nserver.recovery.asynCommittingRetryPeriod=1000\nserver.recovery.rollbackingRetryPeriod=1000\nserver.recovery.timeoutRetryPeriod=1000\nserver.maxCommitRetryTimeout=-1\nserver.maxRollbackRetryTimeout=-1\nserver.rollbackRetryTimeoutUnlockEnable=false\nserver.distributedLockExpireTime=10000\nserver.xaerNotaRetryTimeout=60000\nserver.session.branchAsyncQueueSize=5000\nserver.session.enableBranchAsyncRemove=false\n\n#Transaction rule configuration, only for the client\nclient.rm.asyncCommitBufferLimit=10000\nclient.rm.lock.retryInterval=10\nclient.rm.lock.retryTimes=30\nclient.rm.lock.retryPolicyBranchRollbackOnConflict=true\nclient.rm.reportRetryCount=5\nclient.rm.tableMetaCheckEnable=true\nclient.rm.tableMetaCheckerInterval=60000\nclient.rm.sqlParserType=druid\nclient.rm.reportSuccessEnable=false\nclient.rm.sagaBranchRegisterEnable=false\nclient.rm.sagaJsonParser=fastjson\nclient.rm.tccActionInterceptorOrder=-2147482648\nclient.tm.commitRetryCount=5\nclient.tm.rollbackRetryCount=5\nclient.tm.defaultGlobalTransactionTimeout=60000\nclient.tm.degradeCheck=false\nclient.tm.degradeCheckAllowTimes=10\nclient.tm.degradeCheckPeriod=2000\nclient.tm.interceptorOrder=-2147482648\nclient.undo.dataValidation=true\nclient.undo.logSerialization=jackson\nclient.undo.onlyCareUpdateColumns=true\nserver.undo.logSaveDays=7\nserver.undo.logDeletePeriod=86400000\nclient.undo.logTable=undo_log\nclient.undo.compress.enable=true\nclient.undo.compress.type=zip\nclient.undo.compress.threshold=64k\n\n#For TCC transaction mode\ntcc.fence.logTableName=tcc_fence_log\ntcc.fence.cleanPeriod=1h\n\n#Log rule configuration, for client and server\nlog.exceptionRate=100\n\n#Metrics configuration, only for the server\nmetrics.enabled=false\nmetrics.registryType=compact\nmetrics.exporterList=prometheus\nmetrics.exporterPrometheusPort=9898\n\n#For details about configuration items, see https://seata.io/zh-cn/docs/user/configurations.html\n#Transport configuration, for client and server\ntransport.type=TCP\ntransport.server=NIO\ntransport.heartbeat=true\ntransport.enableTmClientBatchSendRequest=false\ntransport.enableRmClientBatchSendRequest=true\ntransport.enableTcServerBatchSendResponse=false\ntransport.rpcRmRequestTimeout=30000\ntransport.rpcTmRequestTimeout=30000\ntransport.rpcTcRequestTimeout=30000\ntransport.threadFactory.bossThreadPrefix=NettyBoss\ntransport.threadFactory.workerThreadPrefix=NettyServerNIOWorker\ntransport.threadFactory.serverExecutorThreadPrefix=NettyServerBizHandler\ntransport.threadFactory.shareBossWorker=false\ntransport.threadFactory.clientSelectorThreadPrefix=NettyClientSelector\ntransport.threadFactory.clientSelectorThreadSize=1\ntransport.threadFactory.clientWorkerThreadPrefix=NettyClientWorkerThread\ntransport.threadFactory.bossThreadSize=1\ntransport.threadFactory.workerThreadSize=default\ntransport.shutdown.wait=3\ntransport.serialization=seata\ntransport.compressor=none\n','045a3fbb5c8da8d3cb555000a7095aa7','2024-11-02 13:01:28','2024-11-02 13:01:28',NULL,'192.168.2.101','','prod','seata配置文件',NULL,NULL,'properties',NULL,''),
(128,'aidaoteng-sentinel-dashboard.yml','DEFAULT_GROUP','spring:\n  mvc:\n    pathmatch:\n      # 修复 sentinel 控制台未适配 springboot 2.6 新路由方式\n      matching-strategy: ANT_PATH_MATCHER\n\nserver:\n  servlet:\n    encoding:\n      force: true\n      charset: UTF-8\n      enabled: true\n    session:\n      cookie:\n        name: sentinel_dashboard_cookie\n\nlogging:\n  level:\n    org.springframework.web: INFO\n\nauth:\n  enabled: true\n  filter:\n    exclude-urls: /,/auth/login,/auth/logout,/registry/machine,/version,/actuator,/actuator/**\n    exclude-url-suffixes: htm,html,js,css,map,ico,ttf,woff,png\n  username: sentinel\n  password: sentinel\n','59055747c62f08cd2c38a6016d4b9227','2024-11-02 13:01:28','2024-11-02 13:01:28',NULL,'192.168.2.101','','prod','sentinel控制台配置文件',NULL,NULL,'yaml',NULL,''),
(129,'aidaoteng-snailjob-server.yml','DEFAULT_GROUP','spring:\n  datasource:\n    type: com.zaxxer.hikari.HikariDataSource\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: ${datasource.job.url}\n    username: ${datasource.job.username}\n    password: ${datasource.job.password}\n    hikari:\n      connection-timeout: 30000\n      validation-timeout: 5000\n      minimum-idle: 10\n      maximum-pool-size: 20\n      idle-timeout: 600000\n      max-lifetime: 900000\n      keepaliveTime: 30000\n  cloud:\n    nacos:\n      discovery:\n        metadata:\n          # 解决 er 服务有 context-path 无法监控问题\n          management.context-path: ${server.servlet.context-path}/actuator\n          # 监控账号密码\n          username: ruoyi\n          userpassword: 123456\n\n# snail-job 服务端配置\nsnail-job:\n  # 拉取重试数据的每批次的大小\n  retry-pull-page-size: 1000\n  # 拉取重试数据的每批次的大小\n  job-pull-page-size: 1000\n  # 服务端 netty 端口\n  netty-port: 17888\n  # 重试和死信表的分区总数\n  total-partition: 2\n  # 一个客户端每秒最多接收的重试数量指令\n  limiter: 1000\n  # 号段模式下步长配置\n  step: 100\n  # 日志保存时间(单位: day)\n  log-storage: 90\n  # 回调配置\n  callback:\n    #回调最大执行次数\n    max-count: 288\n    #间隔时间\n    trigger-interval: 900\n  retry-max-pull-count: 10\n','ab06186a47974fd09806e48484f37a1a','2024-11-02 13:01:28','2024-11-02 13:01:28',NULL,'192.168.2.101','','prod','SJ定时任务控制台',NULL,NULL,'yaml',NULL,'');

/*Table structure for table `config_info_aggr` */

DROP TABLE IF EXISTS `config_info_aggr`;

CREATE TABLE `config_info_aggr` (
  `id` bigint NOT NULL AUTO_INCREMENT COMMENT 'id',
  `data_id` varchar(255) COLLATE utf8mb3_bin NOT NULL COMMENT 'data_id',
  `group_id` varchar(128) COLLATE utf8mb3_bin NOT NULL COMMENT 'group_id',
  `datum_id` varchar(255) COLLATE utf8mb3_bin NOT NULL COMMENT 'datum_id',
  `content` longtext COLLATE utf8mb3_bin NOT NULL COMMENT '内容',
  `gmt_modified` datetime NOT NULL COMMENT '修改时间',
  `app_name` varchar(128) COLLATE utf8mb3_bin DEFAULT NULL COMMENT 'app_name',
  `tenant_id` varchar(128) COLLATE utf8mb3_bin DEFAULT '' COMMENT '租户字段',
  PRIMARY KEY (`id`),
  UNIQUE KEY `uk_configinfoaggr_datagrouptenantdatum` (`data_id`,`group_id`,`tenant_id`,`datum_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3 COLLATE=utf8mb3_bin COMMENT='增加租户字段';

/*Data for the table `config_info_aggr` */

/*Table structure for table `config_info_beta` */

DROP TABLE IF EXISTS `config_info_beta`;

CREATE TABLE `config_info_beta` (
  `id` bigint NOT NULL AUTO_INCREMENT COMMENT 'id',
  `data_id` varchar(255) COLLATE utf8mb3_bin NOT NULL COMMENT 'data_id',
  `group_id` varchar(128) COLLATE utf8mb3_bin NOT NULL COMMENT 'group_id',
  `app_name` varchar(128) COLLATE utf8mb3_bin DEFAULT NULL COMMENT 'app_name',
  `content` longtext COLLATE utf8mb3_bin NOT NULL COMMENT 'content',
  `beta_ips` varchar(1024) COLLATE utf8mb3_bin DEFAULT NULL COMMENT 'betaIps',
  `md5` varchar(32) COLLATE utf8mb3_bin DEFAULT NULL COMMENT 'md5',
  `gmt_create` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `gmt_modified` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '修改时间',
  `src_user` text COLLATE utf8mb3_bin COMMENT 'source user',
  `src_ip` varchar(50) COLLATE utf8mb3_bin DEFAULT NULL COMMENT 'source ip',
  `tenant_id` varchar(128) COLLATE utf8mb3_bin DEFAULT '' COMMENT '租户字段',
  `encrypted_data_key` text COLLATE utf8mb3_bin NOT NULL COMMENT '密钥',
  PRIMARY KEY (`id`),
  UNIQUE KEY `uk_configinfobeta_datagrouptenant` (`data_id`,`group_id`,`tenant_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3 COLLATE=utf8mb3_bin COMMENT='config_info_beta';

/*Data for the table `config_info_beta` */

/*Table structure for table `config_info_tag` */

DROP TABLE IF EXISTS `config_info_tag`;

CREATE TABLE `config_info_tag` (
  `id` bigint NOT NULL AUTO_INCREMENT COMMENT 'id',
  `data_id` varchar(255) COLLATE utf8mb3_bin NOT NULL COMMENT 'data_id',
  `group_id` varchar(128) COLLATE utf8mb3_bin NOT NULL COMMENT 'group_id',
  `tenant_id` varchar(128) COLLATE utf8mb3_bin DEFAULT '' COMMENT 'tenant_id',
  `tag_id` varchar(128) COLLATE utf8mb3_bin NOT NULL COMMENT 'tag_id',
  `app_name` varchar(128) COLLATE utf8mb3_bin DEFAULT NULL COMMENT 'app_name',
  `content` longtext COLLATE utf8mb3_bin NOT NULL COMMENT 'content',
  `md5` varchar(32) COLLATE utf8mb3_bin DEFAULT NULL COMMENT 'md5',
  `gmt_create` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `gmt_modified` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '修改时间',
  `src_user` text COLLATE utf8mb3_bin COMMENT 'source user',
  `src_ip` varchar(50) COLLATE utf8mb3_bin DEFAULT NULL COMMENT 'source ip',
  PRIMARY KEY (`id`),
  UNIQUE KEY `uk_configinfotag_datagrouptenanttag` (`data_id`,`group_id`,`tenant_id`,`tag_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3 COLLATE=utf8mb3_bin COMMENT='config_info_tag';

/*Data for the table `config_info_tag` */

/*Table structure for table `config_tags_relation` */

DROP TABLE IF EXISTS `config_tags_relation`;

CREATE TABLE `config_tags_relation` (
  `id` bigint NOT NULL COMMENT 'id',
  `tag_name` varchar(128) COLLATE utf8mb3_bin NOT NULL COMMENT 'tag_name',
  `tag_type` varchar(64) COLLATE utf8mb3_bin DEFAULT NULL COMMENT 'tag_type',
  `data_id` varchar(255) COLLATE utf8mb3_bin NOT NULL COMMENT 'data_id',
  `group_id` varchar(128) COLLATE utf8mb3_bin NOT NULL COMMENT 'group_id',
  `tenant_id` varchar(128) COLLATE utf8mb3_bin DEFAULT '' COMMENT 'tenant_id',
  `nid` bigint NOT NULL AUTO_INCREMENT COMMENT 'nid, 自增长标识',
  PRIMARY KEY (`nid`),
  UNIQUE KEY `uk_configtagrelation_configidtag` (`id`,`tag_name`,`tag_type`),
  KEY `idx_tenant_id` (`tenant_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3 COLLATE=utf8mb3_bin COMMENT='config_tag_relation';

/*Data for the table `config_tags_relation` */

/*Table structure for table `group_capacity` */

DROP TABLE IF EXISTS `group_capacity`;

CREATE TABLE `group_capacity` (
  `id` bigint unsigned NOT NULL AUTO_INCREMENT COMMENT '主键ID',
  `group_id` varchar(128) COLLATE utf8mb3_bin NOT NULL DEFAULT '' COMMENT 'Group ID，空字符表示整个集群',
  `quota` int unsigned NOT NULL DEFAULT '0' COMMENT '配额，0表示使用默认值',
  `usage` int unsigned NOT NULL DEFAULT '0' COMMENT '使用量',
  `max_size` int unsigned NOT NULL DEFAULT '0' COMMENT '单个配置大小上限，单位为字节，0表示使用默认值',
  `max_aggr_count` int unsigned NOT NULL DEFAULT '0' COMMENT '聚合子配置最大个数，，0表示使用默认值',
  `max_aggr_size` int unsigned NOT NULL DEFAULT '0' COMMENT '单个聚合数据的子配置大小上限，单位为字节，0表示使用默认值',
  `max_history_count` int unsigned NOT NULL DEFAULT '0' COMMENT '最大变更历史数量',
  `gmt_create` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `gmt_modified` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '修改时间',
  PRIMARY KEY (`id`),
  UNIQUE KEY `uk_group_id` (`group_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3 COLLATE=utf8mb3_bin COMMENT='集群、各Group容量信息表';

/*Data for the table `group_capacity` */

/*Table structure for table `his_config_info` */

DROP TABLE IF EXISTS `his_config_info`;

CREATE TABLE `his_config_info` (
  `id` bigint unsigned NOT NULL COMMENT 'id',
  `nid` bigint unsigned NOT NULL AUTO_INCREMENT COMMENT 'nid, 自增标识',
  `data_id` varchar(255) COLLATE utf8mb3_bin NOT NULL COMMENT 'data_id',
  `group_id` varchar(128) COLLATE utf8mb3_bin NOT NULL COMMENT 'group_id',
  `app_name` varchar(128) COLLATE utf8mb3_bin DEFAULT NULL COMMENT 'app_name',
  `content` longtext COLLATE utf8mb3_bin NOT NULL COMMENT 'content',
  `md5` varchar(32) COLLATE utf8mb3_bin DEFAULT NULL COMMENT 'md5',
  `gmt_create` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `gmt_modified` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '修改时间',
  `src_user` text COLLATE utf8mb3_bin COMMENT 'source user',
  `src_ip` varchar(50) COLLATE utf8mb3_bin DEFAULT NULL COMMENT 'source ip',
  `op_type` char(10) COLLATE utf8mb3_bin DEFAULT NULL COMMENT 'operation type',
  `tenant_id` varchar(128) COLLATE utf8mb3_bin DEFAULT '' COMMENT '租户字段',
  `encrypted_data_key` text COLLATE utf8mb3_bin NOT NULL COMMENT '密钥',
  PRIMARY KEY (`nid`),
  KEY `idx_gmt_create` (`gmt_create`),
  KEY `idx_gmt_modified` (`gmt_modified`),
  KEY `idx_did` (`data_id`)
) ENGINE=InnoDB AUTO_INCREMENT=53 DEFAULT CHARSET=utf8mb3 COLLATE=utf8mb3_bin COMMENT='多租户改造';

/*Data for the table `his_config_info` */

insert  into `his_config_info`(`id`,`nid`,`data_id`,`group_id`,`app_name`,`content`,`md5`,`gmt_create`,`gmt_modified`,`src_user`,`src_ip`,`op_type`,`tenant_id`,`encrypted_data_key`) values 
(1,1,'application-common.yml','DEFAULT_GROUP','','# 将项目路径：config/下对应文件中内容复制到此处','2944a25cb97926efcaa43b3ad7a64cf0','2024-11-02 14:51:49','2024-11-02 06:51:50','nacos','192.168.2.101','U','dev',''),
(2,2,'datasource.yml','DEFAULT_GROUP','','# 将项目路径：config/下对应文件中内容复制到此处','2944a25cb97926efcaa43b3ad7a64cf0','2024-11-02 14:52:04','2024-11-02 06:52:04','nacos','192.168.2.101','U','dev',''),
(3,3,'ruoyi-gateway.yml','DEFAULT_GROUP','','# 将项目路径：config/下对应文件中内容复制到此处','2944a25cb97926efcaa43b3ad7a64cf0','2024-11-02 14:52:30','2024-11-02 06:52:30','nacos','192.168.2.101','U','dev',''),
(4,4,'ruoyi-auth.yml','DEFAULT_GROUP','','# 将项目路径：config/下对应文件中内容复制到此处','2944a25cb97926efcaa43b3ad7a64cf0','2024-11-02 14:52:47','2024-11-02 06:52:48','nacos','192.168.2.101','U','dev',''),
(5,5,'ruoyi-monitor.yml','DEFAULT_GROUP','','# 将项目路径：config/下对应文件中内容复制到此处','2944a25cb97926efcaa43b3ad7a64cf0','2024-11-02 14:53:01','2024-11-02 06:53:01','nacos','192.168.2.101','U','dev',''),
(6,6,'ruoyi-system.yml','DEFAULT_GROUP','','# 将项目路径：config/下对应文件中内容复制到此处','2944a25cb97926efcaa43b3ad7a64cf0','2024-11-02 14:53:17','2024-11-02 06:53:18','nacos','192.168.2.101','U','dev',''),
(7,7,'ruoyi-gen.yml','DEFAULT_GROUP','','# 将项目路径：config/下对应文件中内容复制到此处','2944a25cb97926efcaa43b3ad7a64cf0','2024-11-02 14:53:33','2024-11-02 06:53:33','nacos','192.168.2.101','U','dev',''),
(8,8,'ruoyi-job.yml','DEFAULT_GROUP','','# 将项目路径：config/下对应文件中内容复制到此处','2944a25cb97926efcaa43b3ad7a64cf0','2024-11-02 14:53:42','2024-11-02 06:53:42','nacos','192.168.2.101','U','dev',''),
(9,9,'ruoyi-resource.yml','DEFAULT_GROUP','','# 将项目路径：config/下对应文件中内容复制到此处','2944a25cb97926efcaa43b3ad7a64cf0','2024-11-02 14:53:55','2024-11-02 06:53:55','nacos','192.168.2.101','U','dev',''),
(10,10,'ruoyi-workflow.yml','DEFAULT_GROUP','','# 将项目路径：config/下对应文件中内容复制到此处','2944a25cb97926efcaa43b3ad7a64cf0','2024-11-02 14:54:07','2024-11-02 06:54:07','nacos','192.168.2.101','U','dev',''),
(11,11,'sentinel-ruoyi-gateway.json','DEFAULT_GROUP','','# 将项目路径：config/下对应文件中内容复制到此处','2944a25cb97926efcaa43b3ad7a64cf0','2024-11-02 14:54:24','2024-11-02 06:54:25','nacos','192.168.2.101','U','dev',''),
(12,12,'seata-server.properties','DEFAULT_GROUP','','# 将项目路径：config/下对应文件中内容复制到此处','2944a25cb97926efcaa43b3ad7a64cf0','2024-11-02 14:54:39','2024-11-02 06:54:39','nacos','192.168.2.101','U','dev',''),
(13,13,'ruoyi-sentinel-dashboard.yml','DEFAULT_GROUP','','# 将项目路径：config/下对应文件中内容复制到此处','2944a25cb97926efcaa43b3ad7a64cf0','2024-11-02 14:54:52','2024-11-02 06:54:52','nacos','192.168.2.101','U','dev',''),
(14,14,'ruoyi-snailjob-server.yml','DEFAULT_GROUP','','# 将项目路径：config/下对应文件中内容复制到此处','2944a25cb97926efcaa43b3ad7a64cf0','2024-11-02 14:55:07','2024-11-02 06:55:07','nacos','192.168.2.101','U','dev',''),
(2,15,'datasource.yml','DEFAULT_GROUP','','datasource:\n  system-master:\n    # jdbc 所有参数配置参考 https://lionli.blog.csdn.net/article/details/122018562\n    # rewriteBatchedStatements=true 批处理优化 大幅提升批量插入更新删除性能\n    url: jdbc:mysql://localhost:3306/ry-cloud?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8&rewriteBatchedStatements=true&allowPublicKeyRetrieval=true\n    username: root\n    password: password\n  gen:\n    url: jdbc:mysql://localhost:3306/ry-cloud?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8&rewriteBatchedStatements=true&allowPublicKeyRetrieval=true\n    username: root\n    password: password\n  job:\n    url: jdbc:mysql://localhost:3306/ry-job?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8&rewriteBatchedStatements=true&allowPublicKeyRetrieval=true\n    username: root\n    password: password\n  workflow:\n    url: jdbc:mysql://localhost:3306/ry-workflow?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8&rewriteBatchedStatements=true&allowPublicKeyRetrieval=true&nullCatalogMeansCurrent=true\n    username: root\n    password: password\n#  system-oracle:\n#    url: jdbc:oracle:thin:@//localhost:1521/XE\n#    username: ROOT\n#    password: password\n#  system-postgres:\n#    url: jdbc:postgresql://localhost:5432/postgres?useUnicode=true&characterEncoding=utf8&useSSL=true&autoReconnect=true&reWriteBatchedInserts=true\n#    username: root\n#    password: password\n\nspring:\n  datasource:\n    type: com.zaxxer.hikari.HikariDataSource\n    # 动态数据源文档 https://www.kancloud.cn/tracy5546/dynamic-datasource/content\n    dynamic:\n      # 性能分析插件(有性能损耗 不建议生产环境使用)\n      p6spy: true\n      # 开启seata代理，开启后默认每个数据源都代理，如果某个不需要代理可单独关闭\n      seata: ${seata.enabled}\n      # 严格模式 匹配不到数据源则报错\n      strict: true\n      hikari:\n        # 最大连接池数量\n        maxPoolSize: 20\n        # 最小空闲线程数量\n        minIdle: 10\n        # 配置获取连接等待超时的时间\n        connectionTimeout: 30000\n        # 校验超时时间\n        validationTimeout: 5000\n        # 空闲连接存活最大时间，默认10分钟\n        idleTimeout: 600000\n        # 此属性控制池中连接的最长生命周期，值0表示无限生命周期，默认30分钟\n        maxLifetime: 1800000\n        # 多久检查一次连接的活性\n        keepaliveTime: 30000\n','0a54f3eeff600980be9bc099a266438e','2024-11-02 15:05:49','2024-11-02 07:05:49','nacos','192.168.2.101','U','dev',''),
(1,16,'application-common.yml','DEFAULT_GROUP','','server:\n  # undertow 配置\n  undertow:\n    # HTTP post内容的最大大小。当值为-1时，默认值为大小是无限的\n    max-http-post-size: -1\n    # 以下的配置会影响buffer,这些buffer会用于服务器连接的IO操作,有点类似netty的池化内存管理\n    # 每块buffer的空间大小,越小的空间被利用越充分\n    buffer-size: 512\n    # 是否分配的直接内存\n    direct-buffers: true\n    threads:\n      # 设置IO线程数, 它主要执行非阻塞的任务,它们会负责多个连接, 默认设置每个CPU核心一个线程\n      io: 8\n      # 阻塞任务线程池, 当执行类似servlet请求阻塞操作, undertow会从这个线程池中取得线程,它的值设置取决于系统的负载\n      worker: 256\n\ndubbo:\n  application:\n    # 关闭qos端口避免单机多生产者端口冲突 如需使用自行开启\n    qos-enable: false\n  protocol:\n    # 如需使用 Triple 3.0 新协议 可查看官方文档\n    # 使用 dubbo 协议通信\n    name: dubbo\n    # dubbo 协议端口(-1表示自增端口,从20880开始)\n    port: -1\n    # 指定dubbo协议注册ip\n    # host: 192.168.0.100\n  # 消费者相关配置\n  consumer:\n    # 超时时间\n    timeout: 3000\n  # 自定义配置\n  custom:\n    # 全局请求log\n    request-log: true\n    # info 基础信息 param 参数信息 full 全部\n    log-level: info\n\nspring:\n  threads:\n    # 开启虚拟线程 仅jdk21可用\n    virtual:\n      enabled: false\n  # 资源信息\n  messages:\n    # 国际化资源文件路径\n    basename: i18n/messages\n  servlet:\n    multipart:\n      # 整个请求大小限制\n      max-request-size: 20MB\n      # 上传单个文件大小限制\n      max-file-size: 10MB\n  mvc:\n    # 设置静态资源路径 防止所有请求都去查静态资源\n    static-path-pattern: /static/**\n    format:\n      date-time: yyyy-MM-dd HH:mm:ss\n  #jackson配置\n  jackson:\n    # 日期格式化\n    date-format: yyyy-MM-dd HH:mm:ss\n    serialization:\n      # 格式化输出\n      INDENT_OUTPUT: false\n      # 忽略无法转换的对象\n      fail_on_empty_beans: false\n    deserialization:\n      # 允许对象忽略json中不存在的属性\n      fail_on_unknown_properties: false\n  cloud:\n    nacos:\n      discovery:\n        metadata:\n          # admin 监控账号密码\n          username: ruoyi\n          userpassword: 123456\n    # sentinel 配置\n    sentinel:\n      # sentinel 开关\n      enabled: true\n      transport:\n        # dashboard控制台服务名 用于服务发现\n        # 如无此配置将默认使用下方 dashboard 配置直接注册\n        server-name: ruoyi-sentinel-dashboard\n        # 客户端指定注册的ip 用于多网卡ip不稳点使用\n        # client-ip:\n        # 控制台地址 从1.3.0开始使用 server-name 注册\n        # dashboard: localhost:8718\n\n    bus:\n      id: ${spring.application.name}\n      base-packages: org.dromara.**.event\n  # 消息总线 也可以使用 kafka 参考 spring-cloud-bus 用法\n  rabbitmq:\n    host: localhost\n    port: 5672\n    username: ruoyi\n    password: ruoyi123\n\n  # redis通用配置 子服务可以自行配置进行覆盖\n  data:\n    redis:\n      host: localhost\n      port: 6379\n      # redis 密码必须配置\n      password: ruoyi123\n      database: 0\n      # 需要使用数字\n      timeout: 10000\n      ssl.enabled: false\n\n# redisson 配置\nredisson:\n  # redis key前缀\n  keyPrefix:\n  # 线程池数量\n  threads: 4\n  # Netty线程池数量\n  nettyThreads: 8\n  # 单节点配置\n  singleServerConfig:\n    # 客户端名称\n    clientName: ${spring.application.name}\n    # 最小空闲连接数\n    connectionMinimumIdleSize: 8\n    # 连接池大小\n    connectionPoolSize: 32\n    # 连接空闲超时，单位：毫秒\n    idleConnectionTimeout: 10000\n    # 命令等待超时，单位：毫秒\n    timeout: 3000\n    # 发布和订阅连接池大小\n    subscriptionConnectionPoolSize: 50\n\n# 分布式锁 lock4j 全局配置\nlock4j:\n  # 获取分布式锁超时时间，默认为 3000 毫秒\n  acquire-timeout: 3000\n  # 分布式锁的超时时间，默认为 30 秒\n  expire: 30000\n\n# 暴露监控端点\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: \'*\'\n  endpoint:\n    health:\n      show-details: ALWAYS\n    logfile:\n      external-file: ./logs/${spring.application.name}/console.log\n\n# 日志配置\nlogging:\n  level:\n    org.springframework: warn\n    org.apache.dubbo: warn\n    com.alibaba.nacos: warn\n    com.alibaba.cloud.sentinel: warn\n    org.mybatis.spring.mapper: error\n    org.apache.dubbo.config: error\n    # 临时处理 spring 调整日志级别导致启动警告问题 不影响使用等待 alibaba 适配\n    org.springframework.context.support.PostProcessorRegistrationDelegate: error\n  config: classpath:logback-plus.xml\n\n# Sa-Token配置\nsa-token:\n  # token名称 (同时也是cookie名称)\n  token-name: Authorization\n  # 开启内网服务调用鉴权(不允许越过gateway访问内网服务 保障服务安全)\n  check-same-token: true\n  # 是否允许同一账号并发登录 (为true时允许一起登录, 为false时新登录挤掉旧登录)\n  is-concurrent: true\n  # 在多人登录同一账号时，是否共用一个token (为true时所有登录共用一个token, 为false时每次登录新建一个token)\n  is-share: false\n  # jwt秘钥\n  jwt-secret-key: abcdefghijklmnopqrstuvwxyz\n\n# MyBatisPlus配置\n# https://baomidou.com/config/\nmybatis-plus:\n  # 多包名使用 例如 org.dromara.**.mapper,org.xxx.**.mapper\n  mapperPackage: org.dromara.**.mapper\n  # 对应的 XML 文件位置\n  mapperLocations: classpath*:mapper/**/*Mapper.xml\n  # 实体扫描，多个package用逗号或者分号分隔\n  typeAliasesPackage: org.dromara.**.domain\n  global-config:\n    dbConfig:\n      # 主键类型\n      # AUTO 自增 NONE 空 INPUT 用户输入 ASSIGN_ID 雪花 ASSIGN_UUID 唯一 UUID\n      # 如需改为自增 需要将数据库表全部设置为自增\n      idType: ASSIGN_ID\n\n# 数据加密\nmybatis-encryptor:\n  # 是否开启加密\n  enable: false\n  # 默认加密算法\n  algorithm: BASE64\n  # 编码方式 BASE64/HEX。默认BASE64\n  encode: BASE64\n  # 安全秘钥 对称算法的秘钥 如：AES，SM4\n  password:\n  # 公私钥 非对称算法的公私钥 如：SM2，RSA\n  publicKey:\n  privateKey:\n\n# api接口加密\napi-decrypt:\n  # 是否开启全局接口加密\n  enabled: true\n  # AES 加密头标识\n  headerFlag: encrypt-key\n  # 响应加密公钥 非对称算法的公私钥 如：SM2，RSA 使用者请自行更换\n  # 对应前端解密私钥 MIIBVAIBADANBgkqhkiG9w0BAQEFAASCAT4wggE6AgEAAkEAmc3CuPiGL/LcIIm7zryCEIbl1SPzBkr75E2VMtxegyZ1lYRD+7TZGAPkvIsBcaMs6Nsy0L78n2qh+lIZMpLH8wIDAQABAkEAk82Mhz0tlv6IVCyIcw/s3f0E+WLmtPFyR9/WtV3Y5aaejUkU60JpX4m5xNR2VaqOLTZAYjW8Wy0aXr3zYIhhQQIhAMfqR9oFdYw1J9SsNc+CrhugAvKTi0+BF6VoL6psWhvbAiEAxPPNTmrkmrXwdm/pQQu3UOQmc2vCZ5tiKpW10CgJi8kCIFGkL6utxw93Ncj4exE/gPLvKcT+1Emnoox+O9kRXss5AiAMtYLJDaLEzPrAWcZeeSgSIzbL+ecokmFKSDDcRske6QIgSMkHedwND1olF8vlKsJUGK3BcdtM8w4Xq7BpSBwsloE=\n  publicKey: MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAJnNwrj4hi/y3CCJu868ghCG5dUj8wZK++RNlTLcXoMmdZWEQ/u02RgD5LyLAXGjLOjbMtC+/J9qofpSGTKSx/MCAwEAAQ==\n  # 请求解密私钥 非对称算法的公私钥 如：SM2，RSA 使用者请自行更换\n  # 对应前端加密公钥 MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAKoR8mX0rGKLqzcWmOzbfj64K8ZIgOdHnzkXSOVOZbFu/TJhZ7rFAN+eaGkl3C4buccQd/EjEsj9ir7ijT7h96MCAwEAAQ==\n  privateKey: MIIBVAIBADANBgkqhkiG9w0BAQEFAASCAT4wggE6AgEAAkEAqhHyZfSsYourNxaY7Nt+PrgrxkiA50efORdI5U5lsW79MmFnusUA355oaSXcLhu5xxB38SMSyP2KvuKNPuH3owIDAQABAkAfoiLyL+Z4lf4Myxk6xUDgLaWGximj20CUf+5BKKnlrK+Ed8gAkM0HqoTt2UZwA5E2MzS4EI2gjfQhz5X28uqxAiEA3wNFxfrCZlSZHb0gn2zDpWowcSxQAgiCstxGUoOqlW8CIQDDOerGKH5OmCJ4Z21v+F25WaHYPxCFMvwxpcw99EcvDQIgIdhDTIqD2jfYjPTY8Jj3EDGPbH2HHuffvflECt3Ek60CIQCFRlCkHpi7hthhYhovyloRYsM+IS9h/0BzlEAuO0ktMQIgSPT3aFAgJYwKpqRYKlLDVcflZFCKY7u3UP8iWi1Qw0Y=\n\n# 防止XSS攻击\nxss:\n  enabled: true\n  excludeUrls:\n    - /system/notice\n    - /workflow/model/save\n    - /workflow/model/editModelXml\n\n# 接口文档配置\nspringdoc:\n  api-docs:\n    # 是否开启接口文档\n    enabled: true\n#  swagger-ui:\n#    # 持久化认证数据\n#    persistAuthorization: true\n  info:\n    # 标题\n    title: \'标题：RuoYi-Cloud-Plus微服务权限管理系统_接口文档\'\n    # 描述\n    description: \'描述：微服务权限管理系统, 具体包括XXX,XXX模块...\'\n    # 版本\n    version: \'版本号：系统版本...\'\n    # 作者信息\n    contact:\n      name: Lion Li\n      email: crazylionli@163.com\n      url: https://gitee.com/dromara/RuoYi-Cloud-Plus\n  components:\n    # 鉴权方式配置\n    security-schemes:\n      apiKey:\n        type: APIKEY\n        in: HEADER\n        name: ${sa-token.token-name}\n\n# seata配置\nseata:\n  # 是否启用\n  enabled: true\n  # Seata 应用编号，默认为应用名\n  application-id: ${spring.application.name}\n  # Seata 事务组编号，用于 TC 集群名\n  tx-service-group: ${spring.application.name}-group\n\n# 多租户配置\ntenant:\n  # 是否开启\n  enable: true\n  # 排除表\n  excludes:\n    - sys_menu\n    - sys_tenant\n    - sys_tenant_package\n    - sys_role_dept\n    - sys_role_menu\n    - sys_user_post\n    - sys_user_role\n    - sys_client\n    - sys_oss_config\n','d7acbd0d6eb76c7ec59bce6216882c18','2024-11-02 15:26:12','2024-11-02 07:26:12','nacos','192.168.2.101','U','dev',''),
(1,17,'application-common.yml','DEFAULT_GROUP','','server:\n  # undertow 配置\n  undertow:\n    # HTTP post内容的最大大小。当值为-1时，默认值为大小是无限的\n    max-http-post-size: -1\n    # 以下的配置会影响buffer,这些buffer会用于服务器连接的IO操作,有点类似netty的池化内存管理\n    # 每块buffer的空间大小,越小的空间被利用越充分\n    buffer-size: 512\n    # 是否分配的直接内存\n    direct-buffers: true\n    threads:\n      # 设置IO线程数, 它主要执行非阻塞的任务,它们会负责多个连接, 默认设置每个CPU核心一个线程\n      io: 8\n      # 阻塞任务线程池, 当执行类似servlet请求阻塞操作, undertow会从这个线程池中取得线程,它的值设置取决于系统的负载\n      worker: 256\n\ndubbo:\n  application:\n    # 关闭qos端口避免单机多生产者端口冲突 如需使用自行开启\n    qos-enable: false\n  protocol:\n    # 如需使用 Triple 3.0 新协议 可查看官方文档\n    # 使用 dubbo 协议通信\n    name: dubbo\n    # dubbo 协议端口(-1表示自增端口,从20880开始)\n    port: -1\n    # 指定dubbo协议注册ip\n    # host: 192.168.0.100\n  # 消费者相关配置\n  consumer:\n    # 超时时间\n    timeout: 3000\n  # 自定义配置\n  custom:\n    # 全局请求log\n    request-log: true\n    # info 基础信息 param 参数信息 full 全部\n    log-level: info\n\nspring:\n  threads:\n    # 开启虚拟线程 仅jdk21可用\n    virtual:\n      enabled: false\n  # 资源信息\n  messages:\n    # 国际化资源文件路径\n    basename: i18n/messages\n  servlet:\n    multipart:\n      # 整个请求大小限制\n      max-request-size: 20MB\n      # 上传单个文件大小限制\n      max-file-size: 10MB\n  mvc:\n    # 设置静态资源路径 防止所有请求都去查静态资源\n    static-path-pattern: /static/**\n    format:\n      date-time: yyyy-MM-dd HH:mm:ss\n  #jackson配置\n  jackson:\n    # 日期格式化\n    date-format: yyyy-MM-dd HH:mm:ss\n    serialization:\n      # 格式化输出\n      INDENT_OUTPUT: false\n      # 忽略无法转换的对象\n      fail_on_empty_beans: false\n    deserialization:\n      # 允许对象忽略json中不存在的属性\n      fail_on_unknown_properties: false\n  cloud:\n    nacos:\n      discovery:\n        metadata:\n          # admin 监控账号密码\n          username: ruoyi\n          userpassword: 123456\n    # sentinel 配置\n    sentinel:\n      # sentinel 开关\n      enabled: true\n      transport:\n        # dashboard控制台服务名 用于服务发现\n        # 如无此配置将默认使用下方 dashboard 配置直接注册\n        server-name: ruoyi-sentinel-dashboard\n        # 客户端指定注册的ip 用于多网卡ip不稳点使用\n        # client-ip:\n        # 控制台地址 从1.3.0开始使用 server-name 注册\n        # dashboard: localhost:8718\n\n    bus:\n      id: ${spring.application.name}\n      base-packages: org.dromara.**.event\n  # 消息总线 也可以使用 kafka 参考 spring-cloud-bus 用法\n  rabbitmq:\n    host: localhost\n    port: 5672\n    username: ruoyi\n    password: ruoyi123\n\n  # redis通用配置 子服务可以自行配置进行覆盖\n  data:\n    redis:\n      host: localhost\n      port: 6379\n      # redis 密码必须配置\n      password: admin\n      database: 0\n      # 需要使用数字\n      timeout: 10000\n      ssl.enabled: false\n\n# redisson 配置\nredisson:\n  # redis key前缀\n  keyPrefix:\n  # 线程池数量\n  threads: 4\n  # Netty线程池数量\n  nettyThreads: 8\n  # 单节点配置\n  singleServerConfig:\n    # 客户端名称\n    clientName: ${spring.application.name}\n    # 最小空闲连接数\n    connectionMinimumIdleSize: 8\n    # 连接池大小\n    connectionPoolSize: 32\n    # 连接空闲超时，单位：毫秒\n    idleConnectionTimeout: 10000\n    # 命令等待超时，单位：毫秒\n    timeout: 3000\n    # 发布和订阅连接池大小\n    subscriptionConnectionPoolSize: 50\n\n# 分布式锁 lock4j 全局配置\nlock4j:\n  # 获取分布式锁超时时间，默认为 3000 毫秒\n  acquire-timeout: 3000\n  # 分布式锁的超时时间，默认为 30 秒\n  expire: 30000\n\n# 暴露监控端点\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: \'*\'\n  endpoint:\n    health:\n      show-details: ALWAYS\n    logfile:\n      external-file: ./logs/${spring.application.name}/console.log\n\n# 日志配置\nlogging:\n  level:\n    org.springframework: warn\n    org.apache.dubbo: warn\n    com.alibaba.nacos: warn\n    com.alibaba.cloud.sentinel: warn\n    org.mybatis.spring.mapper: error\n    org.apache.dubbo.config: error\n    # 临时处理 spring 调整日志级别导致启动警告问题 不影响使用等待 alibaba 适配\n    org.springframework.context.support.PostProcessorRegistrationDelegate: error\n  config: classpath:logback-plus.xml\n\n# Sa-Token配置\nsa-token:\n  # token名称 (同时也是cookie名称)\n  token-name: Authorization\n  # 开启内网服务调用鉴权(不允许越过gateway访问内网服务 保障服务安全)\n  check-same-token: true\n  # 是否允许同一账号并发登录 (为true时允许一起登录, 为false时新登录挤掉旧登录)\n  is-concurrent: true\n  # 在多人登录同一账号时，是否共用一个token (为true时所有登录共用一个token, 为false时每次登录新建一个token)\n  is-share: false\n  # jwt秘钥\n  jwt-secret-key: abcdefghijklmnopqrstuvwxyz\n\n# MyBatisPlus配置\n# https://baomidou.com/config/\nmybatis-plus:\n  # 多包名使用 例如 org.dromara.**.mapper,org.xxx.**.mapper\n  mapperPackage: org.dromara.**.mapper\n  # 对应的 XML 文件位置\n  mapperLocations: classpath*:mapper/**/*Mapper.xml\n  # 实体扫描，多个package用逗号或者分号分隔\n  typeAliasesPackage: org.dromara.**.domain\n  global-config:\n    dbConfig:\n      # 主键类型\n      # AUTO 自增 NONE 空 INPUT 用户输入 ASSIGN_ID 雪花 ASSIGN_UUID 唯一 UUID\n      # 如需改为自增 需要将数据库表全部设置为自增\n      idType: ASSIGN_ID\n\n# 数据加密\nmybatis-encryptor:\n  # 是否开启加密\n  enable: false\n  # 默认加密算法\n  algorithm: BASE64\n  # 编码方式 BASE64/HEX。默认BASE64\n  encode: BASE64\n  # 安全秘钥 对称算法的秘钥 如：AES，SM4\n  password:\n  # 公私钥 非对称算法的公私钥 如：SM2，RSA\n  publicKey:\n  privateKey:\n\n# api接口加密\napi-decrypt:\n  # 是否开启全局接口加密\n  enabled: true\n  # AES 加密头标识\n  headerFlag: encrypt-key\n  # 响应加密公钥 非对称算法的公私钥 如：SM2，RSA 使用者请自行更换\n  # 对应前端解密私钥 MIIBVAIBADANBgkqhkiG9w0BAQEFAASCAT4wggE6AgEAAkEAmc3CuPiGL/LcIIm7zryCEIbl1SPzBkr75E2VMtxegyZ1lYRD+7TZGAPkvIsBcaMs6Nsy0L78n2qh+lIZMpLH8wIDAQABAkEAk82Mhz0tlv6IVCyIcw/s3f0E+WLmtPFyR9/WtV3Y5aaejUkU60JpX4m5xNR2VaqOLTZAYjW8Wy0aXr3zYIhhQQIhAMfqR9oFdYw1J9SsNc+CrhugAvKTi0+BF6VoL6psWhvbAiEAxPPNTmrkmrXwdm/pQQu3UOQmc2vCZ5tiKpW10CgJi8kCIFGkL6utxw93Ncj4exE/gPLvKcT+1Emnoox+O9kRXss5AiAMtYLJDaLEzPrAWcZeeSgSIzbL+ecokmFKSDDcRske6QIgSMkHedwND1olF8vlKsJUGK3BcdtM8w4Xq7BpSBwsloE=\n  publicKey: MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAJnNwrj4hi/y3CCJu868ghCG5dUj8wZK++RNlTLcXoMmdZWEQ/u02RgD5LyLAXGjLOjbMtC+/J9qofpSGTKSx/MCAwEAAQ==\n  # 请求解密私钥 非对称算法的公私钥 如：SM2，RSA 使用者请自行更换\n  # 对应前端加密公钥 MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAKoR8mX0rGKLqzcWmOzbfj64K8ZIgOdHnzkXSOVOZbFu/TJhZ7rFAN+eaGkl3C4buccQd/EjEsj9ir7ijT7h96MCAwEAAQ==\n  privateKey: MIIBVAIBADANBgkqhkiG9w0BAQEFAASCAT4wggE6AgEAAkEAqhHyZfSsYourNxaY7Nt+PrgrxkiA50efORdI5U5lsW79MmFnusUA355oaSXcLhu5xxB38SMSyP2KvuKNPuH3owIDAQABAkAfoiLyL+Z4lf4Myxk6xUDgLaWGximj20CUf+5BKKnlrK+Ed8gAkM0HqoTt2UZwA5E2MzS4EI2gjfQhz5X28uqxAiEA3wNFxfrCZlSZHb0gn2zDpWowcSxQAgiCstxGUoOqlW8CIQDDOerGKH5OmCJ4Z21v+F25WaHYPxCFMvwxpcw99EcvDQIgIdhDTIqD2jfYjPTY8Jj3EDGPbH2HHuffvflECt3Ek60CIQCFRlCkHpi7hthhYhovyloRYsM+IS9h/0BzlEAuO0ktMQIgSPT3aFAgJYwKpqRYKlLDVcflZFCKY7u3UP8iWi1Qw0Y=\n\n# 防止XSS攻击\nxss:\n  enabled: true\n  excludeUrls:\n    - /system/notice\n    - /workflow/model/save\n    - /workflow/model/editModelXml\n\n# 接口文档配置\nspringdoc:\n  api-docs:\n    # 是否开启接口文档\n    enabled: true\n#  swagger-ui:\n#    # 持久化认证数据\n#    persistAuthorization: true\n  info:\n    # 标题\n    title: \'标题：RuoYi-Cloud-Plus微服务权限管理系统_接口文档\'\n    # 描述\n    description: \'描述：微服务权限管理系统, 具体包括XXX,XXX模块...\'\n    # 版本\n    version: \'版本号：系统版本...\'\n    # 作者信息\n    contact:\n      name: Lion Li\n      email: crazylionli@163.com\n      url: https://gitee.com/dromara/RuoYi-Cloud-Plus\n  components:\n    # 鉴权方式配置\n    security-schemes:\n      apiKey:\n        type: APIKEY\n        in: HEADER\n        name: ${sa-token.token-name}\n\n# seata配置\nseata:\n  # 是否启用\n  enabled: true\n  # Seata 应用编号，默认为应用名\n  application-id: ${spring.application.name}\n  # Seata 事务组编号，用于 TC 集群名\n  tx-service-group: ${spring.application.name}-group\n\n# 多租户配置\ntenant:\n  # 是否开启\n  enable: true\n  # 排除表\n  excludes:\n    - sys_menu\n    - sys_tenant\n    - sys_tenant_package\n    - sys_role_dept\n    - sys_role_menu\n    - sys_user_post\n    - sys_user_role\n    - sys_client\n    - sys_oss_config\n','4cea41c40b643ac1828dfffb4feff712','2024-11-02 15:31:15','2024-11-02 07:31:15','nacos','0:0:0:0:0:0:0:1','U','dev',''),
(1,18,'application-common.yml','DEFAULT_GROUP','','server:\n  # undertow 配置\n  undertow:\n    # HTTP post内容的最大大小。当值为-1时，默认值为大小是无限的\n    max-http-post-size: -1\n    # 以下的配置会影响buffer,这些buffer会用于服务器连接的IO操作,有点类似netty的池化内存管理\n    # 每块buffer的空间大小,越小的空间被利用越充分\n    buffer-size: 512\n    # 是否分配的直接内存\n    direct-buffers: true\n    threads:\n      # 设置IO线程数, 它主要执行非阻塞的任务,它们会负责多个连接, 默认设置每个CPU核心一个线程\n      io: 8\n      # 阻塞任务线程池, 当执行类似servlet请求阻塞操作, undertow会从这个线程池中取得线程,它的值设置取决于系统的负载\n      worker: 256\n\ndubbo:\n  application:\n    # 关闭qos端口避免单机多生产者端口冲突 如需使用自行开启\n    qos-enable: false\n  protocol:\n    # 如需使用 Triple 3.0 新协议 可查看官方文档\n    # 使用 dubbo 协议通信\n    name: dubbo\n    # dubbo 协议端口(-1表示自增端口,从20880开始)\n    port: -1\n    # 指定dubbo协议注册ip\n    # host: 192.168.0.100\n  # 消费者相关配置\n  consumer:\n    # 超时时间\n    timeout: 3000\n  # 自定义配置\n  custom:\n    # 全局请求log\n    request-log: true\n    # info 基础信息 param 参数信息 full 全部\n    log-level: info\n\nspring:\n  threads:\n    # 开启虚拟线程 仅jdk21可用\n    virtual:\n      enabled: false\n  # 资源信息\n  messages:\n    # 国际化资源文件路径\n    basename: i18n/messages\n  servlet:\n    multipart:\n      # 整个请求大小限制\n      max-request-size: 20MB\n      # 上传单个文件大小限制\n      max-file-size: 10MB\n  mvc:\n    # 设置静态资源路径 防止所有请求都去查静态资源\n    static-path-pattern: /static/**\n    format:\n      date-time: yyyy-MM-dd HH:mm:ss\n  #jackson配置\n  jackson:\n    # 日期格式化\n    date-format: yyyy-MM-dd HH:mm:ss\n    serialization:\n      # 格式化输出\n      INDENT_OUTPUT: false\n      # 忽略无法转换的对象\n      fail_on_empty_beans: false\n    deserialization:\n      # 允许对象忽略json中不存在的属性\n      fail_on_unknown_properties: false\n  cloud:\n    nacos:\n      discovery:\n        metadata:\n          # admin 监控账号密码\n          username: ruoyi\n          userpassword: 123456\n    # sentinel 配置\n    sentinel:\n      # sentinel 开关\n      enabled: true\n      transport:\n        # dashboard控制台服务名 用于服务发现\n        # 如无此配置将默认使用下方 dashboard 配置直接注册\n        server-name: ruoyi-sentinel-dashboard\n        # 客户端指定注册的ip 用于多网卡ip不稳点使用\n        # client-ip:\n        # 控制台地址 从1.3.0开始使用 server-name 注册\n        # dashboard: localhost:8718\n\n    bus:\n      id: ${spring.application.name}\n      base-packages: org.dromara.**.event\n  # 消息总线 也可以使用 kafka 参考 spring-cloud-bus 用法\n  rabbitmq:\n    host: localhost\n    port: 5672\n    username: ruoyi\n    password: ruoyi123\n\n  # redis通用配置 子服务可以自行配置进行覆盖\n  data:\n    redis:\n      host: localhost\n      port: 6379\n      # redis 密码必须配置\n      password: admin\n      database: 0\n      # 需要使用数字\n      timeout: 10000\n      ssl.enabled: false\n\n# redisson 配置\nredisson:\n  # redis key前缀\n  keyPrefix:\n  # 线程池数量\n  threads: 4\n  # Netty线程池数量\n  nettyThreads: 8\n  # 单节点配置\n  singleServerConfig:\n    # 客户端名称\n    clientName: ${spring.application.name}\n    # 最小空闲连接数\n    connectionMinimumIdleSize: 8\n    # 连接池大小\n    connectionPoolSize: 32\n    # 连接空闲超时，单位：毫秒\n    idleConnectionTimeout: 10000\n    # 命令等待超时，单位：毫秒\n    timeout: 3000\n    # 发布和订阅连接池大小\n    subscriptionConnectionPoolSize: 50\n\n# 分布式锁 lock4j 全局配置\nlock4j:\n  # 获取分布式锁超时时间，默认为 3000 毫秒\n  acquire-timeout: 3000\n  # 分布式锁的超时时间，默认为 30 秒\n  expire: 30000\n\n# 暴露监控端点\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: \'*\'\n  endpoint:\n    health:\n      show-details: ALWAYS\n    logfile:\n      external-file: ./logs/${spring.application.name}/console.log\n\n# 日志配置\n# logging:\n#   level:\n#     org.springframework: warn\n#     org.apache.dubbo: warn\n#     com.alibaba.nacos: warn\n#     com.alibaba.cloud.sentinel: warn\n#     org.mybatis.spring.mapper: error\n#     org.apache.dubbo.config: error\n#     # 临时处理 spring 调整日志级别导致启动警告问题 不影响使用等待 alibaba 适配\n#     org.springframework.context.support.PostProcessorRegistrationDelegate: error\n#   config: classpath:logback-plus.xml\n\n# Sa-Token配置\nsa-token:\n  # token名称 (同时也是cookie名称)\n  token-name: Authorization\n  # 开启内网服务调用鉴权(不允许越过gateway访问内网服务 保障服务安全)\n  check-same-token: true\n  # 是否允许同一账号并发登录 (为true时允许一起登录, 为false时新登录挤掉旧登录)\n  is-concurrent: true\n  # 在多人登录同一账号时，是否共用一个token (为true时所有登录共用一个token, 为false时每次登录新建一个token)\n  is-share: false\n  # jwt秘钥\n  jwt-secret-key: abcdefghijklmnopqrstuvwxyz\n\n# MyBatisPlus配置\n# https://baomidou.com/config/\nmybatis-plus:\n  # 多包名使用 例如 org.dromara.**.mapper,org.xxx.**.mapper\n  mapperPackage: org.dromara.**.mapper\n  # 对应的 XML 文件位置\n  mapperLocations: classpath*:mapper/**/*Mapper.xml\n  # 实体扫描，多个package用逗号或者分号分隔\n  typeAliasesPackage: org.dromara.**.domain\n  global-config:\n    dbConfig:\n      # 主键类型\n      # AUTO 自增 NONE 空 INPUT 用户输入 ASSIGN_ID 雪花 ASSIGN_UUID 唯一 UUID\n      # 如需改为自增 需要将数据库表全部设置为自增\n      idType: ASSIGN_ID\n\n# 数据加密\nmybatis-encryptor:\n  # 是否开启加密\n  enable: false\n  # 默认加密算法\n  algorithm: BASE64\n  # 编码方式 BASE64/HEX。默认BASE64\n  encode: BASE64\n  # 安全秘钥 对称算法的秘钥 如：AES，SM4\n  password:\n  # 公私钥 非对称算法的公私钥 如：SM2，RSA\n  publicKey:\n  privateKey:\n\n# api接口加密\napi-decrypt:\n  # 是否开启全局接口加密\n  enabled: true\n  # AES 加密头标识\n  headerFlag: encrypt-key\n  # 响应加密公钥 非对称算法的公私钥 如：SM2，RSA 使用者请自行更换\n  # 对应前端解密私钥 MIIBVAIBADANBgkqhkiG9w0BAQEFAASCAT4wggE6AgEAAkEAmc3CuPiGL/LcIIm7zryCEIbl1SPzBkr75E2VMtxegyZ1lYRD+7TZGAPkvIsBcaMs6Nsy0L78n2qh+lIZMpLH8wIDAQABAkEAk82Mhz0tlv6IVCyIcw/s3f0E+WLmtPFyR9/WtV3Y5aaejUkU60JpX4m5xNR2VaqOLTZAYjW8Wy0aXr3zYIhhQQIhAMfqR9oFdYw1J9SsNc+CrhugAvKTi0+BF6VoL6psWhvbAiEAxPPNTmrkmrXwdm/pQQu3UOQmc2vCZ5tiKpW10CgJi8kCIFGkL6utxw93Ncj4exE/gPLvKcT+1Emnoox+O9kRXss5AiAMtYLJDaLEzPrAWcZeeSgSIzbL+ecokmFKSDDcRske6QIgSMkHedwND1olF8vlKsJUGK3BcdtM8w4Xq7BpSBwsloE=\n  publicKey: MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAJnNwrj4hi/y3CCJu868ghCG5dUj8wZK++RNlTLcXoMmdZWEQ/u02RgD5LyLAXGjLOjbMtC+/J9qofpSGTKSx/MCAwEAAQ==\n  # 请求解密私钥 非对称算法的公私钥 如：SM2，RSA 使用者请自行更换\n  # 对应前端加密公钥 MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAKoR8mX0rGKLqzcWmOzbfj64K8ZIgOdHnzkXSOVOZbFu/TJhZ7rFAN+eaGkl3C4buccQd/EjEsj9ir7ijT7h96MCAwEAAQ==\n  privateKey: MIIBVAIBADANBgkqhkiG9w0BAQEFAASCAT4wggE6AgEAAkEAqhHyZfSsYourNxaY7Nt+PrgrxkiA50efORdI5U5lsW79MmFnusUA355oaSXcLhu5xxB38SMSyP2KvuKNPuH3owIDAQABAkAfoiLyL+Z4lf4Myxk6xUDgLaWGximj20CUf+5BKKnlrK+Ed8gAkM0HqoTt2UZwA5E2MzS4EI2gjfQhz5X28uqxAiEA3wNFxfrCZlSZHb0gn2zDpWowcSxQAgiCstxGUoOqlW8CIQDDOerGKH5OmCJ4Z21v+F25WaHYPxCFMvwxpcw99EcvDQIgIdhDTIqD2jfYjPTY8Jj3EDGPbH2HHuffvflECt3Ek60CIQCFRlCkHpi7hthhYhovyloRYsM+IS9h/0BzlEAuO0ktMQIgSPT3aFAgJYwKpqRYKlLDVcflZFCKY7u3UP8iWi1Qw0Y=\n\n# 防止XSS攻击\nxss:\n  enabled: true\n  excludeUrls:\n    - /system/notice\n    - /workflow/model/save\n    - /workflow/model/editModelXml\n\n# 接口文档配置\nspringdoc:\n  api-docs:\n    # 是否开启接口文档\n    enabled: true\n#  swagger-ui:\n#    # 持久化认证数据\n#    persistAuthorization: true\n  info:\n    # 标题\n    title: \'标题：RuoYi-Cloud-Plus微服务权限管理系统_接口文档\'\n    # 描述\n    description: \'描述：微服务权限管理系统, 具体包括XXX,XXX模块...\'\n    # 版本\n    version: \'版本号：系统版本...\'\n    # 作者信息\n    contact:\n      name: Lion Li\n      email: crazylionli@163.com\n      url: https://gitee.com/dromara/RuoYi-Cloud-Plus\n  components:\n    # 鉴权方式配置\n    security-schemes:\n      apiKey:\n        type: APIKEY\n        in: HEADER\n        name: ${sa-token.token-name}\n\n# seata配置\nseata:\n  # 是否启用\n  enabled: true\n  # Seata 应用编号，默认为应用名\n  application-id: ${spring.application.name}\n  # Seata 事务组编号，用于 TC 集群名\n  tx-service-group: ${spring.application.name}-group\n\n# 多租户配置\ntenant:\n  # 是否开启\n  enable: true\n  # 排除表\n  excludes:\n    - sys_menu\n    - sys_tenant\n    - sys_tenant_package\n    - sys_role_dept\n    - sys_role_menu\n    - sys_user_post\n    - sys_user_role\n    - sys_client\n    - sys_oss_config\n','e2eab4fe412ea2141f6653a7a95650f7','2024-11-02 15:32:19','2024-11-02 07:32:19','nacos','0:0:0:0:0:0:0:1','U','dev',''),
(1,19,'application-common.yml','DEFAULT_GROUP','','server:\n  # undertow 配置\n  undertow:\n    # HTTP post内容的最大大小。当值为-1时，默认值为大小是无限的\n    max-http-post-size: -1\n    # 以下的配置会影响buffer,这些buffer会用于服务器连接的IO操作,有点类似netty的池化内存管理\n    # 每块buffer的空间大小,越小的空间被利用越充分\n    buffer-size: 512\n    # 是否分配的直接内存\n    direct-buffers: true\n    threads:\n      # 设置IO线程数, 它主要执行非阻塞的任务,它们会负责多个连接, 默认设置每个CPU核心一个线程\n      io: 8\n      # 阻塞任务线程池, 当执行类似servlet请求阻塞操作, undertow会从这个线程池中取得线程,它的值设置取决于系统的负载\n      worker: 256\n\ndubbo:\n  application:\n    # 关闭qos端口避免单机多生产者端口冲突 如需使用自行开启\n    qos-enable: false\n  protocol:\n    # 如需使用 Triple 3.0 新协议 可查看官方文档\n    # 使用 dubbo 协议通信\n    name: dubbo\n    # dubbo 协议端口(-1表示自增端口,从20880开始)\n    port: -1\n    # 指定dubbo协议注册ip\n    # host: 192.168.0.100\n  # 消费者相关配置\n  consumer:\n    # 超时时间\n    timeout: 3000\n  # 自定义配置\n  custom:\n    # 全局请求log\n    request-log: true\n    # info 基础信息 param 参数信息 full 全部\n    log-level: info\n\nspring:\n  threads:\n    # 开启虚拟线程 仅jdk21可用\n    virtual:\n      enabled: false\n  # 资源信息\n  messages:\n    # 国际化资源文件路径\n    basename: i18n/messages\n  servlet:\n    multipart:\n      # 整个请求大小限制\n      max-request-size: 20MB\n      # 上传单个文件大小限制\n      max-file-size: 10MB\n  mvc:\n    # 设置静态资源路径 防止所有请求都去查静态资源\n    static-path-pattern: /static/**\n    format:\n      date-time: yyyy-MM-dd HH:mm:ss\n  #jackson配置\n  jackson:\n    # 日期格式化\n    date-format: yyyy-MM-dd HH:mm:ss\n    serialization:\n      # 格式化输出\n      INDENT_OUTPUT: false\n      # 忽略无法转换的对象\n      fail_on_empty_beans: false\n    deserialization:\n      # 允许对象忽略json中不存在的属性\n      fail_on_unknown_properties: false\n  cloud:\n    nacos:\n      discovery:\n        metadata:\n          # admin 监控账号密码\n          username: ruoyi\n          userpassword: 123456\n    # sentinel 配置\n    sentinel:\n      # sentinel 开关\n      enabled: true\n      transport:\n        # dashboard控制台服务名 用于服务发现\n        # 如无此配置将默认使用下方 dashboard 配置直接注册\n        server-name: ruoyi-sentinel-dashboard\n        # 客户端指定注册的ip 用于多网卡ip不稳点使用\n        # client-ip:\n        # 控制台地址 从1.3.0开始使用 server-name 注册\n        # dashboard: localhost:8718\n\n    bus:\n      id: ${spring.application.name}\n      base-packages: org.dromara.**.event\n  # 消息总线 也可以使用 kafka 参考 spring-cloud-bus 用法\n  rabbitmq:\n    host: localhost\n    port: 5672\n    username: ruoyi\n    password: ruoyi123\n\n  # redis通用配置 子服务可以自行配置进行覆盖\n  data:\n    redis:\n      host: 127.0.0.1\n      port: 6379\n      # redis 密码必须配置\n      password: admin\n      database: 0\n      # 需要使用数字\n      timeout: 10000\n      ssl.enabled: false\n\n# redisson 配置\nredisson:\n  # redis key前缀\n  keyPrefix:\n  # 线程池数量\n  threads: 4\n  # Netty线程池数量\n  nettyThreads: 8\n  # 单节点配置\n  singleServerConfig:\n    # 客户端名称\n    clientName: ${spring.application.name}\n    # 最小空闲连接数\n    connectionMinimumIdleSize: 8\n    # 连接池大小\n    connectionPoolSize: 32\n    # 连接空闲超时，单位：毫秒\n    idleConnectionTimeout: 10000\n    # 命令等待超时，单位：毫秒\n    timeout: 3000\n    # 发布和订阅连接池大小\n    subscriptionConnectionPoolSize: 50\n\n# 分布式锁 lock4j 全局配置\nlock4j:\n  # 获取分布式锁超时时间，默认为 3000 毫秒\n  acquire-timeout: 3000\n  # 分布式锁的超时时间，默认为 30 秒\n  expire: 30000\n\n# 暴露监控端点\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: \'*\'\n  endpoint:\n    health:\n      show-details: ALWAYS\n    logfile:\n      external-file: ./logs/${spring.application.name}/console.log\n\n# 日志配置\n# logging:\n#   level:\n#     org.springframework: warn\n#     org.apache.dubbo: warn\n#     com.alibaba.nacos: warn\n#     com.alibaba.cloud.sentinel: warn\n#     org.mybatis.spring.mapper: error\n#     org.apache.dubbo.config: error\n#     # 临时处理 spring 调整日志级别导致启动警告问题 不影响使用等待 alibaba 适配\n#     org.springframework.context.support.PostProcessorRegistrationDelegate: error\n#   config: classpath:logback-plus.xml\n\n# Sa-Token配置\nsa-token:\n  # token名称 (同时也是cookie名称)\n  token-name: Authorization\n  # 开启内网服务调用鉴权(不允许越过gateway访问内网服务 保障服务安全)\n  check-same-token: true\n  # 是否允许同一账号并发登录 (为true时允许一起登录, 为false时新登录挤掉旧登录)\n  is-concurrent: true\n  # 在多人登录同一账号时，是否共用一个token (为true时所有登录共用一个token, 为false时每次登录新建一个token)\n  is-share: false\n  # jwt秘钥\n  jwt-secret-key: abcdefghijklmnopqrstuvwxyz\n\n# MyBatisPlus配置\n# https://baomidou.com/config/\nmybatis-plus:\n  # 多包名使用 例如 org.dromara.**.mapper,org.xxx.**.mapper\n  mapperPackage: org.dromara.**.mapper\n  # 对应的 XML 文件位置\n  mapperLocations: classpath*:mapper/**/*Mapper.xml\n  # 实体扫描，多个package用逗号或者分号分隔\n  typeAliasesPackage: org.dromara.**.domain\n  global-config:\n    dbConfig:\n      # 主键类型\n      # AUTO 自增 NONE 空 INPUT 用户输入 ASSIGN_ID 雪花 ASSIGN_UUID 唯一 UUID\n      # 如需改为自增 需要将数据库表全部设置为自增\n      idType: ASSIGN_ID\n\n# 数据加密\nmybatis-encryptor:\n  # 是否开启加密\n  enable: false\n  # 默认加密算法\n  algorithm: BASE64\n  # 编码方式 BASE64/HEX。默认BASE64\n  encode: BASE64\n  # 安全秘钥 对称算法的秘钥 如：AES，SM4\n  password:\n  # 公私钥 非对称算法的公私钥 如：SM2，RSA\n  publicKey:\n  privateKey:\n\n# api接口加密\napi-decrypt:\n  # 是否开启全局接口加密\n  enabled: true\n  # AES 加密头标识\n  headerFlag: encrypt-key\n  # 响应加密公钥 非对称算法的公私钥 如：SM2，RSA 使用者请自行更换\n  # 对应前端解密私钥 MIIBVAIBADANBgkqhkiG9w0BAQEFAASCAT4wggE6AgEAAkEAmc3CuPiGL/LcIIm7zryCEIbl1SPzBkr75E2VMtxegyZ1lYRD+7TZGAPkvIsBcaMs6Nsy0L78n2qh+lIZMpLH8wIDAQABAkEAk82Mhz0tlv6IVCyIcw/s3f0E+WLmtPFyR9/WtV3Y5aaejUkU60JpX4m5xNR2VaqOLTZAYjW8Wy0aXr3zYIhhQQIhAMfqR9oFdYw1J9SsNc+CrhugAvKTi0+BF6VoL6psWhvbAiEAxPPNTmrkmrXwdm/pQQu3UOQmc2vCZ5tiKpW10CgJi8kCIFGkL6utxw93Ncj4exE/gPLvKcT+1Emnoox+O9kRXss5AiAMtYLJDaLEzPrAWcZeeSgSIzbL+ecokmFKSDDcRske6QIgSMkHedwND1olF8vlKsJUGK3BcdtM8w4Xq7BpSBwsloE=\n  publicKey: MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAJnNwrj4hi/y3CCJu868ghCG5dUj8wZK++RNlTLcXoMmdZWEQ/u02RgD5LyLAXGjLOjbMtC+/J9qofpSGTKSx/MCAwEAAQ==\n  # 请求解密私钥 非对称算法的公私钥 如：SM2，RSA 使用者请自行更换\n  # 对应前端加密公钥 MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAKoR8mX0rGKLqzcWmOzbfj64K8ZIgOdHnzkXSOVOZbFu/TJhZ7rFAN+eaGkl3C4buccQd/EjEsj9ir7ijT7h96MCAwEAAQ==\n  privateKey: MIIBVAIBADANBgkqhkiG9w0BAQEFAASCAT4wggE6AgEAAkEAqhHyZfSsYourNxaY7Nt+PrgrxkiA50efORdI5U5lsW79MmFnusUA355oaSXcLhu5xxB38SMSyP2KvuKNPuH3owIDAQABAkAfoiLyL+Z4lf4Myxk6xUDgLaWGximj20CUf+5BKKnlrK+Ed8gAkM0HqoTt2UZwA5E2MzS4EI2gjfQhz5X28uqxAiEA3wNFxfrCZlSZHb0gn2zDpWowcSxQAgiCstxGUoOqlW8CIQDDOerGKH5OmCJ4Z21v+F25WaHYPxCFMvwxpcw99EcvDQIgIdhDTIqD2jfYjPTY8Jj3EDGPbH2HHuffvflECt3Ek60CIQCFRlCkHpi7hthhYhovyloRYsM+IS9h/0BzlEAuO0ktMQIgSPT3aFAgJYwKpqRYKlLDVcflZFCKY7u3UP8iWi1Qw0Y=\n\n# 防止XSS攻击\nxss:\n  enabled: true\n  excludeUrls:\n    - /system/notice\n    - /workflow/model/save\n    - /workflow/model/editModelXml\n\n# 接口文档配置\nspringdoc:\n  api-docs:\n    # 是否开启接口文档\n    enabled: true\n#  swagger-ui:\n#    # 持久化认证数据\n#    persistAuthorization: true\n  info:\n    # 标题\n    title: \'标题：RuoYi-Cloud-Plus微服务权限管理系统_接口文档\'\n    # 描述\n    description: \'描述：微服务权限管理系统, 具体包括XXX,XXX模块...\'\n    # 版本\n    version: \'版本号：系统版本...\'\n    # 作者信息\n    contact:\n      name: Lion Li\n      email: crazylionli@163.com\n      url: https://gitee.com/dromara/RuoYi-Cloud-Plus\n  components:\n    # 鉴权方式配置\n    security-schemes:\n      apiKey:\n        type: APIKEY\n        in: HEADER\n        name: ${sa-token.token-name}\n\n# seata配置\nseata:\n  # 是否启用\n  enabled: true\n  # Seata 应用编号，默认为应用名\n  application-id: ${spring.application.name}\n  # Seata 事务组编号，用于 TC 集群名\n  tx-service-group: ${spring.application.name}-group\n\n# 多租户配置\ntenant:\n  # 是否开启\n  enable: true\n  # 排除表\n  excludes:\n    - sys_menu\n    - sys_tenant\n    - sys_tenant_package\n    - sys_role_dept\n    - sys_role_menu\n    - sys_user_post\n    - sys_user_role\n    - sys_client\n    - sys_oss_config\n','94fbe41da34354f326e8b96d37acfa2e','2024-11-02 16:14:33','2024-11-02 08:14:34','nacos','192.168.2.101','U','dev',''),
(1,20,'application-common.yml','DEFAULT_GROUP','','server:\n  # undertow 配置\n  undertow:\n    # HTTP post内容的最大大小。当值为-1时，默认值为大小是无限的\n    max-http-post-size: -1\n    # 以下的配置会影响buffer,这些buffer会用于服务器连接的IO操作,有点类似netty的池化内存管理\n    # 每块buffer的空间大小,越小的空间被利用越充分\n    buffer-size: 512\n    # 是否分配的直接内存\n    direct-buffers: true\n    threads:\n      # 设置IO线程数, 它主要执行非阻塞的任务,它们会负责多个连接, 默认设置每个CPU核心一个线程\n      io: 8\n      # 阻塞任务线程池, 当执行类似servlet请求阻塞操作, undertow会从这个线程池中取得线程,它的值设置取决于系统的负载\n      worker: 256\n\ndubbo:\n  application:\n    # 关闭qos端口避免单机多生产者端口冲突 如需使用自行开启\n    qos-enable: false\n  protocol:\n    # 如需使用 Triple 3.0 新协议 可查看官方文档\n    # 使用 dubbo 协议通信\n    name: dubbo\n    # dubbo 协议端口(-1表示自增端口,从20880开始)\n    port: -1\n    # 指定dubbo协议注册ip\n    # host: 192.168.0.100\n  # 消费者相关配置\n  consumer:\n    # 超时时间\n    timeout: 3000\n  # 自定义配置\n  custom:\n    # 全局请求log\n    request-log: true\n    # info 基础信息 param 参数信息 full 全部\n    log-level: info\n\nspring:\n  threads:\n    # 开启虚拟线程 仅jdk21可用\n    virtual:\n      enabled: false\n  # 资源信息\n  messages:\n    # 国际化资源文件路径\n    basename: i18n/messages\n  servlet:\n    multipart:\n      # 整个请求大小限制\n      max-request-size: 20MB\n      # 上传单个文件大小限制\n      max-file-size: 10MB\n  mvc:\n    # 设置静态资源路径 防止所有请求都去查静态资源\n    static-path-pattern: /static/**\n    format:\n      date-time: yyyy-MM-dd HH:mm:ss\n  #jackson配置\n  jackson:\n    # 日期格式化\n    date-format: yyyy-MM-dd HH:mm:ss\n    serialization:\n      # 格式化输出\n      INDENT_OUTPUT: false\n      # 忽略无法转换的对象\n      fail_on_empty_beans: false\n    deserialization:\n      # 允许对象忽略json中不存在的属性\n      fail_on_unknown_properties: false\n  cloud:\n    nacos:\n      discovery:\n        metadata:\n          # admin 监控账号密码\n          username: ruoyi\n          userpassword: 123456\n    # sentinel 配置\n    sentinel:\n      # sentinel 开关\n      enabled: true\n      transport:\n        # dashboard控制台服务名 用于服务发现\n        # 如无此配置将默认使用下方 dashboard 配置直接注册\n        server-name: ruoyi-sentinel-dashboard\n        # 客户端指定注册的ip 用于多网卡ip不稳点使用\n        # client-ip:\n        # 控制台地址 从1.3.0开始使用 server-name 注册\n        # dashboard: localhost:8718\n\n    bus:\n      id: ${spring.application.name}\n      base-packages: org.dromara.**.event\n  # 消息总线 也可以使用 kafka 参考 spring-cloud-bus 用法\n  rabbitmq:\n    host: localhost\n    port: 5672\n    username: ruoyi\n    password: ruoyi123\n\n  # redis通用配置 子服务可以自行配置进行覆盖\n  data:\n    redis:\n      host: 127.0.0.1\n      port: 6379\n      # redis 密码必须配置\n      password: admin\n      database: 0\n      # 需要使用数字\n      timeout: 10000\n      ssl.enabled: false\n\n# redisson 配置\nredisson:\n  # redis key前缀\n  keyPrefix:\n  # 线程池数量\n  threads: 4\n  # Netty线程池数量\n  nettyThreads: 8\n  # 单节点配置\n  singleServerConfig:\n    # 客户端名称\n    clientName: ${spring.application.name}\n    # 最小空闲连接数\n    connectionMinimumIdleSize: 8\n    # 连接池大小\n    connectionPoolSize: 32\n    # 连接空闲超时，单位：毫秒\n    idleConnectionTimeout: 10000\n    # 命令等待超时，单位：毫秒\n    timeout: 3000\n    # 发布和订阅连接池大小\n    subscriptionConnectionPoolSize: 50\n\n# 分布式锁 lock4j 全局配置\nlock4j:\n  # 获取分布式锁超时时间，默认为 3000 毫秒\n  acquire-timeout: 3000\n  # 分布式锁的超时时间，默认为 30 秒\n  expire: 30000\n\n# 暴露监控端点\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: \'*\'\n  endpoint:\n    health:\n      show-details: ALWAYS\n    logfile:\n      external-file: ./logs/${spring.application.name}/console.log\n\n# 日志配置\n# logging:\n#   level:\n#     org.springframework: warn\n#     org.apache.dubbo: warn\n#     com.alibaba.nacos: warn\n#     com.alibaba.cloud.sentinel: warn\n#     org.mybatis.spring.mapper: error\n#     org.apache.dubbo.config: error\n#     # 临时处理 spring 调整日志级别导致启动警告问题 不影响使用等待 alibaba 适配\n#     org.springframework.context.support.PostProcessorRegistrationDelegate: error\n#   config: classpath:logback-plus.xml\n\nlogging:\n  level:\n    root: info\n    org.dromara: trace\n\n\n# Sa-Token配置\nsa-token:\n  # token名称 (同时也是cookie名称)\n  token-name: Authorization\n  # 开启内网服务调用鉴权(不允许越过gateway访问内网服务 保障服务安全)\n  check-same-token: true\n  # 是否允许同一账号并发登录 (为true时允许一起登录, 为false时新登录挤掉旧登录)\n  is-concurrent: true\n  # 在多人登录同一账号时，是否共用一个token (为true时所有登录共用一个token, 为false时每次登录新建一个token)\n  is-share: false\n  # jwt秘钥\n  jwt-secret-key: abcdefghijklmnopqrstuvwxyz\n\n# MyBatisPlus配置\n# https://baomidou.com/config/\nmybatis-plus:\n  # 多包名使用 例如 org.dromara.**.mapper,org.xxx.**.mapper\n  mapperPackage: org.dromara.**.mapper\n  # 对应的 XML 文件位置\n  mapperLocations: classpath*:mapper/**/*Mapper.xml\n  # 实体扫描，多个package用逗号或者分号分隔\n  typeAliasesPackage: org.dromara.**.domain\n  global-config:\n    dbConfig:\n      # 主键类型\n      # AUTO 自增 NONE 空 INPUT 用户输入 ASSIGN_ID 雪花 ASSIGN_UUID 唯一 UUID\n      # 如需改为自增 需要将数据库表全部设置为自增\n      idType: ASSIGN_ID\n\n# 数据加密\nmybatis-encryptor:\n  # 是否开启加密\n  enable: false\n  # 默认加密算法\n  algorithm: BASE64\n  # 编码方式 BASE64/HEX。默认BASE64\n  encode: BASE64\n  # 安全秘钥 对称算法的秘钥 如：AES，SM4\n  password:\n  # 公私钥 非对称算法的公私钥 如：SM2，RSA\n  publicKey:\n  privateKey:\n\n# api接口加密\napi-decrypt:\n  # 是否开启全局接口加密\n  enabled: true\n  # AES 加密头标识\n  headerFlag: encrypt-key\n  # 响应加密公钥 非对称算法的公私钥 如：SM2，RSA 使用者请自行更换\n  # 对应前端解密私钥 MIIBVAIBADANBgkqhkiG9w0BAQEFAASCAT4wggE6AgEAAkEAmc3CuPiGL/LcIIm7zryCEIbl1SPzBkr75E2VMtxegyZ1lYRD+7TZGAPkvIsBcaMs6Nsy0L78n2qh+lIZMpLH8wIDAQABAkEAk82Mhz0tlv6IVCyIcw/s3f0E+WLmtPFyR9/WtV3Y5aaejUkU60JpX4m5xNR2VaqOLTZAYjW8Wy0aXr3zYIhhQQIhAMfqR9oFdYw1J9SsNc+CrhugAvKTi0+BF6VoL6psWhvbAiEAxPPNTmrkmrXwdm/pQQu3UOQmc2vCZ5tiKpW10CgJi8kCIFGkL6utxw93Ncj4exE/gPLvKcT+1Emnoox+O9kRXss5AiAMtYLJDaLEzPrAWcZeeSgSIzbL+ecokmFKSDDcRske6QIgSMkHedwND1olF8vlKsJUGK3BcdtM8w4Xq7BpSBwsloE=\n  publicKey: MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAJnNwrj4hi/y3CCJu868ghCG5dUj8wZK++RNlTLcXoMmdZWEQ/u02RgD5LyLAXGjLOjbMtC+/J9qofpSGTKSx/MCAwEAAQ==\n  # 请求解密私钥 非对称算法的公私钥 如：SM2，RSA 使用者请自行更换\n  # 对应前端加密公钥 MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAKoR8mX0rGKLqzcWmOzbfj64K8ZIgOdHnzkXSOVOZbFu/TJhZ7rFAN+eaGkl3C4buccQd/EjEsj9ir7ijT7h96MCAwEAAQ==\n  privateKey: MIIBVAIBADANBgkqhkiG9w0BAQEFAASCAT4wggE6AgEAAkEAqhHyZfSsYourNxaY7Nt+PrgrxkiA50efORdI5U5lsW79MmFnusUA355oaSXcLhu5xxB38SMSyP2KvuKNPuH3owIDAQABAkAfoiLyL+Z4lf4Myxk6xUDgLaWGximj20CUf+5BKKnlrK+Ed8gAkM0HqoTt2UZwA5E2MzS4EI2gjfQhz5X28uqxAiEA3wNFxfrCZlSZHb0gn2zDpWowcSxQAgiCstxGUoOqlW8CIQDDOerGKH5OmCJ4Z21v+F25WaHYPxCFMvwxpcw99EcvDQIgIdhDTIqD2jfYjPTY8Jj3EDGPbH2HHuffvflECt3Ek60CIQCFRlCkHpi7hthhYhovyloRYsM+IS9h/0BzlEAuO0ktMQIgSPT3aFAgJYwKpqRYKlLDVcflZFCKY7u3UP8iWi1Qw0Y=\n\n# 防止XSS攻击\nxss:\n  enabled: true\n  excludeUrls:\n    - /system/notice\n    - /workflow/model/save\n    - /workflow/model/editModelXml\n\n# 接口文档配置\nspringdoc:\n  api-docs:\n    # 是否开启接口文档\n    enabled: true\n#  swagger-ui:\n#    # 持久化认证数据\n#    persistAuthorization: true\n  info:\n    # 标题\n    title: \'标题：RuoYi-Cloud-Plus微服务权限管理系统_接口文档\'\n    # 描述\n    description: \'描述：微服务权限管理系统, 具体包括XXX,XXX模块...\'\n    # 版本\n    version: \'版本号：系统版本...\'\n    # 作者信息\n    contact:\n      name: Lion Li\n      email: crazylionli@163.com\n      url: https://gitee.com/dromara/RuoYi-Cloud-Plus\n  components:\n    # 鉴权方式配置\n    security-schemes:\n      apiKey:\n        type: APIKEY\n        in: HEADER\n        name: ${sa-token.token-name}\n\n# seata配置\nseata:\n  # 是否启用\n  enabled: true\n  # Seata 应用编号，默认为应用名\n  application-id: ${spring.application.name}\n  # Seata 事务组编号，用于 TC 集群名\n  tx-service-group: ${spring.application.name}-group\n\n# 多租户配置\ntenant:\n  # 是否开启\n  enable: true\n  # 排除表\n  excludes:\n    - sys_menu\n    - sys_tenant\n    - sys_tenant_package\n    - sys_role_dept\n    - sys_role_menu\n    - sys_user_post\n    - sys_user_role\n    - sys_client\n    - sys_oss_config\n','437f527829ac4bf101d20d7cb434dec5','2024-11-02 16:21:01','2024-11-02 08:21:01','nacos','192.168.2.101','U','dev',''),
(2,21,'datasource.yml','DEFAULT_GROUP','','datasource:\n  system-master:\n    # jdbc 所有参数配置参考 https://lionli.blog.csdn.net/article/details/122018562\n    # rewriteBatchedStatements=true 批处理优化 大幅提升批量插入更新删除性能\n    url: jdbc:mysql://localhost:3306/ry_cloud?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8&rewriteBatchedStatements=true&allowPublicKeyRetrieval=true\n    username: root\n    password: admin\n  gen:\n    url: jdbc:mysql://localhost:3306/ry_cloud?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8&rewriteBatchedStatements=true&allowPublicKeyRetrieval=true\n    username: root\n    password: admin\n  job:\n    url: jdbc:mysql://localhost:3306/ry_job?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8&rewriteBatchedStatements=true&allowPublicKeyRetrieval=true\n    username: root\n    password: admin\n  workflow:\n    url: jdbc:mysql://localhost:3306/ry_workflow?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8&rewriteBatchedStatements=true&allowPublicKeyRetrieval=true&nullCatalogMeansCurrent=true\n    username: root\n    password: admin\n#  system-oracle:\n#    url: jdbc:oracle:thin:@//localhost:1521/XE\n#    username: ROOT\n#    password: password\n#  system-postgres:\n#    url: jdbc:postgresql://localhost:5432/postgres?useUnicode=true&characterEncoding=utf8&useSSL=true&autoReconnect=true&reWriteBatchedInserts=true\n#    username: root\n#    password: password\n\nspring:\n  datasource:\n    type: com.zaxxer.hikari.HikariDataSource\n    # 动态数据源文档 https://www.kancloud.cn/tracy5546/dynamic-datasource/content\n    dynamic:\n      # 性能分析插件(有性能损耗 不建议生产环境使用)\n      p6spy: true\n      # 开启seata代理，开启后默认每个数据源都代理，如果某个不需要代理可单独关闭\n      seata: ${seata.enabled}\n      # 严格模式 匹配不到数据源则报错\n      strict: true\n      hikari:\n        # 最大连接池数量\n        maxPoolSize: 20\n        # 最小空闲线程数量\n        minIdle: 10\n        # 配置获取连接等待超时的时间\n        connectionTimeout: 30000\n        # 校验超时时间\n        validationTimeout: 5000\n        # 空闲连接存活最大时间，默认10分钟\n        idleTimeout: 600000\n        # 此属性控制池中连接的最长生命周期，值0表示无限生命周期，默认30分钟\n        maxLifetime: 1800000\n        # 多久检查一次连接的活性\n        keepaliveTime: 30000\n','2195c9792f517c06afc496823256ec77','2024-11-02 19:31:25','2024-11-02 11:31:26','nacos','0:0:0:0:0:0:0:1','U','dev',''),
(101,22,'application-common.yml','DEFAULT_GROUP','','# 将项目路径：config/下对应文件中内容复制到此处','2944a25cb97926efcaa43b3ad7a64cf0','2024-11-02 21:00:37','2024-11-02 13:00:37','nacos','192.168.2.101','D','prod',''),
(102,23,'datasource.yml','DEFAULT_GROUP','','# 将项目路径：config/下对应文件中内容复制到此处','2944a25cb97926efcaa43b3ad7a64cf0','2024-11-02 21:00:37','2024-11-02 13:00:37','nacos','192.168.2.101','D','prod',''),
(103,24,'ruoyi-gateway.yml','DEFAULT_GROUP','','# 将项目路径：config/下对应文件中内容复制到此处','2944a25cb97926efcaa43b3ad7a64cf0','2024-11-02 21:00:37','2024-11-02 13:00:37','nacos','192.168.2.101','D','prod',''),
(104,25,'ruoyi-auth.yml','DEFAULT_GROUP','','# 将项目路径：config/下对应文件中内容复制到此处','2944a25cb97926efcaa43b3ad7a64cf0','2024-11-02 21:00:37','2024-11-02 13:00:37','nacos','192.168.2.101','D','prod',''),
(105,26,'ruoyi-monitor.yml','DEFAULT_GROUP','','# 将项目路径：config/下对应文件中内容复制到此处','2944a25cb97926efcaa43b3ad7a64cf0','2024-11-02 21:00:37','2024-11-02 13:00:37','nacos','192.168.2.101','D','prod',''),
(106,27,'ruoyi-system.yml','DEFAULT_GROUP','','# 将项目路径：config/下对应文件中内容复制到此处','2944a25cb97926efcaa43b3ad7a64cf0','2024-11-02 21:00:37','2024-11-02 13:00:37','nacos','192.168.2.101','D','prod',''),
(107,28,'ruoyi-gen.yml','DEFAULT_GROUP','','# 将项目路径：config/下对应文件中内容复制到此处','2944a25cb97926efcaa43b3ad7a64cf0','2024-11-02 21:00:37','2024-11-02 13:00:37','nacos','192.168.2.101','D','prod',''),
(108,29,'ruoyi-job.yml','DEFAULT_GROUP','','# 将项目路径：config/下对应文件中内容复制到此处','2944a25cb97926efcaa43b3ad7a64cf0','2024-11-02 21:00:37','2024-11-02 13:00:37','nacos','192.168.2.101','D','prod',''),
(109,30,'ruoyi-resource.yml','DEFAULT_GROUP','','# 将项目路径：config/下对应文件中内容复制到此处','2944a25cb97926efcaa43b3ad7a64cf0','2024-11-02 21:00:37','2024-11-02 13:00:37','nacos','192.168.2.101','D','prod',''),
(110,31,'ruoyi-workflow.yml','DEFAULT_GROUP','','# 将项目路径：config/下对应文件中内容复制到此处','2944a25cb97926efcaa43b3ad7a64cf0','2024-11-02 21:00:37','2024-11-02 13:00:37','nacos','192.168.2.101','D','prod',''),
(111,32,'sentinel-ruoyi-gateway.json','DEFAULT_GROUP','','# 将项目路径：config/下对应文件中内容复制到此处','2944a25cb97926efcaa43b3ad7a64cf0','2024-11-02 21:00:37','2024-11-02 13:00:37','nacos','192.168.2.101','D','prod',''),
(112,33,'seata-server.properties','DEFAULT_GROUP','','# 将项目路径：config/下对应文件中内容复制到此处','2944a25cb97926efcaa43b3ad7a64cf0','2024-11-02 21:00:37','2024-11-02 13:00:37','nacos','192.168.2.101','D','prod',''),
(113,34,'ruoyi-sentinel-dashboard.yml','DEFAULT_GROUP','','# 将项目路径：config/下对应文件中内容复制到此处','2944a25cb97926efcaa43b3ad7a64cf0','2024-11-02 21:00:37','2024-11-02 13:00:37','nacos','192.168.2.101','D','prod',''),
(114,35,'ruoyi-snailjob-server.yml','DEFAULT_GROUP','','# 将项目路径：config/下对应文件中内容复制到此处','2944a25cb97926efcaa43b3ad7a64cf0','2024-11-02 21:00:37','2024-11-02 13:00:37','nacos','192.168.2.101','D','prod',''),
(0,36,'application-common.yml','DEFAULT_GROUP','','server:\n  # undertow 配置\n  undertow:\n    # HTTP post内容的最大大小。当值为-1时，默认值为大小是无限的\n    max-http-post-size: -1\n    # 以下的配置会影响buffer,这些buffer会用于服务器连接的IO操作,有点类似netty的池化内存管理\n    # 每块buffer的空间大小,越小的空间被利用越充分\n    buffer-size: 512\n    # 是否分配的直接内存\n    direct-buffers: true\n    threads:\n      # 设置IO线程数, 它主要执行非阻塞的任务,它们会负责多个连接, 默认设置每个CPU核心一个线程\n      io: 8\n      # 阻塞任务线程池, 当执行类似servlet请求阻塞操作, undertow会从这个线程池中取得线程,它的值设置取决于系统的负载\n      worker: 256\n\ndubbo:\n  application:\n    # 关闭qos端口避免单机多生产者端口冲突 如需使用自行开启\n    qos-enable: false\n  protocol:\n    # 如需使用 Triple 3.0 新协议 可查看官方文档\n    # 使用 dubbo 协议通信\n    name: dubbo\n    # dubbo 协议端口(-1表示自增端口,从20880开始)\n    port: -1\n    # 指定dubbo协议注册ip\n    # host: 192.168.0.100\n  # 消费者相关配置\n  consumer:\n    # 超时时间\n    timeout: 3000\n  # 自定义配置\n  custom:\n    # 全局请求log\n    request-log: true\n    # info 基础信息 param 参数信息 full 全部\n    log-level: info\n\nspring:\n  threads:\n    # 开启虚拟线程 仅jdk21可用\n    virtual:\n      enabled: false\n  # 资源信息\n  messages:\n    # 国际化资源文件路径\n    basename: i18n/messages\n  servlet:\n    multipart:\n      # 整个请求大小限制\n      max-request-size: 20MB\n      # 上传单个文件大小限制\n      max-file-size: 10MB\n  mvc:\n    # 设置静态资源路径 防止所有请求都去查静态资源\n    static-path-pattern: /static/**\n    format:\n      date-time: yyyy-MM-dd HH:mm:ss\n  #jackson配置\n  jackson:\n    # 日期格式化\n    date-format: yyyy-MM-dd HH:mm:ss\n    serialization:\n      # 格式化输出\n      INDENT_OUTPUT: false\n      # 忽略无法转换的对象\n      fail_on_empty_beans: false\n    deserialization:\n      # 允许对象忽略json中不存在的属性\n      fail_on_unknown_properties: false\n  cloud:\n    nacos:\n      discovery:\n        metadata:\n          # admin 监控账号密码\n          username: ruoyi\n          userpassword: 123456\n    # sentinel 配置\n    sentinel:\n      # sentinel 开关\n      enabled: true\n      transport:\n        # dashboard控制台服务名 用于服务发现\n        # 如无此配置将默认使用下方 dashboard 配置直接注册\n        server-name: ruoyi-sentinel-dashboard\n        # 客户端指定注册的ip 用于多网卡ip不稳点使用\n        # client-ip:\n        # 控制台地址 从1.3.0开始使用 server-name 注册\n        # dashboard: localhost:8718\n\n    bus:\n      id: ${spring.application.name}\n      base-packages: org.dromara.**.event\n  # 消息总线 也可以使用 kafka 参考 spring-cloud-bus 用法\n  rabbitmq:\n    host: localhost\n    port: 5672\n    username: ruoyi\n    password: ruoyi123\n\n  # redis通用配置 子服务可以自行配置进行覆盖\n  data:\n    redis:\n      host: 127.0.0.1\n      port: 6379\n      # redis 密码必须配置\n      password: admin\n      database: 0\n      # 需要使用数字\n      timeout: 10000\n      ssl.enabled: false\n\n# redisson 配置\nredisson:\n  # redis key前缀\n  keyPrefix:\n  # 线程池数量\n  threads: 4\n  # Netty线程池数量\n  nettyThreads: 8\n  # 单节点配置\n  singleServerConfig:\n    # 客户端名称\n    clientName: ${spring.application.name}\n    # 最小空闲连接数\n    connectionMinimumIdleSize: 8\n    # 连接池大小\n    connectionPoolSize: 32\n    # 连接空闲超时，单位：毫秒\n    idleConnectionTimeout: 10000\n    # 命令等待超时，单位：毫秒\n    timeout: 3000\n    # 发布和订阅连接池大小\n    subscriptionConnectionPoolSize: 50\n\n# 分布式锁 lock4j 全局配置\nlock4j:\n  # 获取分布式锁超时时间，默认为 3000 毫秒\n  acquire-timeout: 3000\n  # 分布式锁的超时时间，默认为 30 秒\n  expire: 30000\n\n# 暴露监控端点\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: \'*\'\n  endpoint:\n    health:\n      show-details: ALWAYS\n    logfile:\n      external-file: ./logs/${spring.application.name}/console.log\n\n# 日志配置\n# logging:\n#   level:\n#     org.springframework: warn\n#     org.apache.dubbo: warn\n#     com.alibaba.nacos: warn\n#     com.alibaba.cloud.sentinel: warn\n#     org.mybatis.spring.mapper: error\n#     org.apache.dubbo.config: error\n#     # 临时处理 spring 调整日志级别导致启动警告问题 不影响使用等待 alibaba 适配\n#     org.springframework.context.support.PostProcessorRegistrationDelegate: error\n#   config: classpath:logback-plus.xml\n\nlogging:\n  level:\n    root: info\n    org.dromara: trace\n\n\n# Sa-Token配置\nsa-token:\n  # token名称 (同时也是cookie名称)\n  token-name: Authorization\n  # 开启内网服务调用鉴权(不允许越过gateway访问内网服务 保障服务安全)\n  check-same-token: true\n  # 是否允许同一账号并发登录 (为true时允许一起登录, 为false时新登录挤掉旧登录)\n  is-concurrent: true\n  # 在多人登录同一账号时，是否共用一个token (为true时所有登录共用一个token, 为false时每次登录新建一个token)\n  is-share: false\n  # jwt秘钥\n  jwt-secret-key: abcdefghijklmnopqrstuvwxyz\n\n# MyBatisPlus配置\n# https://baomidou.com/config/\nmybatis-plus:\n  # 多包名使用 例如 org.dromara.**.mapper,org.xxx.**.mapper\n  mapperPackage: org.dromara.**.mapper\n  # 对应的 XML 文件位置\n  mapperLocations: classpath*:mapper/**/*Mapper.xml\n  # 实体扫描，多个package用逗号或者分号分隔\n  typeAliasesPackage: org.dromara.**.domain\n  global-config:\n    dbConfig:\n      # 主键类型\n      # AUTO 自增 NONE 空 INPUT 用户输入 ASSIGN_ID 雪花 ASSIGN_UUID 唯一 UUID\n      # 如需改为自增 需要将数据库表全部设置为自增\n      idType: ASSIGN_ID\n\n# 数据加密\nmybatis-encryptor:\n  # 是否开启加密\n  enable: false\n  # 默认加密算法\n  algorithm: BASE64\n  # 编码方式 BASE64/HEX。默认BASE64\n  encode: BASE64\n  # 安全秘钥 对称算法的秘钥 如：AES，SM4\n  password:\n  # 公私钥 非对称算法的公私钥 如：SM2，RSA\n  publicKey:\n  privateKey:\n\n# api接口加密\napi-decrypt:\n  # 是否开启全局接口加密\n  enabled: true\n  # AES 加密头标识\n  headerFlag: encrypt-key\n  # 响应加密公钥 非对称算法的公私钥 如：SM2，RSA 使用者请自行更换\n  # 对应前端解密私钥 MIIBVAIBADANBgkqhkiG9w0BAQEFAASCAT4wggE6AgEAAkEAmc3CuPiGL/LcIIm7zryCEIbl1SPzBkr75E2VMtxegyZ1lYRD+7TZGAPkvIsBcaMs6Nsy0L78n2qh+lIZMpLH8wIDAQABAkEAk82Mhz0tlv6IVCyIcw/s3f0E+WLmtPFyR9/WtV3Y5aaejUkU60JpX4m5xNR2VaqOLTZAYjW8Wy0aXr3zYIhhQQIhAMfqR9oFdYw1J9SsNc+CrhugAvKTi0+BF6VoL6psWhvbAiEAxPPNTmrkmrXwdm/pQQu3UOQmc2vCZ5tiKpW10CgJi8kCIFGkL6utxw93Ncj4exE/gPLvKcT+1Emnoox+O9kRXss5AiAMtYLJDaLEzPrAWcZeeSgSIzbL+ecokmFKSDDcRske6QIgSMkHedwND1olF8vlKsJUGK3BcdtM8w4Xq7BpSBwsloE=\n  publicKey: MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAJnNwrj4hi/y3CCJu868ghCG5dUj8wZK++RNlTLcXoMmdZWEQ/u02RgD5LyLAXGjLOjbMtC+/J9qofpSGTKSx/MCAwEAAQ==\n  # 请求解密私钥 非对称算法的公私钥 如：SM2，RSA 使用者请自行更换\n  # 对应前端加密公钥 MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAKoR8mX0rGKLqzcWmOzbfj64K8ZIgOdHnzkXSOVOZbFu/TJhZ7rFAN+eaGkl3C4buccQd/EjEsj9ir7ijT7h96MCAwEAAQ==\n  privateKey: MIIBVAIBADANBgkqhkiG9w0BAQEFAASCAT4wggE6AgEAAkEAqhHyZfSsYourNxaY7Nt+PrgrxkiA50efORdI5U5lsW79MmFnusUA355oaSXcLhu5xxB38SMSyP2KvuKNPuH3owIDAQABAkAfoiLyL+Z4lf4Myxk6xUDgLaWGximj20CUf+5BKKnlrK+Ed8gAkM0HqoTt2UZwA5E2MzS4EI2gjfQhz5X28uqxAiEA3wNFxfrCZlSZHb0gn2zDpWowcSxQAgiCstxGUoOqlW8CIQDDOerGKH5OmCJ4Z21v+F25WaHYPxCFMvwxpcw99EcvDQIgIdhDTIqD2jfYjPTY8Jj3EDGPbH2HHuffvflECt3Ek60CIQCFRlCkHpi7hthhYhovyloRYsM+IS9h/0BzlEAuO0ktMQIgSPT3aFAgJYwKpqRYKlLDVcflZFCKY7u3UP8iWi1Qw0Y=\n\n# 防止XSS攻击\nxss:\n  enabled: true\n  excludeUrls:\n    - /system/notice\n    - /workflow/model/save\n    - /workflow/model/editModelXml\n\n# 接口文档配置\nspringdoc:\n  api-docs:\n    # 是否开启接口文档\n    enabled: true\n#  swagger-ui:\n#    # 持久化认证数据\n#    persistAuthorization: true\n  info:\n    # 标题\n    title: \'标题：RuoYi-Cloud-Plus微服务权限管理系统_接口文档\'\n    # 描述\n    description: \'描述：微服务权限管理系统, 具体包括XXX,XXX模块...\'\n    # 版本\n    version: \'版本号：系统版本...\'\n    # 作者信息\n    contact:\n      name: Lion Li\n      email: crazylionli@163.com\n      url: https://gitee.com/dromara/RuoYi-Cloud-Plus\n  components:\n    # 鉴权方式配置\n    security-schemes:\n      apiKey:\n        type: APIKEY\n        in: HEADER\n        name: ${sa-token.token-name}\n\n# seata配置\nseata:\n  # 是否启用\n  enabled: false\n  # Seata 应用编号，默认为应用名\n  application-id: ${spring.application.name}\n  # Seata 事务组编号，用于 TC 集群名\n  tx-service-group: ${spring.application.name}-group\n\n# 多租户配置\ntenant:\n  # 是否开启\n  enable: false\n  # 排除表\n  excludes:\n    - sys_menu\n    - sys_tenant\n    - sys_tenant_package\n    - sys_role_dept\n    - sys_role_menu\n    - sys_user_post\n    - sys_user_role\n    - sys_client\n    - sys_oss_config\n','886c20fafba53daf81336c1afecb8c0d','2024-11-02 21:01:28','2024-11-02 13:01:28',NULL,'192.168.2.101','I','prod',''),
(0,37,'datasource.yml','DEFAULT_GROUP','','datasource:\n  system-master:\n    # jdbc 所有参数配置参考 https://lionli.blog.csdn.net/article/details/122018562\n    # rewriteBatchedStatements=true 批处理优化 大幅提升批量插入更新删除性能\n    url: jdbc:mysql://localhost:3306/ry_cloud?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8&rewriteBatchedStatements=true&allowPublicKeyRetrieval=true\n    username: root\n    password: admin\n  gen:\n    url: jdbc:mysql://localhost:3306/ry_cloud?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8&rewriteBatchedStatements=true&allowPublicKeyRetrieval=true\n    username: root\n    password: admin\n  job:\n    url: jdbc:mysql://localhost:3306/ry_job?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8&rewriteBatchedStatements=true&allowPublicKeyRetrieval=true\n    username: root\n    password: admin\n  workflow:\n    url: jdbc:mysql://localhost:3306/ry_workflow?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8&rewriteBatchedStatements=true&allowPublicKeyRetrieval=true&nullCatalogMeansCurrent=true\n    username: root\n    password: admin\n#  system-oracle:\n#    url: jdbc:oracle:thin:@//localhost:1521/XE\n#    username: ROOT\n#    password: password\n#  system-postgres:\n#    url: jdbc:postgresql://localhost:5432/postgres?useUnicode=true&characterEncoding=utf8&useSSL=true&autoReconnect=true&reWriteBatchedInserts=true\n#    username: root\n#    password: password\n\nspring:\n  datasource:\n    type: com.zaxxer.hikari.HikariDataSource\n    # 动态数据源文档 https://www.kancloud.cn/tracy5546/dynamic-datasource/content\n    dynamic:\n      # 性能分析插件(有性能损耗 不建议生产环境使用)\n      p6spy: false\n      # 开启seata代理，开启后默认每个数据源都代理，如果某个不需要代理可单独关闭\n      seata: ${seata.enabled}\n      # 严格模式 匹配不到数据源则报错\n      strict: true\n      hikari:\n        # 最大连接池数量\n        maxPoolSize: 20\n        # 最小空闲线程数量\n        minIdle: 10\n        # 配置获取连接等待超时的时间\n        connectionTimeout: 30000\n        # 校验超时时间\n        validationTimeout: 5000\n        # 空闲连接存活最大时间，默认10分钟\n        idleTimeout: 600000\n        # 此属性控制池中连接的最长生命周期，值0表示无限生命周期，默认30分钟\n        maxLifetime: 1800000\n        # 多久检查一次连接的活性\n        keepaliveTime: 30000\n','a9c5f0b0dcebb5c1d3bcadaffbd9fb69','2024-11-02 21:01:28','2024-11-02 13:01:28',NULL,'192.168.2.101','I','prod',''),
(0,38,'aidaoteng-gateway.yml','DEFAULT_GROUP','','# 安全配置\nsecurity:\n  # 不校验白名单\n  ignore:\n    whites:\n      - /auth/code\n      - /auth/logout\n      - /auth/login\n      - /auth/binding/*\n      - /auth/social/callback\n      - /auth/register\n      - /auth/tenant/list\n      - /resource/sms/code\n      - /resource/sse/close\n      - /*/v3/api-docs\n      - /*/error\n      - /csrf\n\nspring:\n  cloud:\n    # 网关配置\n    gateway:\n      # 打印请求日志(自定义)\n      requestLog: true\n      discovery:\n        locator:\n          lowerCaseServiceId: true\n          enabled: true\n      routes:\n        # 认证中心\n        - id: ruoyi-auth\n          uri: lb://ruoyi-auth\n          predicates:\n            - Path=/auth/**\n          filters:\n            - StripPrefix=1\n        # 代码生成\n        - id: ruoyi-gen\n          uri: lb://ruoyi-gen\n          predicates:\n            - Path=/tool/**\n          filters:\n            - StripPrefix=1\n        # 系统模块\n        - id: ruoyi-system\n          uri: lb://ruoyi-system\n          predicates:\n            - Path=/system/**,/monitor/**\n          filters:\n            - StripPrefix=1\n        # 资源服务\n        - id: ruoyi-resource\n          uri: lb://ruoyi-resource\n          predicates:\n            - Path=/resource/**\n          filters:\n            - StripPrefix=1\n        # workflow服务\n        - id: ruoyi-workflow\n          uri: lb://ruoyi-workflow\n          predicates:\n            - Path=/workflow/**\n        # 演示服务\n        - id: ruoyi-demo\n          uri: lb://ruoyi-demo\n          predicates:\n            - Path=/demo/**\n          filters:\n            - StripPrefix=1\n        # MQ演示服务\n        - id: ruoyi-test-mq\n          uri: lb://ruoyi-test-mq\n          predicates:\n            - Path=/test-mq/**\n          filters:\n            - StripPrefix=1\n\n    # sentinel 配置\n    sentinel:\n      filter:\n        enabled: false\n      # nacos配置持久化\n      datasource:\n        ds1:\n          nacos:\n            server-addr: ${spring.cloud.nacos.server-addr}\n            dataId: sentinel-${spring.application.name}.json\n            groupId: ${spring.cloud.nacos.config.group}\n            username: ${spring.cloud.nacos.username}\n            password: ${spring.cloud.nacos.password}\n            namespace: ${spring.profiles.active}\n            data-type: json\n            rule-type: gw-flow\n','484e5b86b3086abeb5c992530bbd4beb','2024-11-02 21:01:28','2024-11-02 13:01:28',NULL,'192.168.2.101','I','prod',''),
(0,39,'aidaoteng-auth.yml','DEFAULT_GROUP','','# 安全配置\nsecurity:\n  # 验证码\n  captcha:\n    # 是否开启验证码\n    enabled: true\n    # 验证码类型 math 数组计算 char 字符验证\n    type: MATH\n    # line 线段干扰 circle 圆圈干扰 shear 扭曲干扰\n    category: CIRCLE\n    # 数字验证码位数\n    numberLength: 1\n    # 字符验证码长度\n    charLength: 4\n\n# 用户配置\nuser:\n  password:\n    # 密码最大错误次数\n    maxRetryCount: 5\n    # 密码锁定时间（默认10分钟）\n    lockTime: 10\n\n# 三方授权\njustauth:\n  # 前端外网访问地址\n  address: http://localhost:80\n  type:\n    maxkey:\n      # maxkey 服务器地址\n      # 注意 如下均配置均不需要修改 maxkey 已经内置好了数据\n      server-url: http://sso.maxkey.top\n      client-id: 876892492581044224\n      client-secret: x1Y5MTMwNzIwMjMxNTM4NDc3Mzche8\n      redirect-uri: ${justauth.address}/social-callback?source=maxkey\n    topiam:\n      # topiam 服务器地址\n      server-url: http://127.0.0.1:1989/api/v1/authorize/y0q************spq***********8ol\n      client-id: 449c4*********937************759\n      client-secret: ac7***********1e0************28d\n      redirect-uri: ${justauth.address}/social-callback?source=topiam\n      scopes: [ openid, email, phone, profile ]\n    qq:\n      client-id: 10**********6\n      client-secret: 1f7d08**********5b7**********29e\n      redirect-uri: ${justauth.address}/social-callback?source=qq\n      union-id: false\n    weibo:\n      client-id: 10**********6\n      client-secret: 1f7d08**********5b7**********29e\n      redirect-uri: ${justauth.address}/social-callback?source=weibo\n    gitee:\n      client-id: 91436b7940090d09c72c7daf85b959cfd5f215d67eea73acbf61b6b590751a98\n      client-secret: 02c6fcfd70342980cd8dd2f2c06c1a350645d76c754d7a264c4e125f9ba915ac\n      redirect-uri: ${justauth.address}/social-callback?source=gitee\n    dingtalk:\n      client-id: 10**********6\n      client-secret: 1f7d08**********5b7**********29e\n      redirect-uri: ${justauth.address}/social-callback?source=dingtalk\n    baidu:\n      client-id: 10**********6\n      client-secret: 1f7d08**********5b7**********29e\n      redirect-uri: ${justauth.address}/social-callback?source=baidu\n    csdn:\n      client-id: 10**********6\n      client-secret: 1f7d08**********5b7**********29e\n      redirect-uri: ${justauth.address}/social-callback?source=csdn\n    coding:\n      client-id: 10**********6\n      client-secret: 1f7d08**********5b7**********29e\n      redirect-uri: ${justauth.address}/social-callback?source=coding\n      coding-group-name: xx\n    oschina:\n      client-id: 10**********6\n      client-secret: 1f7d08**********5b7**********29e\n      redirect-uri: ${justauth.address}/social-callback?source=oschina\n    alipay_wallet:\n      client-id: 10**********6\n      client-secret: 1f7d08**********5b7**********29e\n      redirect-uri: ${justauth.address}/social-callback?source=alipay_wallet\n      alipay-public-key: MIIB**************DAQAB\n    wechat_open:\n      client-id: 10**********6\n      client-secret: 1f7d08**********5b7**********29e\n      redirect-uri: ${justauth.address}/social-callback?source=wechat_open\n    wechat_mp:\n      client-id: 10**********6\n      client-secret: 1f7d08**********5b7**********29e\n      redirect-uri: ${justauth.address}/social-callback?source=wechat_mp\n    wechat_enterprise:\n      client-id: 10**********6\n      client-secret: 1f7d08**********5b7**********29e\n      redirect-uri: ${justauth.address}/social-callback?source=wechat_enterprise\n      agent-id: 1000002\n    gitlab:\n      client-id: 10**********6\n      client-secret: 1f7d08**********5b7**********29e\n      redirect-uri: ${justauth.address}/social-callback?source=gitlab\n','362c28d8864626b864d682b5f1c4a73a','2024-11-02 21:01:28','2024-11-02 13:01:28',NULL,'192.168.2.101','I','prod',''),
(0,40,'aidaoteng-monitor.yml','DEFAULT_GROUP','','# 监控中心配置\nspring:\n  security:\n    user:\n      name: ruoyi\n      password: 123456\n  boot:\n    admin:\n      ui:\n        title: RuoYi-Cloud-Plus服务监控中心\n      discovery:\n        # seata 不具有健康检查的能力 防止报错排除掉\n        ignored-services: ruoyi-seata-server\n','ba7fa6a6bfde3dcb3b566fd8864834af','2024-11-02 21:01:28','2024-11-02 13:01:28',NULL,'192.168.2.101','I','prod',''),
(0,41,'aidaoteng-system.yml','DEFAULT_GROUP','','spring:\n  datasource:\n    dynamic:\n      # 设置默认的数据源或者数据源组,默认值即为 master\n      primary: master\n      datasource:\n        # 主库数据源\n        master:\n          type: ${spring.datasource.type}\n          driver-class-name: com.mysql.cj.jdbc.Driver\n          url: ${datasource.system-master.url}\n          username: ${datasource.system-master.username}\n          password: ${datasource.system-master.password}\n#        oracle:\n#          type: ${spring.datasource.type}\n#          driverClassName: oracle.jdbc.OracleDriver\n#          url: ${datasource.system-oracle.url}\n#          username: ${datasource.system-oracle.username}\n#          password: ${datasource.system-oracle.password}\n#        postgres:\n#          type: ${spring.datasource.type}\n#          driverClassName: org.postgresql.Driver\n#          url: ${datasource.system-postgres.url}\n#          username: ${datasource.system-postgres.username}\n#          password: ${datasource.system-postgres.password}\n','f59259409ff41d30e5276bf4afbcaa3d','2024-11-02 21:01:28','2024-11-02 13:01:28',NULL,'192.168.2.101','I','prod',''),
(0,42,'aidaoteng-gen.yml','DEFAULT_GROUP','','spring:\n  datasource:\n    dynamic:\n      # 设置默认的数据源或者数据源组,默认值即为 master\n      primary: master\n      seata: false\n      datasource:\n        # 主库数据源\n        master:\n          type: ${spring.datasource.type}\n          driver-class-name: com.mysql.cj.jdbc.Driver\n          url: ${datasource.system-master.url}\n          username: ${datasource.system-master.username}\n          password: ${datasource.system-master.password}\n#        oracle:\n#          type: ${spring.datasource.type}\n#          driverClassName: oracle.jdbc.OracleDriver\n#          url: ${datasource.system-oracle.url}\n#          username: ${datasource.system-oracle.username}\n#          password: ${datasource.system-oracle.password}\n#        postgres:\n#          type: ${spring.datasource.type}\n#          driverClassName: org.postgresql.Driver\n#          url: ${datasource.system-postgres.url}\n#          username: ${datasource.system-postgres.username}\n#          password: ${datasource.system-postgres.password}\n\n# 代码生成\ngen:\n  # 作者\n  author: LionLi\n  # 默认生成包路径 system 需改成自己的模块名称 如 system monitor tool\n  packageName: org.dromara.system\n  # 自动去除表前缀，默认是false\n  autoRemovePre: false\n  # 表前缀（生成类名不会包含表前缀，多个用逗号分隔）\n  tablePrefix: sys_\n','2d00f0362d71287c0033b665a48337af','2024-11-02 21:01:28','2024-11-02 13:01:28',NULL,'192.168.2.101','I','prod',''),
(0,43,'aidaoteng-job.yml','DEFAULT_GROUP','','spring:\n  datasource:\n    dynamic:\n      # 设置默认的数据源或者数据源组,默认值即为 master\n      primary: master\n      seata: false\n      datasource:\n        # 主库数据源\n        master:\n          type: ${spring.datasource.type}\n          driver-class-name: com.mysql.cj.jdbc.Driver\n          url: ${datasource.job.url}\n          username: ${datasource.job.username}\n          password: ${datasource.job.password}\n\nsnail-job:\n  enabled: true\n  # 需要在 SnailJob 后台组管理创建对应名称的组,然后创建任务的时候选择对应的组,才能正确分派任务\n  group: \"ruoyi_group\"\n  #  SnailJob 接入验证令牌\n  token: \"SJ_cKqBTPzCsWA3VyuCfFoccmuIEGXjr5KT\"\n  server:\n    # 从 nacos 获取服务\n    server-name: ruoyi-snailjob-server\n    # 服务名优先 ip垫底\n    host: 127.0.0.1\n    port: 17888\n  # 详见 script/sql/ry_job.sql `sj_namespace` 表\n  namespace: ${spring.profiles.active}\n  # 随主应用端口飘逸\n  port: 2${server.port}\n  # 客户端ip指定\n  host:\n','08f5e690ce18e8497d69f7a1018efea3','2024-11-02 21:01:28','2024-11-02 13:01:28',NULL,'192.168.2.101','I','prod',''),
(0,44,'aidaoteng-resource.yml','DEFAULT_GROUP','','spring:\n  datasource:\n    dynamic:\n      # 设置默认的数据源或者数据源组,默认值即为 master\n      primary: master\n      datasource:\n        # 主库数据源\n        master:\n          type: ${spring.datasource.type}\n          driver-class-name: com.mysql.cj.jdbc.Driver\n          url: ${datasource.system-master.url}\n          username: ${datasource.system-master.username}\n          password: ${datasource.system-master.password}\n#        oracle:\n#          type: ${spring.datasource.type}\n#          driverClassName: oracle.jdbc.OracleDriver\n#          url: ${datasource.system-oracle.url}\n#          username: ${datasource.system-oracle.username}\n#          password: ${datasource.system-oracle.password}\n#        postgres:\n#          type: ${spring.datasource.type}\n#          driverClassName: org.postgresql.Driver\n#          url: ${datasource.system-postgres.url}\n#          username: ${datasource.system-postgres.username}\n#          password: ${datasource.system-postgres.password}\n\n# 默认/推荐使用sse推送\nsse:\n  enabled: true\n  path: /sse\n\nwebsocket:\n  # 如果关闭 需要和前端开关一起关闭\n  enabled: false\n  # 路径\n  path: /websocket\n  # 设置访问源地址\n  allowedOrigins: \'*\'\n\nmail:\n  enabled: false\n  host: smtp.163.com\n  port: 465\n  # 是否需要用户名密码验证\n  auth: true\n  # 发送方，遵循RFC-822标准\n  from: xxx@163.com\n  # 用户名（注意：如果使用foxmail邮箱，此处user为qq号）\n  user: xxx@163.com\n  # 密码（注意，某些邮箱需要为SMTP服务单独设置密码，详情查看相关帮助）\n  pass: xxxxxxxxxx\n  # 使用 STARTTLS安全连接，STARTTLS是对纯文本通信协议的扩展。\n  starttlsEnable: true\n  # 使用SSL安全连接\n  sslEnable: true\n  # SMTP超时时长，单位毫秒，缺省值不超时\n  timeout: 0\n  # Socket连接超时值，单位毫秒，缺省值不超时\n  connectionTimeout: 0\n\n# sms 短信 支持 阿里云 腾讯云 云片 等等各式各样的短信服务商\n# https://sms4j.com/doc3/ 差异配置文档地址 支持单厂商多配置，可以配置多个同时使用\nsms:\n  # 配置源类型用于标定配置来源(interface,yaml)\n  config-type: yaml\n  # 用于标定yml中的配置是否开启短信拦截，接口配置不受此限制\n  restricted: true\n  # 短信拦截限制单手机号每分钟最大发送，只对开启了拦截的配置有效\n  minute-max: 1\n  # 短信拦截限制单手机号每日最大发送量，只对开启了拦截的配置有效\n  account-max: 30\n  # 以下配置来自于 org.dromara.sms4j.provider.config.BaseConfig类中\n  blends:\n    # 唯一ID 用于发送短信寻找具体配置 随便定义别用中文即可\n    # 可以同时存在两个相同厂商 例如: ali1 ali2 两个不同的阿里短信账号 也可用于区分租户\n    config1:\n      # 框架定义的厂商名称标识，标定此配置是哪个厂商，详细请看厂商标识介绍部分\n      supplier: alibaba\n      # 有些称为accessKey有些称之为apiKey，也有称为sdkKey或者appId。\n      access-key-id: 您的accessKey\n      # 称为accessSecret有些称之为apiSecret\n      access-key-secret: 您的accessKeySecret\n      signature: 您的短信签名\n      sdk-app-id: 您的sdkAppId\n    config2:\n      # 厂商标识，标定此配置是哪个厂商，详细请看厂商标识介绍部分\n      supplier: tencent\n      access-key-id: 您的accessKey\n      access-key-secret: 您的accessKeySecret\n      signature: 您的短信签名\n      sdk-app-id: 您的sdkAppId\n','efb16000eb230328fa2128ea56558fd2','2024-11-02 21:01:28','2024-11-02 13:01:28',NULL,'192.168.2.101','I','prod',''),
(0,45,'aidaoteng-workflow.yml','DEFAULT_GROUP','','spring:\n  datasource:\n    dynamic:\n      # 设置默认的数据源或者数据源组,默认值即为 master\n      primary: master\n      datasource:\n        # 主库数据源\n        master:\n          type: ${spring.datasource.type}\n          driver-class-name: com.mysql.cj.jdbc.Driver\n          url: ${datasource.workflow.url}\n          username: ${datasource.workflow.username}\n          password: ${datasource.workflow.password}\n#        oracle:\n#          type: ${spring.datasource.type}\n#          driverClassName: oracle.jdbc.OracleDriver\n#          url: ${datasource.system-oracle.url}\n#          username: ${datasource.system-oracle.username}\n#          password: ${datasource.system-oracle.password}\n#        postgres:\n#          type: ${spring.datasource.type}\n#          driverClassName: org.postgresql.Driver\n#          url: ${datasource.system-postgres.url}\n#          username: ${datasource.system-postgres.username}\n#          password: ${datasource.system-postgres.password}\n\n# flowable配置\nflowable:\n  # 开关 用于启动/停用工作流\n  enabled: true\n  process.enabled: ${flowable.enabled}\n  eventregistry.enabled: ${flowable.enabled}\n  # 关闭定时任务JOB\n  async-executor-activate: false\n  # 将databaseSchemaUpdate设置为true。当Flowable发现库与数据库表结构不一致时，会自动将数据库表结构升级至新版本。\n  database-schema-update: true\n  activity-font-name: 宋体\n  label-font-name: 宋体\n  annotation-font-name: 宋体\n  # 关闭各个模块生成表，目前只使用工作流基础表\n  idm:\n    enabled: false\n  cmmn:\n    enabled: false\n  dmn:\n    enabled: false\n  app:\n    enabled: false\n','95b566892b838da618fbfdaf1ecffd0a','2024-11-02 21:01:28','2024-11-02 13:01:28',NULL,'192.168.2.101','I','prod',''),
(0,46,'sentinel-aidaoteng-gateway.json','DEFAULT_GROUP','','[\n  {\n    \"resource\": \"ruoyi-auth\",\n    \"count\": 500,\n    \"grade\": 1,\n    \"limitApp\": \"default\",\n    \"strategy\": 0,\n    \"controlBehavior\": 0\n  },\n  {\n    \"resource\": \"ruoyi-system\",\n    \"count\": 1000,\n    \"grade\": 1,\n    \"limitApp\": \"default\",\n    \"strategy\": 0,\n    \"controlBehavior\": 0\n  },\n  {\n    \"resource\": \"ruoyi-resource\",\n    \"count\": 500,\n    \"grade\": 1,\n    \"limitApp\": \"default\",\n    \"strategy\": 0,\n    \"controlBehavior\": 0\n  }\n]\n','2efad3702e99adef46c2ee818b3925e5','2024-11-02 21:01:28','2024-11-02 13:01:28',NULL,'192.168.2.101','I','prod',''),
(0,47,'seata-server.properties','DEFAULT_GROUP','','service.vgroupMapping.ruoyi-auth-group=default\nservice.vgroupMapping.ruoyi-system-group=default\nservice.vgroupMapping.ruoyi-resource-group=default\nservice.vgroupMapping.ruoyi-workflow-group=default\n\nservice.enableDegrade=false\nservice.disableGlobalTransaction=false\n\n#Transaction storage configuration, only for the server. The file, DB, and redis configuration values are optional.\nstore.mode=db\nstore.lock.mode=db\nstore.session.mode=db\n#Used for password encryption\n#store.publicKey=\n\n#These configurations are required if the `store mode` is `db`. If `store.mode,store.lock.mode,store.session.mode` are not equal to `db`, you can remove the configuration block.\nstore.db.datasource=hikari\nstore.db.dbType=mysql\nstore.db.driverClassName=com.mysql.cj.jdbc.Driver\nstore.db.url=jdbc:mysql://127.0.0.1:3306/ry-seata?useUnicode=true&rewriteBatchedStatements=true&allowPublicKeyRetrieval=true\nstore.db.user=root\nstore.db.password=root\nstore.db.minConn=5\nstore.db.maxConn=30\nstore.db.globalTable=global_table\nstore.db.branchTable=branch_table\nstore.db.distributedLockTable=distributed_lock\nstore.db.queryLimit=100\nstore.db.lockTable=lock_table\nstore.db.maxWait=5000\n\n# redis æ¨¡å¼ store.mode=redis å¼å¯ (æ§å¶å°æ¥è¯¢åè½æé,ä¸å½±åå®éæ§è¡åè½)\n# store.redis.host=127.0.0.1\n# store.redis.port=6379\n# æå¤§è¿æ¥æ°\n# store.redis.maxConn=10\n# æå°è¿æ¥æ°\n# store.redis.minConn=1\n# store.redis.database=0\n# store.redis.password=\n# store.redis.queryLimit=100\n\n#Transaction rule configuration, only for the server\nserver.recovery.committingRetryPeriod=1000\nserver.recovery.asynCommittingRetryPeriod=1000\nserver.recovery.rollbackingRetryPeriod=1000\nserver.recovery.timeoutRetryPeriod=1000\nserver.maxCommitRetryTimeout=-1\nserver.maxRollbackRetryTimeout=-1\nserver.rollbackRetryTimeoutUnlockEnable=false\nserver.distributedLockExpireTime=10000\nserver.xaerNotaRetryTimeout=60000\nserver.session.branchAsyncQueueSize=5000\nserver.session.enableBranchAsyncRemove=false\n\n#Transaction rule configuration, only for the client\nclient.rm.asyncCommitBufferLimit=10000\nclient.rm.lock.retryInterval=10\nclient.rm.lock.retryTimes=30\nclient.rm.lock.retryPolicyBranchRollbackOnConflict=true\nclient.rm.reportRetryCount=5\nclient.rm.tableMetaCheckEnable=true\nclient.rm.tableMetaCheckerInterval=60000\nclient.rm.sqlParserType=druid\nclient.rm.reportSuccessEnable=false\nclient.rm.sagaBranchRegisterEnable=false\nclient.rm.sagaJsonParser=fastjson\nclient.rm.tccActionInterceptorOrder=-2147482648\nclient.tm.commitRetryCount=5\nclient.tm.rollbackRetryCount=5\nclient.tm.defaultGlobalTransactionTimeout=60000\nclient.tm.degradeCheck=false\nclient.tm.degradeCheckAllowTimes=10\nclient.tm.degradeCheckPeriod=2000\nclient.tm.interceptorOrder=-2147482648\nclient.undo.dataValidation=true\nclient.undo.logSerialization=jackson\nclient.undo.onlyCareUpdateColumns=true\nserver.undo.logSaveDays=7\nserver.undo.logDeletePeriod=86400000\nclient.undo.logTable=undo_log\nclient.undo.compress.enable=true\nclient.undo.compress.type=zip\nclient.undo.compress.threshold=64k\n\n#For TCC transaction mode\ntcc.fence.logTableName=tcc_fence_log\ntcc.fence.cleanPeriod=1h\n\n#Log rule configuration, for client and server\nlog.exceptionRate=100\n\n#Metrics configuration, only for the server\nmetrics.enabled=false\nmetrics.registryType=compact\nmetrics.exporterList=prometheus\nmetrics.exporterPrometheusPort=9898\n\n#For details about configuration items, see https://seata.io/zh-cn/docs/user/configurations.html\n#Transport configuration, for client and server\ntransport.type=TCP\ntransport.server=NIO\ntransport.heartbeat=true\ntransport.enableTmClientBatchSendRequest=false\ntransport.enableRmClientBatchSendRequest=true\ntransport.enableTcServerBatchSendResponse=false\ntransport.rpcRmRequestTimeout=30000\ntransport.rpcTmRequestTimeout=30000\ntransport.rpcTcRequestTimeout=30000\ntransport.threadFactory.bossThreadPrefix=NettyBoss\ntransport.threadFactory.workerThreadPrefix=NettyServerNIOWorker\ntransport.threadFactory.serverExecutorThreadPrefix=NettyServerBizHandler\ntransport.threadFactory.shareBossWorker=false\ntransport.threadFactory.clientSelectorThreadPrefix=NettyClientSelector\ntransport.threadFactory.clientSelectorThreadSize=1\ntransport.threadFactory.clientWorkerThreadPrefix=NettyClientWorkerThread\ntransport.threadFactory.bossThreadSize=1\ntransport.threadFactory.workerThreadSize=default\ntransport.shutdown.wait=3\ntransport.serialization=seata\ntransport.compressor=none\n','045a3fbb5c8da8d3cb555000a7095aa7','2024-11-02 21:01:28','2024-11-02 13:01:28',NULL,'192.168.2.101','I','prod',''),
(0,48,'aidaoteng-sentinel-dashboard.yml','DEFAULT_GROUP','','spring:\n  mvc:\n    pathmatch:\n      # 修复 sentinel 控制台未适配 springboot 2.6 新路由方式\n      matching-strategy: ANT_PATH_MATCHER\n\nserver:\n  servlet:\n    encoding:\n      force: true\n      charset: UTF-8\n      enabled: true\n    session:\n      cookie:\n        name: sentinel_dashboard_cookie\n\nlogging:\n  level:\n    org.springframework.web: INFO\n\nauth:\n  enabled: true\n  filter:\n    exclude-urls: /,/auth/login,/auth/logout,/registry/machine,/version,/actuator,/actuator/**\n    exclude-url-suffixes: htm,html,js,css,map,ico,ttf,woff,png\n  username: sentinel\n  password: sentinel\n','59055747c62f08cd2c38a6016d4b9227','2024-11-02 21:01:28','2024-11-02 13:01:28',NULL,'192.168.2.101','I','prod',''),
(0,49,'aidaoteng-snailjob-server.yml','DEFAULT_GROUP','','spring:\n  datasource:\n    type: com.zaxxer.hikari.HikariDataSource\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: ${datasource.job.url}\n    username: ${datasource.job.username}\n    password: ${datasource.job.password}\n    hikari:\n      connection-timeout: 30000\n      validation-timeout: 5000\n      minimum-idle: 10\n      maximum-pool-size: 20\n      idle-timeout: 600000\n      max-lifetime: 900000\n      keepaliveTime: 30000\n  cloud:\n    nacos:\n      discovery:\n        metadata:\n          # 解决 er 服务有 context-path 无法监控问题\n          management.context-path: ${server.servlet.context-path}/actuator\n          # 监控账号密码\n          username: ruoyi\n          userpassword: 123456\n\n# snail-job 服务端配置\nsnail-job:\n  # 拉取重试数据的每批次的大小\n  retry-pull-page-size: 1000\n  # 拉取重试数据的每批次的大小\n  job-pull-page-size: 1000\n  # 服务端 netty 端口\n  netty-port: 17888\n  # 重试和死信表的分区总数\n  total-partition: 2\n  # 一个客户端每秒最多接收的重试数量指令\n  limiter: 1000\n  # 号段模式下步长配置\n  step: 100\n  # 日志保存时间(单位: day)\n  log-storage: 90\n  # 回调配置\n  callback:\n    #回调最大执行次数\n    max-count: 288\n    #间隔时间\n    trigger-interval: 900\n  retry-max-pull-count: 10\n','ab06186a47974fd09806e48484f37a1a','2024-11-02 21:01:28','2024-11-02 13:01:28',NULL,'192.168.2.101','I','prod',''),
(116,50,'application-common.yml','DEFAULT_GROUP','','server:\n  # undertow 配置\n  undertow:\n    # HTTP post内容的最大大小。当值为-1时，默认值为大小是无限的\n    max-http-post-size: -1\n    # 以下的配置会影响buffer,这些buffer会用于服务器连接的IO操作,有点类似netty的池化内存管理\n    # 每块buffer的空间大小,越小的空间被利用越充分\n    buffer-size: 512\n    # 是否分配的直接内存\n    direct-buffers: true\n    threads:\n      # 设置IO线程数, 它主要执行非阻塞的任务,它们会负责多个连接, 默认设置每个CPU核心一个线程\n      io: 8\n      # 阻塞任务线程池, 当执行类似servlet请求阻塞操作, undertow会从这个线程池中取得线程,它的值设置取决于系统的负载\n      worker: 256\n\ndubbo:\n  application:\n    # 关闭qos端口避免单机多生产者端口冲突 如需使用自行开启\n    qos-enable: false\n  protocol:\n    # 如需使用 Triple 3.0 新协议 可查看官方文档\n    # 使用 dubbo 协议通信\n    name: dubbo\n    # dubbo 协议端口(-1表示自增端口,从20880开始)\n    port: -1\n    # 指定dubbo协议注册ip\n    # host: 192.168.0.100\n  # 消费者相关配置\n  consumer:\n    # 超时时间\n    timeout: 3000\n  # 自定义配置\n  custom:\n    # 全局请求log\n    request-log: true\n    # info 基础信息 param 参数信息 full 全部\n    log-level: info\n\nspring:\n  threads:\n    # 开启虚拟线程 仅jdk21可用\n    virtual:\n      enabled: false\n  # 资源信息\n  messages:\n    # 国际化资源文件路径\n    basename: i18n/messages\n  servlet:\n    multipart:\n      # 整个请求大小限制\n      max-request-size: 20MB\n      # 上传单个文件大小限制\n      max-file-size: 10MB\n  mvc:\n    # 设置静态资源路径 防止所有请求都去查静态资源\n    static-path-pattern: /static/**\n    format:\n      date-time: yyyy-MM-dd HH:mm:ss\n  #jackson配置\n  jackson:\n    # 日期格式化\n    date-format: yyyy-MM-dd HH:mm:ss\n    serialization:\n      # 格式化输出\n      INDENT_OUTPUT: false\n      # 忽略无法转换的对象\n      fail_on_empty_beans: false\n    deserialization:\n      # 允许对象忽略json中不存在的属性\n      fail_on_unknown_properties: false\n  cloud:\n    nacos:\n      discovery:\n        metadata:\n          # admin 监控账号密码\n          username: ruoyi\n          userpassword: 123456\n    # sentinel 配置\n    sentinel:\n      # sentinel 开关\n      enabled: true\n      transport:\n        # dashboard控制台服务名 用于服务发现\n        # 如无此配置将默认使用下方 dashboard 配置直接注册\n        server-name: ruoyi-sentinel-dashboard\n        # 客户端指定注册的ip 用于多网卡ip不稳点使用\n        # client-ip:\n        # 控制台地址 从1.3.0开始使用 server-name 注册\n        # dashboard: localhost:8718\n\n    bus:\n      id: ${spring.application.name}\n      base-packages: org.dromara.**.event\n  # 消息总线 也可以使用 kafka 参考 spring-cloud-bus 用法\n  rabbitmq:\n    host: localhost\n    port: 5672\n    username: ruoyi\n    password: ruoyi123\n\n  # redis通用配置 子服务可以自行配置进行覆盖\n  data:\n    redis:\n      host: 127.0.0.1\n      port: 6379\n      # redis 密码必须配置\n      password: admin\n      database: 0\n      # 需要使用数字\n      timeout: 10000\n      ssl.enabled: false\n\n# redisson 配置\nredisson:\n  # redis key前缀\n  keyPrefix:\n  # 线程池数量\n  threads: 4\n  # Netty线程池数量\n  nettyThreads: 8\n  # 单节点配置\n  singleServerConfig:\n    # 客户端名称\n    clientName: ${spring.application.name}\n    # 最小空闲连接数\n    connectionMinimumIdleSize: 8\n    # 连接池大小\n    connectionPoolSize: 32\n    # 连接空闲超时，单位：毫秒\n    idleConnectionTimeout: 10000\n    # 命令等待超时，单位：毫秒\n    timeout: 3000\n    # 发布和订阅连接池大小\n    subscriptionConnectionPoolSize: 50\n\n# 分布式锁 lock4j 全局配置\nlock4j:\n  # 获取分布式锁超时时间，默认为 3000 毫秒\n  acquire-timeout: 3000\n  # 分布式锁的超时时间，默认为 30 秒\n  expire: 30000\n\n# 暴露监控端点\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: \'*\'\n  endpoint:\n    health:\n      show-details: ALWAYS\n    logfile:\n      external-file: ./logs/${spring.application.name}/console.log\n\n# 日志配置\n# logging:\n#   level:\n#     org.springframework: warn\n#     org.apache.dubbo: warn\n#     com.alibaba.nacos: warn\n#     com.alibaba.cloud.sentinel: warn\n#     org.mybatis.spring.mapper: error\n#     org.apache.dubbo.config: error\n#     # 临时处理 spring 调整日志级别导致启动警告问题 不影响使用等待 alibaba 适配\n#     org.springframework.context.support.PostProcessorRegistrationDelegate: error\n#   config: classpath:logback-plus.xml\n\nlogging:\n  level:\n    root: info\n    org.dromara: trace\n\n\n# Sa-Token配置\nsa-token:\n  # token名称 (同时也是cookie名称)\n  token-name: Authorization\n  # 开启内网服务调用鉴权(不允许越过gateway访问内网服务 保障服务安全)\n  check-same-token: true\n  # 是否允许同一账号并发登录 (为true时允许一起登录, 为false时新登录挤掉旧登录)\n  is-concurrent: true\n  # 在多人登录同一账号时，是否共用一个token (为true时所有登录共用一个token, 为false时每次登录新建一个token)\n  is-share: false\n  # jwt秘钥\n  jwt-secret-key: abcdefghijklmnopqrstuvwxyz\n\n# MyBatisPlus配置\n# https://baomidou.com/config/\nmybatis-plus:\n  # 多包名使用 例如 org.dromara.**.mapper,org.xxx.**.mapper\n  mapperPackage: org.dromara.**.mapper\n  # 对应的 XML 文件位置\n  mapperLocations: classpath*:mapper/**/*Mapper.xml\n  # 实体扫描，多个package用逗号或者分号分隔\n  typeAliasesPackage: org.dromara.**.domain\n  global-config:\n    dbConfig:\n      # 主键类型\n      # AUTO 自增 NONE 空 INPUT 用户输入 ASSIGN_ID 雪花 ASSIGN_UUID 唯一 UUID\n      # 如需改为自增 需要将数据库表全部设置为自增\n      idType: ASSIGN_ID\n\n# 数据加密\nmybatis-encryptor:\n  # 是否开启加密\n  enable: false\n  # 默认加密算法\n  algorithm: BASE64\n  # 编码方式 BASE64/HEX。默认BASE64\n  encode: BASE64\n  # 安全秘钥 对称算法的秘钥 如：AES，SM4\n  password:\n  # 公私钥 非对称算法的公私钥 如：SM2，RSA\n  publicKey:\n  privateKey:\n\n# api接口加密\napi-decrypt:\n  # 是否开启全局接口加密\n  enabled: true\n  # AES 加密头标识\n  headerFlag: encrypt-key\n  # 响应加密公钥 非对称算法的公私钥 如：SM2，RSA 使用者请自行更换\n  # 对应前端解密私钥 MIIBVAIBADANBgkqhkiG9w0BAQEFAASCAT4wggE6AgEAAkEAmc3CuPiGL/LcIIm7zryCEIbl1SPzBkr75E2VMtxegyZ1lYRD+7TZGAPkvIsBcaMs6Nsy0L78n2qh+lIZMpLH8wIDAQABAkEAk82Mhz0tlv6IVCyIcw/s3f0E+WLmtPFyR9/WtV3Y5aaejUkU60JpX4m5xNR2VaqOLTZAYjW8Wy0aXr3zYIhhQQIhAMfqR9oFdYw1J9SsNc+CrhugAvKTi0+BF6VoL6psWhvbAiEAxPPNTmrkmrXwdm/pQQu3UOQmc2vCZ5tiKpW10CgJi8kCIFGkL6utxw93Ncj4exE/gPLvKcT+1Emnoox+O9kRXss5AiAMtYLJDaLEzPrAWcZeeSgSIzbL+ecokmFKSDDcRske6QIgSMkHedwND1olF8vlKsJUGK3BcdtM8w4Xq7BpSBwsloE=\n  publicKey: MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAJnNwrj4hi/y3CCJu868ghCG5dUj8wZK++RNlTLcXoMmdZWEQ/u02RgD5LyLAXGjLOjbMtC+/J9qofpSGTKSx/MCAwEAAQ==\n  # 请求解密私钥 非对称算法的公私钥 如：SM2，RSA 使用者请自行更换\n  # 对应前端加密公钥 MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAKoR8mX0rGKLqzcWmOzbfj64K8ZIgOdHnzkXSOVOZbFu/TJhZ7rFAN+eaGkl3C4buccQd/EjEsj9ir7ijT7h96MCAwEAAQ==\n  privateKey: MIIBVAIBADANBgkqhkiG9w0BAQEFAASCAT4wggE6AgEAAkEAqhHyZfSsYourNxaY7Nt+PrgrxkiA50efORdI5U5lsW79MmFnusUA355oaSXcLhu5xxB38SMSyP2KvuKNPuH3owIDAQABAkAfoiLyL+Z4lf4Myxk6xUDgLaWGximj20CUf+5BKKnlrK+Ed8gAkM0HqoTt2UZwA5E2MzS4EI2gjfQhz5X28uqxAiEA3wNFxfrCZlSZHb0gn2zDpWowcSxQAgiCstxGUoOqlW8CIQDDOerGKH5OmCJ4Z21v+F25WaHYPxCFMvwxpcw99EcvDQIgIdhDTIqD2jfYjPTY8Jj3EDGPbH2HHuffvflECt3Ek60CIQCFRlCkHpi7hthhYhovyloRYsM+IS9h/0BzlEAuO0ktMQIgSPT3aFAgJYwKpqRYKlLDVcflZFCKY7u3UP8iWi1Qw0Y=\n\n# 防止XSS攻击\nxss:\n  enabled: true\n  excludeUrls:\n    - /system/notice\n    - /workflow/model/save\n    - /workflow/model/editModelXml\n\n# 接口文档配置\nspringdoc:\n  api-docs:\n    # 是否开启接口文档\n    enabled: true\n#  swagger-ui:\n#    # 持久化认证数据\n#    persistAuthorization: true\n  info:\n    # 标题\n    title: \'标题：RuoYi-Cloud-Plus微服务权限管理系统_接口文档\'\n    # 描述\n    description: \'描述：微服务权限管理系统, 具体包括XXX,XXX模块...\'\n    # 版本\n    version: \'版本号：系统版本...\'\n    # 作者信息\n    contact:\n      name: Lion Li\n      email: crazylionli@163.com\n      url: https://gitee.com/dromara/RuoYi-Cloud-Plus\n  components:\n    # 鉴权方式配置\n    security-schemes:\n      apiKey:\n        type: APIKEY\n        in: HEADER\n        name: ${sa-token.token-name}\n\n# seata配置\nseata:\n  # 是否启用\n  enabled: false\n  # Seata 应用编号，默认为应用名\n  application-id: ${spring.application.name}\n  # Seata 事务组编号，用于 TC 集群名\n  tx-service-group: ${spring.application.name}-group\n\n# 多租户配置\ntenant:\n  # 是否开启\n  enable: false\n  # 排除表\n  excludes:\n    - sys_menu\n    - sys_tenant\n    - sys_tenant_package\n    - sys_role_dept\n    - sys_role_menu\n    - sys_user_post\n    - sys_user_role\n    - sys_client\n    - sys_oss_config\n','886c20fafba53daf81336c1afecb8c0d','2024-11-02 21:06:51','2024-11-02 13:06:52','nacos','192.168.2.101','U','prod',''),
(118,51,'aidaoteng-gateway.yml','DEFAULT_GROUP','','# 安全配置\nsecurity:\n  # 不校验白名单\n  ignore:\n    whites:\n      - /auth/code\n      - /auth/logout\n      - /auth/login\n      - /auth/binding/*\n      - /auth/social/callback\n      - /auth/register\n      - /auth/tenant/list\n      - /resource/sms/code\n      - /resource/sse/close\n      - /*/v3/api-docs\n      - /*/error\n      - /csrf\n\nspring:\n  cloud:\n    # 网关配置\n    gateway:\n      # 打印请求日志(自定义)\n      requestLog: true\n      discovery:\n        locator:\n          lowerCaseServiceId: true\n          enabled: true\n      routes:\n        # 认证中心\n        - id: ruoyi-auth\n          uri: lb://ruoyi-auth\n          predicates:\n            - Path=/auth/**\n          filters:\n            - StripPrefix=1\n        # 代码生成\n        - id: ruoyi-gen\n          uri: lb://ruoyi-gen\n          predicates:\n            - Path=/tool/**\n          filters:\n            - StripPrefix=1\n        # 系统模块\n        - id: ruoyi-system\n          uri: lb://ruoyi-system\n          predicates:\n            - Path=/system/**,/monitor/**\n          filters:\n            - StripPrefix=1\n        # 资源服务\n        - id: ruoyi-resource\n          uri: lb://ruoyi-resource\n          predicates:\n            - Path=/resource/**\n          filters:\n            - StripPrefix=1\n        # workflow服务\n        - id: ruoyi-workflow\n          uri: lb://ruoyi-workflow\n          predicates:\n            - Path=/workflow/**\n        # 演示服务\n        - id: ruoyi-demo\n          uri: lb://ruoyi-demo\n          predicates:\n            - Path=/demo/**\n          filters:\n            - StripPrefix=1\n        # MQ演示服务\n        - id: ruoyi-test-mq\n          uri: lb://ruoyi-test-mq\n          predicates:\n            - Path=/test-mq/**\n          filters:\n            - StripPrefix=1\n\n    # sentinel 配置\n    sentinel:\n      filter:\n        enabled: false\n      # nacos配置持久化\n      datasource:\n        ds1:\n          nacos:\n            server-addr: ${spring.cloud.nacos.server-addr}\n            dataId: sentinel-${spring.application.name}.json\n            groupId: ${spring.cloud.nacos.config.group}\n            username: ${spring.cloud.nacos.username}\n            password: ${spring.cloud.nacos.password}\n            namespace: ${spring.profiles.active}\n            data-type: json\n            rule-type: gw-flow\n','484e5b86b3086abeb5c992530bbd4beb','2024-11-02 21:08:25','2024-11-02 13:08:26','nacos','192.168.2.101','U','prod',''),
(116,52,'application-common.yml','DEFAULT_GROUP','','server:\n  # undertow 配置\n  undertow:\n    # HTTP post内容的最大大小。当值为-1时，默认值为大小是无限的\n    max-http-post-size: -1\n    # 以下的配置会影响buffer,这些buffer会用于服务器连接的IO操作,有点类似netty的池化内存管理\n    # 每块buffer的空间大小,越小的空间被利用越充分\n    buffer-size: 512\n    # 是否分配的直接内存\n    direct-buffers: true\n    threads:\n      # 设置IO线程数, 它主要执行非阻塞的任务,它们会负责多个连接, 默认设置每个CPU核心一个线程\n      io: 8\n      # 阻塞任务线程池, 当执行类似servlet请求阻塞操作, undertow会从这个线程池中取得线程,它的值设置取决于系统的负载\n      worker: 256\n\ndubbo:\n  application:\n    # 关闭qos端口避免单机多生产者端口冲突 如需使用自行开启\n    qos-enable: false\n  protocol:\n    # 如需使用 Triple 3.0 新协议 可查看官方文档\n    # 使用 dubbo 协议通信\n    name: dubbo\n    # dubbo 协议端口(-1表示自增端口,从20880开始)\n    port: -1\n    # 指定dubbo协议注册ip\n    # host: 192.168.0.100\n  # 消费者相关配置\n  consumer:\n    # 超时时间\n    timeout: 3000\n  # 自定义配置\n  custom:\n    # 全局请求log\n    request-log: true\n    # info 基础信息 param 参数信息 full 全部\n    log-level: info\n\nspring:\n  threads:\n    # 开启虚拟线程 仅jdk21可用\n    virtual:\n      enabled: false\n  # 资源信息\n  messages:\n    # 国际化资源文件路径\n    basename: i18n/messages\n  servlet:\n    multipart:\n      # 整个请求大小限制\n      max-request-size: 20MB\n      # 上传单个文件大小限制\n      max-file-size: 10MB\n  mvc:\n    # 设置静态资源路径 防止所有请求都去查静态资源\n    static-path-pattern: /static/**\n    format:\n      date-time: yyyy-MM-dd HH:mm:ss\n  #jackson配置\n  jackson:\n    # 日期格式化\n    date-format: yyyy-MM-dd HH:mm:ss\n    serialization:\n      # 格式化输出\n      INDENT_OUTPUT: false\n      # 忽略无法转换的对象\n      fail_on_empty_beans: false\n    deserialization:\n      # 允许对象忽略json中不存在的属性\n      fail_on_unknown_properties: false\n  cloud:\n    nacos:\n      discovery:\n        metadata:\n          # admin 监控账号密码\n          username: ruoyi\n          userpassword: 123456\n    # sentinel 配置\n    sentinel:\n      # sentinel 开关\n      enabled: false\n      transport:\n        # dashboard控制台服务名 用于服务发现\n        # 如无此配置将默认使用下方 dashboard 配置直接注册\n        server-name: ruoyi-sentinel-dashboard\n        # 客户端指定注册的ip 用于多网卡ip不稳点使用\n        # client-ip:\n        # 控制台地址 从1.3.0开始使用 server-name 注册\n        # dashboard: localhost:8718\n\n    bus:\n      id: ${spring.application.name}\n      base-packages: org.dromara.**.event\n  # 消息总线 也可以使用 kafka 参考 spring-cloud-bus 用法\n  rabbitmq:\n    host: localhost\n    port: 5672\n    username: ruoyi\n    password: ruoyi123\n\n  # redis通用配置 子服务可以自行配置进行覆盖\n  data:\n    redis:\n      host: 127.0.0.1\n      port: 6379\n      # redis 密码必须配置\n      password: admin\n      database: 0\n      # 需要使用数字\n      timeout: 10000\n      ssl.enabled: false\n\n# redisson 配置\nredisson:\n  # redis key前缀\n  keyPrefix:\n  # 线程池数量\n  threads: 4\n  # Netty线程池数量\n  nettyThreads: 8\n  # 单节点配置\n  singleServerConfig:\n    # 客户端名称\n    clientName: ${spring.application.name}\n    # 最小空闲连接数\n    connectionMinimumIdleSize: 8\n    # 连接池大小\n    connectionPoolSize: 32\n    # 连接空闲超时，单位：毫秒\n    idleConnectionTimeout: 10000\n    # 命令等待超时，单位：毫秒\n    timeout: 3000\n    # 发布和订阅连接池大小\n    subscriptionConnectionPoolSize: 50\n\n# 分布式锁 lock4j 全局配置\nlock4j:\n  # 获取分布式锁超时时间，默认为 3000 毫秒\n  acquire-timeout: 3000\n  # 分布式锁的超时时间，默认为 30 秒\n  expire: 30000\n\n# 暴露监控端点\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: \'*\'\n  endpoint:\n    health:\n      show-details: ALWAYS\n    logfile:\n      external-file: ./logs/${spring.application.name}/console.log\n\n# 日志配置\n# logging:\n#   level:\n#     org.springframework: warn\n#     org.apache.dubbo: warn\n#     com.alibaba.nacos: warn\n#     com.alibaba.cloud.sentinel: warn\n#     org.mybatis.spring.mapper: error\n#     org.apache.dubbo.config: error\n#     # 临时处理 spring 调整日志级别导致启动警告问题 不影响使用等待 alibaba 适配\n#     org.springframework.context.support.PostProcessorRegistrationDelegate: error\n#   config: classpath:logback-plus.xml\n\nlogging:\n  level:\n    root: info\n    org.dromara: trace\n\n\n# Sa-Token配置\nsa-token:\n  # token名称 (同时也是cookie名称)\n  token-name: Authorization\n  # 开启内网服务调用鉴权(不允许越过gateway访问内网服务 保障服务安全)\n  check-same-token: true\n  # 是否允许同一账号并发登录 (为true时允许一起登录, 为false时新登录挤掉旧登录)\n  is-concurrent: true\n  # 在多人登录同一账号时，是否共用一个token (为true时所有登录共用一个token, 为false时每次登录新建一个token)\n  is-share: false\n  # jwt秘钥\n  jwt-secret-key: abcdefghijklmnopqrstuvwxyz\n\n# MyBatisPlus配置\n# https://baomidou.com/config/\nmybatis-plus:\n  # 多包名使用 例如 org.dromara.**.mapper,org.xxx.**.mapper\n  mapperPackage: com.aidaoteng.**.mapper\n  # 对应的 XML 文件位置\n  mapperLocations: classpath*:mapper/**/*Mapper.xml\n  # 实体扫描，多个package用逗号或者分号分隔\n  typeAliasesPackage: com.aidaoteng.**.domain\n  global-config:\n    dbConfig:\n      # 主键类型\n      # AUTO 自增 NONE 空 INPUT 用户输入 ASSIGN_ID 雪花 ASSIGN_UUID 唯一 UUID\n      # 如需改为自增 需要将数据库表全部设置为自增\n      idType: ASSIGN_ID\n\n# 数据加密\nmybatis-encryptor:\n  # 是否开启加密\n  enable: false\n  # 默认加密算法\n  algorithm: BASE64\n  # 编码方式 BASE64/HEX。默认BASE64\n  encode: BASE64\n  # 安全秘钥 对称算法的秘钥 如：AES，SM4\n  password:\n  # 公私钥 非对称算法的公私钥 如：SM2，RSA\n  publicKey:\n  privateKey:\n\n# api接口加密\napi-decrypt:\n  # 是否开启全局接口加密\n  enabled: true\n  # AES 加密头标识\n  headerFlag: encrypt-key\n  # 响应加密公钥 非对称算法的公私钥 如：SM2，RSA 使用者请自行更换\n  # 对应前端解密私钥 MIIBVAIBADANBgkqhkiG9w0BAQEFAASCAT4wggE6AgEAAkEAmc3CuPiGL/LcIIm7zryCEIbl1SPzBkr75E2VMtxegyZ1lYRD+7TZGAPkvIsBcaMs6Nsy0L78n2qh+lIZMpLH8wIDAQABAkEAk82Mhz0tlv6IVCyIcw/s3f0E+WLmtPFyR9/WtV3Y5aaejUkU60JpX4m5xNR2VaqOLTZAYjW8Wy0aXr3zYIhhQQIhAMfqR9oFdYw1J9SsNc+CrhugAvKTi0+BF6VoL6psWhvbAiEAxPPNTmrkmrXwdm/pQQu3UOQmc2vCZ5tiKpW10CgJi8kCIFGkL6utxw93Ncj4exE/gPLvKcT+1Emnoox+O9kRXss5AiAMtYLJDaLEzPrAWcZeeSgSIzbL+ecokmFKSDDcRske6QIgSMkHedwND1olF8vlKsJUGK3BcdtM8w4Xq7BpSBwsloE=\n  publicKey: MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAJnNwrj4hi/y3CCJu868ghCG5dUj8wZK++RNlTLcXoMmdZWEQ/u02RgD5LyLAXGjLOjbMtC+/J9qofpSGTKSx/MCAwEAAQ==\n  # 请求解密私钥 非对称算法的公私钥 如：SM2，RSA 使用者请自行更换\n  # 对应前端加密公钥 MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAKoR8mX0rGKLqzcWmOzbfj64K8ZIgOdHnzkXSOVOZbFu/TJhZ7rFAN+eaGkl3C4buccQd/EjEsj9ir7ijT7h96MCAwEAAQ==\n  privateKey: MIIBVAIBADANBgkqhkiG9w0BAQEFAASCAT4wggE6AgEAAkEAqhHyZfSsYourNxaY7Nt+PrgrxkiA50efORdI5U5lsW79MmFnusUA355oaSXcLhu5xxB38SMSyP2KvuKNPuH3owIDAQABAkAfoiLyL+Z4lf4Myxk6xUDgLaWGximj20CUf+5BKKnlrK+Ed8gAkM0HqoTt2UZwA5E2MzS4EI2gjfQhz5X28uqxAiEA3wNFxfrCZlSZHb0gn2zDpWowcSxQAgiCstxGUoOqlW8CIQDDOerGKH5OmCJ4Z21v+F25WaHYPxCFMvwxpcw99EcvDQIgIdhDTIqD2jfYjPTY8Jj3EDGPbH2HHuffvflECt3Ek60CIQCFRlCkHpi7hthhYhovyloRYsM+IS9h/0BzlEAuO0ktMQIgSPT3aFAgJYwKpqRYKlLDVcflZFCKY7u3UP8iWi1Qw0Y=\n\n# 防止XSS攻击\nxss:\n  enabled: true\n  excludeUrls:\n    - /system/notice\n    - /workflow/model/save\n    - /workflow/model/editModelXml\n\n# 接口文档配置\nspringdoc:\n  api-docs:\n    # 是否开启接口文档\n    enabled: true\n#  swagger-ui:\n#    # 持久化认证数据\n#    persistAuthorization: true\n  info:\n    # 标题\n    title: \'标题：RuoYi-Cloud-Plus微服务权限管理系统_接口文档\'\n    # 描述\n    description: \'描述：微服务权限管理系统, 具体包括XXX,XXX模块...\'\n    # 版本\n    version: \'版本号：系统版本...\'\n    # 作者信息\n    contact:\n      name: Lion Li\n      email: crazylionli@163.com\n      url: https://gitee.com/dromara/RuoYi-Cloud-Plus\n  components:\n    # 鉴权方式配置\n    security-schemes:\n      apiKey:\n        type: APIKEY\n        in: HEADER\n        name: ${sa-token.token-name}\n\n# seata配置\nseata:\n  # 是否启用\n  enabled: false\n  # Seata 应用编号，默认为应用名\n  application-id: ${spring.application.name}\n  # Seata 事务组编号，用于 TC 集群名\n  tx-service-group: ${spring.application.name}-group\n\n# 多租户配置\ntenant:\n  # 是否开启\n  enable: false\n  # 排除表\n  excludes:\n    - sys_menu\n    - sys_tenant\n    - sys_tenant_package\n    - sys_role_dept\n    - sys_role_menu\n    - sys_user_post\n    - sys_user_role\n    - sys_client\n    - sys_oss_config\n','df096aa574e7ee7c5cb4bd7a3771a80a','2024-11-02 21:13:54','2024-11-02 13:13:54','nacos','0:0:0:0:0:0:0:1','U','prod','');

/*Table structure for table `permissions` */

DROP TABLE IF EXISTS `permissions`;

CREATE TABLE `permissions` (
  `role` varchar(50) COLLATE utf8mb4_general_ci NOT NULL COMMENT 'role',
  `resource` varchar(128) COLLATE utf8mb4_general_ci NOT NULL COMMENT 'resource',
  `action` varchar(8) COLLATE utf8mb4_general_ci NOT NULL COMMENT 'action',
  UNIQUE KEY `uk_role_permission` (`role`,`resource`,`action`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

/*Data for the table `permissions` */

/*Table structure for table `roles` */

DROP TABLE IF EXISTS `roles`;

CREATE TABLE `roles` (
  `username` varchar(50) COLLATE utf8mb4_general_ci NOT NULL COMMENT 'username',
  `role` varchar(50) COLLATE utf8mb4_general_ci NOT NULL COMMENT 'role',
  UNIQUE KEY `idx_user_role` (`username`,`role`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

/*Data for the table `roles` */

insert  into `roles`(`username`,`role`) values 
('nacos','ROLE_ADMIN');

/*Table structure for table `tenant_capacity` */

DROP TABLE IF EXISTS `tenant_capacity`;

CREATE TABLE `tenant_capacity` (
  `id` bigint unsigned NOT NULL AUTO_INCREMENT COMMENT '主键ID',
  `tenant_id` varchar(128) COLLATE utf8mb3_bin NOT NULL DEFAULT '' COMMENT 'Tenant ID',
  `quota` int unsigned NOT NULL DEFAULT '0' COMMENT '配额，0表示使用默认值',
  `usage` int unsigned NOT NULL DEFAULT '0' COMMENT '使用量',
  `max_size` int unsigned NOT NULL DEFAULT '0' COMMENT '单个配置大小上限，单位为字节，0表示使用默认值',
  `max_aggr_count` int unsigned NOT NULL DEFAULT '0' COMMENT '聚合子配置最大个数',
  `max_aggr_size` int unsigned NOT NULL DEFAULT '0' COMMENT '单个聚合数据的子配置大小上限，单位为字节，0表示使用默认值',
  `max_history_count` int unsigned NOT NULL DEFAULT '0' COMMENT '最大变更历史数量',
  `gmt_create` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `gmt_modified` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '修改时间',
  PRIMARY KEY (`id`),
  UNIQUE KEY `uk_tenant_id` (`tenant_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3 COLLATE=utf8mb3_bin COMMENT='租户容量信息表';

/*Data for the table `tenant_capacity` */

/*Table structure for table `tenant_info` */

DROP TABLE IF EXISTS `tenant_info`;

CREATE TABLE `tenant_info` (
  `id` bigint NOT NULL AUTO_INCREMENT COMMENT 'id',
  `kp` varchar(128) COLLATE utf8mb3_bin NOT NULL COMMENT 'kp',
  `tenant_id` varchar(128) COLLATE utf8mb3_bin DEFAULT '' COMMENT 'tenant_id',
  `tenant_name` varchar(128) COLLATE utf8mb3_bin DEFAULT '' COMMENT 'tenant_name',
  `tenant_desc` varchar(256) COLLATE utf8mb3_bin DEFAULT NULL COMMENT 'tenant_desc',
  `create_source` varchar(32) COLLATE utf8mb3_bin DEFAULT NULL COMMENT 'create_source',
  `gmt_create` bigint NOT NULL COMMENT '创建时间',
  `gmt_modified` bigint NOT NULL COMMENT '修改时间',
  PRIMARY KEY (`id`),
  UNIQUE KEY `uk_tenant_info_kptenantid` (`kp`,`tenant_id`),
  KEY `idx_tenant_id` (`tenant_id`)
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8mb3 COLLATE=utf8mb3_bin COMMENT='tenant_info';

/*Data for the table `tenant_info` */

insert  into `tenant_info`(`id`,`kp`,`tenant_id`,`tenant_name`,`tenant_desc`,`create_source`,`gmt_create`,`gmt_modified`) values 
(1,'1','dev','dev','开发环境',NULL,1641741261189,1641741261189),
(2,'1','prod','prod','生产环境',NULL,1641741270448,1641741287236);

/*Table structure for table `users` */

DROP TABLE IF EXISTS `users`;

CREATE TABLE `users` (
  `username` varchar(50) COLLATE utf8mb4_general_ci NOT NULL COMMENT 'username',
  `password` varchar(500) COLLATE utf8mb4_general_ci NOT NULL COMMENT 'password',
  `enabled` tinyint(1) NOT NULL COMMENT 'enabled',
  PRIMARY KEY (`username`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

/*Data for the table `users` */

insert  into `users`(`username`,`password`,`enabled`) values 
('nacos','$2a$10$EuWPZHzz32dJN7jexM34MOeYirDdFAZm2kuWj7VEOJhhZkDrxfvUu',1);

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;
